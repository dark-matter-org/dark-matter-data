

ClassDefinition
name 			MvcDefinition
classType   	ABSTRACT
useWrapperType	EXTENDED
isNamedBy		name
must			name
must			definedInMVCConfig
may         	file
may        		lineNumber
may         	description
description	The MvcDefinition class provide a common base for all MVC definition
 classes.

ClassDefinition
name 			MvcConfig
derivedFrom		MvcDefinition
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
must			genPackage
may         	dependsOnMVC
may				dependsOn
description The MvcConfig class is stored in a file with a .mvc suffix and used
 to define the set of files that hold the definitions of MvcEvents, MvcControllers
 and MvcViews. Based on the definition of these objects, we can generate base classes
 for the com.extjs.gxt.ui.client.mvc.Controller and com.extjs.gxt.ui.client.mvc.View
 that provide some common code required by these classes.

ClassDefinition
name 			MvcEvent
derivedFrom		MvcDefinition
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must 			name
may         	description
may				userDataType
may				isHistoryEvent
may				userDataCollection
may				userDataGenericSpec
// auto
must        	definedBy
may         	emittedBy
//may				camelCaseName
may				upperConstantName
description 	The MvcEvent class allows for the definition of events that are 
 handled or emitted by Views and Controllers. By providing a description, you
 help to document your application.

ClassDefinition
name 			MvcServerEvent
derivedFrom		MvcDefinition
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must 			name
must            eventDataType
may         	description
//auto
//may				camelCaseName

ClassDefinition
name			MvcApplication
derivedFrom		MvcDefinition
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must    		name
must			controllers
//must			prefix
must			startEvents
may				definesEvent
description 	The MvcApplication class allows for the definition of an application
 that makes uses of the ExtGWT MVC framework.

ClassDefinition
name			MvcController
derivedFrom		MvcDefinition
classType   	STRUCTURAL
isNamedBy		name
useWrapperType	EXTENDED
must    		name
may         	alias
may 			controlsView
may 			controlsMultiView
may				handlesEvent
may             handlesServerEvent
may     		dispatchesEvent
may				usesRegistryItem
may				createsRegistryItem
may				parentController
may				subpackage
// auto
//may         	definesEvent
may				definesAction
may				definesMenu
may				definesMenuItem
may				definesMenuSeparator
description 	The MvcController class allows for the definition of controllers. The
 abstract controller generated by this definition will automatically register for
 the events you specify via the handlesEvent attribute. Likewise, it will have a
 standard handleEvent() method that forwards typed events to abstract handler
 functions that you'll have to write.

ClassDefinition
name			MvcView
derivedFrom		MvcDefinition
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
may				handlesEvent
may             handlesServerEvent
may				firesEvent
may				dispatchesEvent
may				usesRegistryItem
may				createsRegistryItem
may				description
description 	The MvcView class allows for the definition of views. MvcView
 instance are derived from the ExtGWT View class.

ClassDefinition
name			MvcMultiView
derivedFrom		MvcView
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
description     The MvcMultiView provides the same functionality as an MvcView, but is
 intended to allow for the concept of a controller controlling several views of the same
 type. For instance, if you several views of different objects, you would want to be able
 have a different instance of the view for each object.

ClassDefinition
name			MvcRegistryItem
derivedFrom		MvcDefinition
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
must        	userDataType
may				userDataCollection
may				userDataGenericSpec
may				description
//may				camelCaseName
description		The MvcRegistryItem defines something that's stored in the Registry.

ClassDefinition
name			MvcAction
derivedFrom		MvcDefinition
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
must			associatedController
may				handlesEvent
// auto
//may				camelCaseName
description		The MvcAction class allows for the definition of behaviour that can
 be associated with menus, buttons and other UI components. Actions are associated
 with controllers so that they can be informed of events in which they're interested,
 since only controllers can register for events. Actions may be defined and used by 
 menu items defined in other Controllers.

ClassDefinition
name			MvcMenu
derivedFrom		MvcDefinition
classType   	ABSTRACT
useWrapperType	EXTENDED
isNamedBy		name
must			name
must			associatedController
may				customRender
description	    The MvcMenu

ClassDefinition
name			MvcMenuBar
derivedFrom		MvcMenu
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
description     The MvcMenuBar class represents a toplevel menubar and aligns to the 
 com.extjs.gxt.ui.client.widget.menu.MenuBar class.

ClassDefinition
name			MvcToolBar
derivedFrom		MvcMenu
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
description		The MvcToolBar class represents a top level toolbar and aligns to the
 com.extjs.gxt.ui.client.widget.toolbar.ToolBar class.

ClassDefinition
name			MvcSubMenu
derivedFrom		MvcMenu
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
must			addToMenu
must			menuOrder
may             displayLabel

ClassDefinition
name			MvcPopupMenu
derivedFrom		MvcMenu
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
must			useForModelClass
description     The MvcPopupMenu class is meant to allow for the definition of menus
 that can be popped up on a variety components, for instance tree nodes and table
 rows. Although implemented as standard com.extjs.gxt.ui.client.widget.menu.Menu
 instances, the display of popup menus is controlled by the MenuController infrastructure.

ClassDefinition
name			MvcBackgroundMenu
derivedFrom		MvcMenu
classType		STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
description		The MvcBackgroundMenu class is meant to allow for popup menus on the
 background of components like DmdTreePanel and DmdGrid. In these cases, objects displayed
 in the component are not selected, the menu is meant to apply to tree/grid. This is useful
 for menus that have things like Add Node or Add Row etc.

//ClassDefinition

ClassDefinition
name			MvcMenuItem
derivedFrom		MvcDefinition
classType   	STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
must			triggersAction
must			addToMenu
must			associatedController
must			menuOrder
may             displayLabel
may				customRender

ClassDefinition
name			MvcMenuSeparator
derivedFrom		MvcDefinition
classType		STRUCTURAL
useWrapperType	EXTENDED
isNamedBy		name
must			name
must			addToMenu
must			associatedController
must			menuOrder
description     The menu separator indicates where a separator should be 
 placed between menu items.

  