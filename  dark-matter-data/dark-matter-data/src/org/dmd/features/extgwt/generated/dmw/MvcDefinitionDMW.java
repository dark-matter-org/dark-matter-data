package org.dmd.features.extgwt.generated.dmw;

// Generated from:  org.dmd.dmg.generators.DMWGenerator.formatImports(DMWGenerator.java:886)
import org.dmd.dmc.*;                                                  // If any attributes
import org.dmd.dmc.types.StringName;                                   // Primitive type
import org.dmd.dms.*;                                                  // Always 2
import org.dmd.features.extgwt.extended.MvcConfig;                     // Is reference type aux
import org.dmd.features.extgwt.extended.MvcDefinition;                 // Required for getModificationRecorder()
import org.dmd.features.extgwt.generated.dmo.MvcDefinitionDMO;         // Abstract class
import org.dmd.features.extgwt.generated.types.MvcConfigREF;           // To support getMVCopy() for REFs

/**
 * The MvcDefinition class provide a common base for all MVC definition
 * classes.
 * <P>
 * Generated from the extgwt schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from:  org.dmd.dmg.generators.DMWGenerator.dumpWrapper(DMWGenerator.java:347)
 */
abstract public class MvcDefinitionDMW extends DmwWrapper implements DmcNamedObjectIF {

    protected MvcDefinitionDMW() {
        super();
    }

    abstract public MvcDefinition getModificationRecorder();

    public MvcDefinitionDMO getDMO() {
        return((MvcDefinitionDMO) core);
    }

    protected MvcDefinitionDMW(MvcDefinitionDMO obj, ClassDefinition cd) {
        super(obj,cd);
    }

    //  org.dmd.dmg.generators.DMWGenerator.getAccessFunctions(DMWGenerator.java:914)
    public StringName getObjectName(){
        return(((MvcDefinitionDMO) core).getName());
    }

    public int hashCode(){
        return(getObjectName().hashCode());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(((MvcDefinitionDMO) core).getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof MvcDefinitionDMW){
            return( getObjectName().equals( ((MvcDefinitionDMW) obj).getObjectName()) );
        }
        return(false);
    }

    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1051)
    public String getFile(){
        return(((MvcDefinitionDMO) core).getFile());
    }

    /**
     * Sets file to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1098)
    public void setFile(Object value) throws DmcValueException {
        ((MvcDefinitionDMO) core).setFile(value);
    }

    /**
     * Sets file to the specified value.
     * @param value String
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1107)
    public void setFile(String value){
        ((MvcDefinitionDMO) core).setFile(value);
    }

    /**
     * Removes the file attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1133)
    public void remFile(){
        ((MvcDefinitionDMO) core).remFile();
    }

    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1051)
    public Integer getLineNumber(){
        return(((MvcDefinitionDMO) core).getLineNumber());
    }

    /**
     * Sets lineNumber to the specified value.
     * @param value A value compatible with DmcTypeInteger
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1098)
    public void setLineNumber(Object value) throws DmcValueException {
        ((MvcDefinitionDMO) core).setLineNumber(value);
    }

    /**
     * Sets lineNumber to the specified value.
     * @param value Integer
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1107)
    public void setLineNumber(Integer value){
        ((MvcDefinitionDMO) core).setLineNumber(value);
    }

    /**
     * Removes the lineNumber attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1133)
    public void remLineNumber(){
        ((MvcDefinitionDMO) core).remLineNumber();
    }

    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1051)
    public String getDescription(){
        return(((MvcDefinitionDMO) core).getDescription());
    }

    /**
     * Sets description to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1098)
    public void setDescription(Object value) throws DmcValueException {
        ((MvcDefinitionDMO) core).setDescription(value);
    }

    /**
     * Sets description to the specified value.
     * @param value String
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1107)
    public void setDescription(String value){
        ((MvcDefinitionDMO) core).setDescription(value);
    }

    /**
     * Removes the description attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1133)
    public void remDescription(){
        ((MvcDefinitionDMO) core).remDescription();
    }

    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1051)
    public StringName getName(){
        return(((MvcDefinitionDMO) core).getName());
    }

    /**
     * Sets name to the specified value.
     * @param value A value compatible with DmcTypeStringName
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1098)
    public void setName(Object value) throws DmcValueException {
        ((MvcDefinitionDMO) core).setName(value);
    }

    /**
     * Sets name to the specified value.
     * @param value StringName
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1107)
    public void setName(StringName value){
        ((MvcDefinitionDMO) core).setName(value);
    }

    /**
     * Removes the name attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1133)
    public void remName(){
        ((MvcDefinitionDMO) core).remName();
    }

    /**
     * @return A MvcConfig object.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1030)
    public MvcConfig getDefinedInMVCConfig(){
        MvcConfigREF ref = ((MvcDefinitionDMO) core).getDefinedInMVCConfig();
        if (ref == null)
            return(null);
        
        return((MvcConfig)ref.getObject().getContainer());
    }

    /**
     * Sets the definedInMVCConfig to the specified value.
     * @param value A value compatible with MvcConfigREF
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1075)
    public void setDefinedInMVCConfig(MvcConfig value) {
        ((MvcDefinitionDMO) core).setDefinedInMVCConfig(value.getDMO());
    }

    /**
     * Removes the definedInMVCConfig attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1133)
    public void remDefinedInMVCConfig(){
        ((MvcDefinitionDMO) core).remDefinedInMVCConfig();
    }


}
