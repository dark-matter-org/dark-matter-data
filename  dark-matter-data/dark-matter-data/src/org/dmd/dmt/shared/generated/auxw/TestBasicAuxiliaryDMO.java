package org.dmd.dmt.shared.generated.auxw;

// Generated from: org.dmd.dms.util.DmoFormatter.formatImports(DmoFormatter.java:690)
import java.util.*;                                       // Always required
import org.dmd.dmc.DmcAttribute;                          // Any attributes
import org.dmd.dmc.DmcAttributeInfo;                      // Always required
import org.dmd.dmc.DmcObject;                             // Auxiliary class
import org.dmd.dmc.DmcValueException;                     // Any attributes
import org.dmd.dmc.types.DmcTypeString;                   // Required type
import org.dmd.dms.generated.enums.ValueTypeEnum;         // Always required

/**
 * The TestBasicAuxiliary class allows us to test basic auxiliary class
 * functionality.
 * <P>
 * Generated from the dmt schema at version 0.1
 * <P>
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoFormatter.dumpAUX(DmoFormatter.java:304)
 */
public class TestBasicAuxiliaryDMO  {

    public final static String _auxClass = "TestBasicAuxiliary";
    static Map<Integer,DmcAttributeInfo> _ImAp;

    static Map<String ,DmcAttributeInfo> _SmAp;

    public final static DmcAttributeInfo __svAuxString = new DmcAttributeInfo("svAuxString",818,"String",ValueTypeEnum.SINGLE,false);

    static {
        _ImAp = new HashMap<Integer,DmcAttributeInfo>();
        _ImAp.put(__svAuxString.id,__svAuxString);

        _SmAp = new HashMap<String ,DmcAttributeInfo>();
        _SmAp.put(__svAuxString.name,__svAuxString);
    }

    /**
     * This method will check to see if the object has any of our attributes.
     * If not, our aux class is automatically removed from the object.
     */
    // org.dmd.dms.util.DmoFormatter.getCommonAUXFunctions(DmoFormatter.java:369)
    static private void removeAuxIfRequired(DmcObject core){
        boolean anyLeft = false;

        if (core.get(__svAuxString) != null)
            anyLeft = true;

        if (!anyLeft)
            core.removeAux(_auxClass);
    }

    /**
     * This method will check to see if the object has our aux class.
     * If not, we add our aux class the object.
     */
    // org.dmd.dms.util.DmoFormatter.getCommonAUXFunctions(DmoFormatter.java:387)
    static private void addAuxIfRequired(DmcObject core) throws DmcValueException {
        if (!core.hasAux(_auxClass))
            core.addAux(_auxClass);
    }

    /**
     * Determines if the specified class is in our ocl.
     */
    // org.dmd.dms.util.DmoFormatter.getCommonAUXFunctions(DmoFormatter.java:397)
    static public boolean hasAux(DmcObject core) throws DmcValueException {
        if (core == null)
            return(false);
        return(core.hasAux(_auxClass));
    }

    // org.dmd.dms.util.DmoFormatter.getCommonAUXFunctions(DmoFormatter.java:406)
    static private DmcAttribute<?> get(DmcObject core, DmcAttributeInfo ai){
        if (core == null)
            return(null);
        return(core.get(ai));
    }

    // org.dmd.dms.util.DmoFormatter.getCommonAUXFunctions(DmoFormatter.java:416)
    static private DmcAttribute<?> set(DmcObject core, DmcAttributeInfo ai, DmcAttribute attr) throws DmcValueException {
        if (core == null)
            return(null);
        addAuxIfRequired(core);
        return(core.set(ai,attr));
    }

    /**
     * Removes the svAuxString attribute from the object.
     */
    // org.dmd.dms.util.DmoFormatter.formatSVAUX(DmoFormatter.java:1088)
    static public DmcAttribute<?> remSvAuxString(DmcObject core){
        if (core == null)
            return(null);
        DmcAttribute<?> rc = core.rem(__svAuxString);
        removeAuxIfRequired(core);
        return(rc);
    }

    // org.dmd.dms.util.DmoFormatter.formatSVAUX(DmoFormatter.java:1121)
    static public String getSvAuxString(DmcObject core){
        DmcTypeString attr = (DmcTypeString) get(core, __svAuxString);
        if (attr == null)
            return(null);

        return(attr.getSV());
    }

    /**
     * Sets svAuxString to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    // org.dmd.dms.util.DmoFormatter.formatSVAUX(DmoFormatter.java:1144)
    static public void setSvAuxString(DmcObject core, Object value) throws DmcValueException {
        DmcAttribute<?> attr = get(core, __svAuxString);
        if (attr == null)
            attr = new DmcTypeString();
        
        attr.set(value);
        set(core, __svAuxString,attr);
    }




}
