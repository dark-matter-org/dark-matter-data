package org.dmd.dmt.shared.generated.dmo;

// Generated from: org.dmd.dms.util.GenUtility.formatImports(GenUtility.java:363)
import java.io.Serializable;                                  // Always required - (GenUtility.java:197)
import java.util.*;                                           // Always required if we have any MV attributes - (GenUtility.java:193)
import org.dmd.dmc.DmcAttribute;                              // Any attributes - (GenUtility.java:213)
import org.dmd.dmc.DmcObject;                                 // Structural class - (GenUtility.java:319)
import org.dmd.dmc.DmcSliceInfo;                              // Required for object slicing - (GenUtility.java:202)
import org.dmd.dmc.DmcValueException;                         // Any attributes - (GenUtility.java:214)
import org.dmd.dms.generated.dmo.MetaDMSAG;                   // Required for MODREC constructor - (GenUtility.java:201)
import org.dmd.dms.generated.types.DmcTypeModifierMV;         // Required for MODREC constructor - (GenUtility.java:200)
import org.dmd.dms.generated.types.DmcTypeStringMV;           // Required type - (GenUtility.java:296)

import org.dmd.dms.generated.dmo.MetaVCAG;
import org.dmd.dmc.DmcAttributeValidator;
import org.dmd.dmc.DmcObjectValidator;

/**
 * null
 * <P>
 * Generated from the dmt schema at version 0.1
 * <P>
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoFormatter.dumpDMO(DmoFormatter.java:133)
 */
@SuppressWarnings("serial")
public class PrimitiveMVIDXDMO  extends DmcObject  implements Serializable  {

    public final static String constructionClassName = "PrimitiveMVIDX";

    static Map<Integer,HashMap<String,DmcAttributeValidator>> _AvDmAp;

    static Map<String ,DmcObjectValidator> _OvDmAp;


    static {

        _AvDmAp = new HashMap<Integer,HashMap<String,DmcAttributeValidator>>();

        _OvDmAp = new HashMap<String,DmcObjectValidator>();
        _OvDmAp.put(MetaVCAG.__AttributeSetValidator.getName(),MetaVCAG.__AttributeSetValidator);
    }

    public PrimitiveMVIDXDMO() {
        super("PrimitiveMVIDX");
    }

    protected PrimitiveMVIDXDMO(String oc) {
        super(oc);
    }

    protected Map<Integer,HashMap<String,DmcAttributeValidator>> getAttributeValidators(){
        return(_AvDmAp);
    }

    protected Map<String,DmcObjectValidator> getObjectValidators(){
        return(_OvDmAp);
    }

    @Override
    public PrimitiveMVIDXDMO getNew(){
        PrimitiveMVIDXDMO rc = new PrimitiveMVIDXDMO();
        return(rc);
    }

    @Override
    public PrimitiveMVIDXDMO getSlice(DmcSliceInfo info){
        PrimitiveMVIDXDMO rc = new PrimitiveMVIDXDMO();
        populateSlice(rc,info);
        return(rc);
    }

    public PrimitiveMVIDXDMO(DmcTypeModifierMV mods) {
        super("PrimitiveMVIDX");
        modrec(true);
        setModifier(mods);
    }

    public PrimitiveMVIDXDMO getModificationRecorder(){
        PrimitiveMVIDXDMO rc = new PrimitiveMVIDXDMO();
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        rc.modrec(true);
        return(rc);
    }

    /**
     * @return An Iterator of String objects.
     */
    @SuppressWarnings("unchecked")
    // org.dmd.dms.util.GenUtility.formatMV(GenUtility.java:1018)
    public Iterator<String> getMvIdxString(){
        DmcTypeStringMV attr = (DmcTypeStringMV) get(DmtDMSAG.__mvIdxString);
        if (attr == null)
            return( ((List<String>) Collections.EMPTY_LIST).iterator());

        return(attr.getMV());
    }

    /**
     * @return The nth String value.
     */
    // org.dmd.dms.util.GenUtility.formatMV(GenUtility.java:1030)
    public String getNthMvIdxString(int i){
        DmcTypeStringMV attr = (DmcTypeStringMV) get(DmtDMSAG.__mvIdxString);
        if (attr == null)
            return(null);

        return(attr.getMVnth(i));
    }

    /**
     * Adds another mvIdxString to the specified value.
     * @param value String
     */
    // org.dmd.dms.util.GenUtility.formatMV(GenUtility.java:1044)
    public DmcAttribute<?> addMvIdxString(String value) {
        DmcAttribute<?> attr = get(DmtDMSAG.__mvIdxString);
        if (attr == null)
            attr = new DmcTypeStringMV(DmtDMSAG.__mvIdxString);
        
        try{
            setLastValue(attr.add(value));
            add(DmtDMSAG.__mvIdxString,attr);
        }
        catch(DmcValueException ex){
            throw(new IllegalStateException("The type specific add() method shouldn't throw exceptions!",ex));
        }
        return(attr);
    }

    /**
     * Returns true if we contain a valued keyed by the specified String.
     * @param value String
     */
    // org.dmd.dms.util.GenUtility.formatMV(GenUtility.java:1119)
    public boolean mvIdxStringContains(String value) {
        DmcAttribute<?> attr = get(DmtDMSAG.__mvIdxString);
        if (attr == null)
            return(false);
        return(attr.contains(value));
    }

    /**
     * Adds another mvIdxString value.
     * @param value A value compatible with String
     */
    // org.dmd.dms.util.GenUtility.formatMV(GenUtility.java:1151)
    public DmcAttribute<?> addMvIdxString(Object value) throws DmcValueException {
        DmcAttribute<?> attr = get(DmtDMSAG.__mvIdxString);
        if (attr == null)
            attr = new DmcTypeStringMV(DmtDMSAG.__mvIdxString);
        
        setLastValue(attr.add(value));
        add(DmtDMSAG.__mvIdxString,attr);
        return(attr);
    }

    /**
     * Returns the number of values in mvIdxString
     */
    // org.dmd.dms.util.GenUtility.formatMV(GenUtility.java:1168)
    public int getMvIdxStringSize(){
        DmcAttribute<?> attr = get(DmtDMSAG.__mvIdxString);
        if (attr == null){
            if (DmtDMSAG.__mvIdxString.indexSize == 0)
                return(0);
            else
                return(DmtDMSAG.__mvIdxString.indexSize);
        }
        return(attr.getMVSize());
    }

    /**
     * Deletes a mvIdxString value.
     * @param value The String to be deleted from set of attribute values.
     */
    // org.dmd.dms.util.GenUtility.formatMV(GenUtility.java:1226)
    public DmcAttribute<?> delMvIdxString(Object value) throws DmcValueException {
        DmcAttribute<?> attr = get(DmtDMSAG.__mvIdxString);
        
        if ( (attr == null) && (getModifier()!= null))
            delFromEmptyAttribute(new DmcTypeStringMV(DmtDMSAG.__mvIdxString), value);
        else
            attr = del(DmtDMSAG.__mvIdxString, value);
        
        return(attr);
    }

    /**
     * Deletes a mvIdxString from the specified value.
     * @param value String
     */
    // org.dmd.dms.util.GenUtility.formatMV(GenUtility.java:1242)
    public DmcAttribute<?> delMvIdxString(String value) {
        DmcAttribute<?> attr = get(DmtDMSAG.__mvIdxString);
        
        if ( (attr == null) && (getModifier()!= null))
            delFromEmptyAttribute(new DmcTypeStringMV(DmtDMSAG.__mvIdxString), value);
        else
            attr = del(DmtDMSAG.__mvIdxString, value);
        
        return(attr);
    }

    /**
     * Removes the mvIdxString attribute value.
     */
    // org.dmd.dms.util.GenUtility.formatMV(GenUtility.java:1261)
    public void remMvIdxString(){
         rem(DmtDMSAG.__mvIdxString);
    }




}
