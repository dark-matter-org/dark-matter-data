ClassDefinition
name 			MvwDefinition
classType   	ABSTRACT
useWrapperType	EXTENDED
isNamedBy		camelCaseName
must			camelCaseName
must			definedInModule
may         	file
may        		lineNumber
may         	description
description		The MvwDefinition class provide a common base for all MVW definition
 classes.

//ClassDefinition
//name 			MvwConfig
//derivedFrom		MvwDefinition
//classType   	STRUCTURAL
//useWrapperType	EXTENDED
//isNamedBy		camelCaseName
//must			camelCaseName
//must			genPackage
//may         	dependsOnMvw
//description The MvwConfig class is stored in a file with a .mvw suffix and contains
// various Model View Whatever (MVW) definitions. The name of the MvwConfig can be
// referred to via the dependsOnMvw attribute so that MVW definitions defined elsewhere
// can be used.

ClassDefinition
name			MvwEvent
classType       ABSTRACT
useWrapperType	EXTENDED
derivedFrom		MvwDefinition
isNamedBy		eventName
must			eventName
may				description
may             argVector
may             userDataImport
description		The MvwEvent is an autonomous definition of some kind of event that is fired
 and handled by components in a Model-View-Whatever application. Specification of an MvwEvent
 will result the creation of a GwtEvent.Type<H> class and its associated EventHandler class.

//ClassDefinition
//name			LocalEvent
//classType       STRUCTURAL
//useWrapperType	EXTENDED
//derivedFrom		MvwEvent
//isNamedBy		eventCause
//must			eventCause
//description		The LocalEvent is fired by producers that want to define a tightly bound
// event interface so that consumers can register just for events that the producer fires.
 
ClassDefinition
name			BroadcastEvent
classType       STRUCTURAL
useWrapperType	EXTENDED
derivedFrom		MvwEvent
isNamedBy		eventName
must			eventName
description		The BroadcastEvent is fired by producers that want to publish an event on
 the Event Bus.

ClassDefinition
name			Event
classType       STRUCTURAL
useWrapperType	EXTENDED
derivedFrom		MvwDefinition
isNamedBy		eventName
must			eventName
may             argVector
may				importThis
description		The specification of an Event definition will result in the creation of
 a gwtEvent and its associated handler interface.


ClassDefinition
name			SingleDMOSelectedEvent
classType       STRUCTURAL
useWrapperType	EXTENDED
derivedFrom		BroadcastEvent
isNamedBy		eventName
must			eventName
must			selectedDMO
description		The SingleDMOSelectedEvent is a BroadcastEvent that indicates that a single 
 Dark Matter Object has been selected, usually in an MvwView component. By defining an event
 of this type, your component will have the event added to its event interface and, when that
 event is fired, the framework will also fire a generic DMO event that is handled by the 
 MvwSelectionManager component. 

ClassDefinition
name			MultipleDMOSelectedEvent
classType       STRUCTURAL
useWrapperType	EXTENDED
derivedFrom		BroadcastEvent
isNamedBy		eventName
must			eventName
must			selectedDMO
description		The MultipleDMOSelectedEvent is a BroadcastEvent that indicates that multiple
 DMOs have been selected. As with the single select event, a generic DMO event that is
 handled by the MvwSelectionManager is fired as well.

ClassDefinition
name			Module
classType       STRUCTURAL
useWrapperType	EXTENDED
derivedFrom		MvwDefinition
isNamedBy		moduleName
must			moduleName
must			genPackage
may				dependsOnModule
may				dependsOnSchema
description		The Module is used to define a reusable set of MVW functionality which
 can be referred to in Application definitions or other Module definitions. 

ClassDefinition
name			Component
classType       ABSTRACT
useWrapperType	EXTENDED
derivedFrom		MvwDefinition
isNamedBy		componentName
must			componentName
may				firesEvent
may				handlesEvent
description		The Component is an abstract base for classes that define the building blocks
 of Applications. The primary feature of an Component is that it fires and/or handles events.
 Beyond that, a component can be whatever you require it to be. A variety of derived component types
 provide more focussed behavioural units.

ClassDefinition
name			View
classType       STRUCTURAL
derivedFrom		MvwDefinition
useWrapperType	EXTENDED
isNamedBy		viewName
must			viewName
may				useBaseClass
may				local
may				broadcast
may				broadcastOnly
may				viewImport
may				presenterImport
may				sharedImport
//
may				useRunContextItem
//
may				isWidget
may				extendsInterface
//may				broadcast
//may				broadcastOnly
may				presenterMethod
may				viewMethod
may				displayDMO
may				selectEvent
may				deleteEvent
may				clickEvent
may				modifyEvent
may				createEvent
description		The View is used to define the aspects of two kinds of interfaces that
 define the functionality provided by a view of a model; the event interface and the 
 data interface.

ClassDefinition
name			Controller
classType       STRUCTURAL
useWrapperType	EXTENDED
derivedFrom		Component
isNamedBy		controllerName
must			controllerName
may				useBaseClass
may				useRunContextItem

ClassDefinition
name			Presenter
classType       STRUCTURAL
useWrapperType	EXTENDED
derivedFrom		Component
isNamedBy		presenterName
must			presenterName
may				useBaseClass
may				useRunContextItem

ClassDefinition
name			Activity
classType       STRUCTURAL
useWrapperType	EXTENDED
derivedFrom		Component
isNamedBy		activityName
must			activityName
may				useBaseClass
may				useRunContextItem
description		If you are making use of activities, you'll define an Activity for
 each of them; all activities are derived from com.google.gwt.app.place.Activity. If you
 have common functionality that you wish to use for your Activity classes, implement
 it in a class derived from com.google.gwt.app.place.Activity and specify that class
 in the useBaseClass attribute of your defined Activity.
 <P>
 Activities are meant to be short-lived, disposable entities.

ClassDefinition
name			RunContextItem
classType		STRUCTURAL
derivedFrom		MvwDefinition
useWrapperType	EXTENDED
isNamedBy		itemName
must			itemName
must			useClass
must			construction
may				itemOrder
may				contextImpl
may				importThis
description		The RunContextItem allows for the generation of an overall RunContext for
 a WebApplication or WebSite.
 
ClassDefinition
name			WebApplication
classType		STRUCTURAL
derivedFrom		MvwDefinition
useWrapperType	EXTENDED
isNamedBy		appName
must			appName
description		The WebApplication definition allows for the definition of the superstructure
 for an application, basically it's the definition of the overall application controller. 
