//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2010 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.dmr.server.base.generated.dmw;

// Generated from:  org.dmd.dmg.generators.DMWGenerator.formatImports(DMWGenerator.java:722)
import org.dmd.dmc.*;                                                   // If any attributes
import org.dmd.dmc.types.StringName;                                    // Primitive type
import org.dmd.dmr.server.base.extended.HierarchicObject;               // Derived class
import org.dmd.dmr.shared.base.generated.dmo.DotNamedObjectDMO;         // Class not auxiliary or abstract
import org.dmd.dms.*;                                                   // Always 2

/**
 * A DotNamedObject is a hierarchic object whose fully qualified name is
 * composed of naming attributes separated by periods. For example 
 * grandparent.parent.child. <p> The naming attribute of a DotNamedObject is
 * name. Unlike LDAP objects,  we don't bother making this configurable. When
 * a DotNamedObject is parsed from a file, we check to see if the name
 * attribute has a value; if not, we take the last portion of the FQN as the
 * name. For example, if the FQN is x.y.z, the name of the object would be
 * 'z'.
 * <P>
 * Generated from the dmr.base schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from:  org.dmd.dmg.generators.DMWGenerator.dumpWrapper(DMWGenerator.java:339)
 */
abstract public class DotNamedObjectDMW extends HierarchicObject implements DmcNamedObjectIF {

    private DotNamedObjectDMO mycore;

    public DotNamedObjectDMW() {
        super(new DotNamedObjectDMO(), org.dmd.dmr.server.base.generated.DmrBaseSchemaAG._DotNamedObject);
        mycore = (DotNamedObjectDMO) core;
        mycore.setContainer(this);
    }

    public DotNamedObjectDMW(DotNamedObjectDMO obj) {
        super(obj, org.dmd.dmr.server.base.generated.DmrBaseSchemaAG._DotNamedObject);
        mycore = (DotNamedObjectDMO) core;
        mycore.setContainer(this);
    }

    @Override
    public void setDmcObject(DmcObject obj) {
        mycore = (DotNamedObjectDMO) obj;
        mycore.setContainer(this);
        super.setDmcObject(obj);
    }

    public DotNamedObjectDMO getDMO() {
        return(mycore);
    }

    protected DotNamedObjectDMW(DotNamedObjectDMO obj, ClassDefinition cd) {
        super(obj,cd);
        mycore = (DotNamedObjectDMO) core;
    }

    //  org.dmd.dmg.generators.DMWGenerator.getAccessFunctions(DMWGenerator.java:748)
    public StringName getObjectName(){
        return(mycore.getFQN());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(mycore.getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof DotNamedObjectDMW){
            return( getObjectName().equals( ((DotNamedObjectDMW) obj).getObjectName()) );
        }
        return(false);
    }

    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:846)
    public StringName getFQN(){
        return(mycore.getFQN());
    }

    /**
     * Sets FQN to the specified value.
     * @param value A value compatible with DmcTypeStringName
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:873)
    public void setFQN(Object value) throws DmcValueException {
        mycore.setFQN(value);
    }

    /**
     * Sets FQN to the specified value.
     * @param value StringName
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:882)
    public void setFQN(StringName value){
        mycore.setFQN(value);
    }

    /**
     * Removes the FQN attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:897)
    public void remFQN(){
        mycore.remFQN();
    }


}
