//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2010 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.dmp.server.generated;

import org.dmd.dmc.DmcOmni;
import org.dmd.dmc.DmcValueException;
import org.dmd.dms.*;
import org.dmd.dms.generated.dmo.*;
import org.dmd.dmp.shared.generated.dmo.DmpDMSAG;


/**
 * The Dark Matter Protocol (DMP) is a general purpose data
 * access/manipulation protocol that provides operations for log in, log out,
 * CRUD behaviour, event notification and remote method invocation. The
 * protocol concepts are based on the old Open Systems  Interaction (OSI)
 * Common Management Information Protocol (CMIP) and, as such, are also
 * designed to operate against hierarchies of objects (although flat object
 * structures are perfectly allowable).
 * <P>
 * Generated from the dmp schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:160)
 */
public class DmpSchemaAG extends SchemaDefinition {

    public static ClassDefinition _DMPMessage;
    public static ClassDefinition _Request;
    public static ClassDefinition _Response;
    public static ClassDefinition _LoginRequest;
    public static ClassDefinition _LoginResponse;
    public static ClassDefinition _LogoutRequest;
    public static ClassDefinition _LogoutResponse;
    public static ClassDefinition _GetRequest;
    public static ClassDefinition _GetResponse;
    public static ClassDefinition _ActionRequest;
    public static ClassDefinition _ActionResponse;
    public static ClassDefinition _SetRequest;
    public static ClassDefinition _SetResponse;
    public static ClassDefinition _CreateRequest;
    public static ClassDefinition _CreateResponse;
    public static ClassDefinition _DeleteRequest;
    public static ClassDefinition _DeleteResponse;
    public static ClassDefinition _DMPEvent;
    public static ClassDefinition _NotifyRequest;
    public static ClassDefinition _NotifyResponse;
    public static ClassDefinition _DenotifyRequest;
    public static ClassDefinition _DenotifyResponse;
    public static ClassDefinition _PreAuthRequest;
    public static ClassDefinition _PreAuthResponse;

    public static AttributeDefinition _requestID;
    public static AttributeDefinition _sessionID;
    public static AttributeDefinition _requestRoot;
    public static AttributeDefinition _responseType;
    public static AttributeDefinition _responseCategory;
    public static AttributeDefinition _responseText;
    public static AttributeDefinition _FQNList;
    public static AttributeDefinition _target;
    public static AttributeDefinition _sourceObjectClass;
    public static AttributeDefinition _lastResponse;
    public static AttributeDefinition _scope;
    public static AttributeDefinition _objectList;
    public static AttributeDefinition _newObject;
    public static AttributeDefinition _sourceObject;
    public static AttributeDefinition _actionName;
    public static AttributeDefinition _responseFormat;
    public static AttributeDefinition _readableFormat;
    public static AttributeDefinition _timeMS;
    public static AttributeDefinition _blockingFactor;
    public static AttributeDefinition _filter;
    public static AttributeDefinition _filterByClass;
    public static AttributeDefinition _eventTypeDMP;
    public static AttributeDefinition _userFQN;
    public static AttributeDefinition _actionTrigger;
    public static AttributeDefinition _originatorID;
    public static AttributeDefinition _notifyOriginator;
    public static AttributeDefinition _parentName;
    public static AttributeDefinition _registerForEvents;
    public static AttributeDefinition _handlerID;
    public static AttributeDefinition _source;
    public static AttributeDefinition _attributeSelector;
    public static AttributeDefinition _cacheResponse;
    public static AttributeDefinition _slice;
    public static AttributeDefinition _targetObjectClass;
    public static AttributeDefinition _targets;
    public static AttributeDefinition _listenerID;
    public static AttributeDefinition _trackingEnabled;
    public static AttributeDefinition _timeoutSeconds;
    public static AttributeDefinition _appName;
    public static AttributeDefinition _appVersion;
    public static AttributeDefinition _myOwnEvent;



    public static EnumDefinition _ScopeEnum;
    public static EnumDefinition _DMPEventTypeEnum;
    public static EnumDefinition _FileModeEnum;
    public static EnumDefinition _ResponseTypeEnum;
    public static EnumDefinition _ResponseCategoryEnum;
    public static EnumDefinition _ResponseFormatEnum;

    static DmpSchemaAG instance;

    public DmpSchemaAG() throws DmcValueException {
        generatedSchema = true;
        staticRefName   = "org.dmd.dmp.server.generated.DmpSchemaAG";

        dependsOnSchemaClasses.put("dmr.base","org.dmd.dmr.server.base.generated.DmrBaseSchemaAG");

    }

    private void initialize() throws DmcValueException {
        if (instance == null){
            instance        = this;
            SchemaDefinitionDMO me = (SchemaDefinitionDMO) this.getDmcObject();
            me.setName("dmp");
            me.setSchemaPackage("org.dmd.dmp.shared");
            me.setDmwPackage("org.dmd.dmp.server");
            me.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/dmp.dms");


            me.addDependsOn("dmr.base");
            dependsOnSchemaClasses.put("dmr.base","org.dmd.dmr.server.base.generated.DmrBaseSchemaAG");


            initClasses();
            initAttributes();
            initTypes();
            initActions();
            initEnums();
            DmcOmni.instance().addCompactSchema(DmpDMSAG.instance());
        }
    }

    private void initClasses() throws DmcValueException {
            ClassDefinitionDMO _DMPMessageOBJ = new ClassDefinitionDMO();
            _DMPMessage = new ClassDefinition(_DMPMessageOBJ);
            _DMPMessageOBJ.setName("DMPMessage");
            _DMPMessageOBJ.setDmdID("501");
            _DMPMessageOBJ.setClassType("ABSTRACT");
            _DMPMessageOBJ.addExcludeFromContext("gxt");
            _DMPMessageOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _DMPMessageOBJ.setLineNumber("16");
            _DMPMessageOBJ.setDescription("The DMPMessage class provides a common base for all messages that comprise the Dark Matter Protocol (DMP).");
            _DMPMessageOBJ.setUseWrapperType("EXTENDED");
            _DMPMessageOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.DMPMessageREF");
            _DMPMessageOBJ.setUsesInterface("de.novanic.eventservice.client.event.Event");
            _DMPMessageOBJ.setDmwIteratorClass("DMPMessageIterableDMW");
            _DMPMessageOBJ.addMay("timeMS");
            _DMPMessageOBJ.addMay("trackingEnabled");
            _DMPMessageOBJ.addMust("requestID");
            _DMPMessageOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.DMPMessageIterableDMW");
            _DMPMessageOBJ.setSupportsBackrefTracking("false");
            _DMPMessage.setDefinedIn(this);
            addClassDefList(_DMPMessage);

            ClassDefinitionDMO _RequestOBJ = new ClassDefinitionDMO();
            _Request = new ClassDefinition(_RequestOBJ);
            _RequestOBJ.setName("Request");
            _RequestOBJ.setDmdID("502");
            _RequestOBJ.setClassType("ABSTRACT");
            _RequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _RequestOBJ.setLineNumber("31");
            _RequestOBJ.setDescription("The request class provides a common base for all request messages.");
            _RequestOBJ.setDerivedFrom("DMPMessage");
            _RequestOBJ.setUseWrapperType("EXTENDED");
            _RequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.RequestREF");
            _RequestOBJ.setDmwIteratorClass("RequestIterableDMW");
            _RequestOBJ.addMay("handlerID");
            _RequestOBJ.addMay("sessionID");
            _RequestOBJ.addMay("readableFormat");
            _RequestOBJ.addMay("responseFormat");
            _RequestOBJ.addMay("originatorID");
            _RequestOBJ.addMay("timeoutSeconds");
            _RequestOBJ.addMay("notifyOriginator");
            _RequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.RequestIterableDMW");
            _Request.setDefinedIn(this);
            addClassDefList(_Request);

            ClassDefinitionDMO _ResponseOBJ = new ClassDefinitionDMO();
            _Response = new ClassDefinition(_ResponseOBJ);
            _ResponseOBJ.setName("Response");
            _ResponseOBJ.setDmdID("503");
            _ResponseOBJ.setClassType("STRUCTURAL");
            _ResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _ResponseOBJ.setLineNumber("47");
            _ResponseOBJ.setDescription("The Response class serves as a common base for all response messages. It used to be that the Response was abstract, but because we could receive a completely unknown request (for instance via a JSON/XML interface), we had to have the ability to return a generic error response.");
            _ResponseOBJ.setDerivedFrom("DMPMessage");
            _ResponseOBJ.setUseWrapperType("EXTENDED");
            _ResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.ResponseREF");
            _ResponseOBJ.setUsesInterface("de.novanic.eventservice.client.event.Event");
            _ResponseOBJ.setDmwIteratorClass("ResponseIterableDMW");
            _ResponseOBJ.addMay("handlerID");
            _ResponseOBJ.addMay("responseText");
            _ResponseOBJ.addMay("responseCategory");
            _ResponseOBJ.addMust("lastResponse");
            _ResponseOBJ.addMust("responseType");
            _ResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.ResponseIterableDMW");
            _Response.setDefinedIn(this);
            addClassDefList(_Response);

            ClassDefinitionDMO _LoginRequestOBJ = new ClassDefinitionDMO();
            _LoginRequest = new ClassDefinition(_LoginRequestOBJ);
            _LoginRequestOBJ.setName("LoginRequest");
            _LoginRequestOBJ.setDmdID("504");
            _LoginRequestOBJ.setClassType("STRUCTURAL");
            _LoginRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _LoginRequestOBJ.setLineNumber("58");
            _LoginRequestOBJ.setDescription("The LoginRequest allows you to connect to connect to something and pass along credentials.");
            _LoginRequestOBJ.setDerivedFrom("Request");
            _LoginRequestOBJ.setUseWrapperType("EXTENDED");
            _LoginRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.LoginRequestREF");
            _LoginRequestOBJ.setDmwIteratorClass("LoginRequestIterableDMW");
            _LoginRequestOBJ.addMust("userName");
            _LoginRequestOBJ.addMust("password");
            _LoginRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.LoginRequestIterableDMW");
            _LoginRequest.setDefinedIn(this);
            addClassDefList(_LoginRequest);

            ClassDefinitionDMO _LoginResponseOBJ = new ClassDefinitionDMO();
            _LoginResponse = new ClassDefinition(_LoginResponseOBJ);
            _LoginResponseOBJ.setName("LoginResponse");
            _LoginResponseOBJ.setDmdID("505");
            _LoginResponseOBJ.setClassType("STRUCTURAL");
            _LoginResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _LoginResponseOBJ.setLineNumber("79");
            _LoginResponseOBJ.setDescription("The LoginResponse is returned after a Login request is received. If the login is successful, a session ID will be assigned and a request root will be given. All subsequent requests must contain the session ID and all requests will be checked to ensure that they pertain to objects at or below the request root. <p/> The response may also have an originatorID that is a unique identifier assigned by the  server. In some systems, this identifier will be stamped on all incoming requests and passed through to the events that are generated as a result of those requests. In this way, a client can tell whether the events it receives came from its own requests or from requests made by other clients.");
            _LoginResponseOBJ.setDerivedFrom("Response");
            _LoginResponseOBJ.setUseWrapperType("EXTENDED");
            _LoginResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.LoginResponseREF");
            _LoginResponseOBJ.setDmwIteratorClass("LoginResponseIterableDMW");
            _LoginResponseOBJ.addMay("sessionID");
            _LoginResponseOBJ.addMay("originatorID");
            _LoginResponseOBJ.addMay("requestRoot");
            _LoginResponseOBJ.addMay("userFQN");
            _LoginResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.LoginResponseIterableDMW");
            _LoginResponse.setDefinedIn(this);
            addClassDefList(_LoginResponse);

            ClassDefinitionDMO _LogoutRequestOBJ = new ClassDefinitionDMO();
            _LogoutRequest = new ClassDefinition(_LogoutRequestOBJ);
            _LogoutRequestOBJ.setName("LogoutRequest");
            _LogoutRequestOBJ.setDmdID("506");
            _LogoutRequestOBJ.setClassType("STRUCTURAL");
            _LogoutRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _LogoutRequestOBJ.setLineNumber("89");
            _LogoutRequestOBJ.setDescription("The LogoutRequest allows you to disconnect from your current session.");
            _LogoutRequestOBJ.setDerivedFrom("Request");
            _LogoutRequestOBJ.setUseWrapperType("EXTENDED");
            _LogoutRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.LogoutRequestREF");
            _LogoutRequestOBJ.setDmwIteratorClass("LogoutRequestIterableDMW");
            _LogoutRequestOBJ.addMust("userName");
            _LogoutRequestOBJ.addMust("sessionID");
            _LogoutRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.LogoutRequestIterableDMW");
            _LogoutRequest.setDefinedIn(this);
            addClassDefList(_LogoutRequest);

            ClassDefinitionDMO _LogoutResponseOBJ = new ClassDefinitionDMO();
            _LogoutResponse = new ClassDefinition(_LogoutResponseOBJ);
            _LogoutResponseOBJ.setName("LogoutResponse");
            _LogoutResponseOBJ.setDmdID("507");
            _LogoutResponseOBJ.setClassType("STRUCTURAL");
            _LogoutResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _LogoutResponseOBJ.setLineNumber("99");
            _LogoutResponseOBJ.setDescription("The LogoutResponse will indicate that you have successfully terminated your current session.");
            _LogoutResponseOBJ.setDerivedFrom("Response");
            _LogoutResponseOBJ.setUseWrapperType("EXTENDED");
            _LogoutResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.LogoutResponseREF");
            _LogoutResponseOBJ.setDmwIteratorClass("LogoutResponseIterableDMW");
            _LogoutResponseOBJ.addMust("sessionID");
            _LogoutResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.LogoutResponseIterableDMW");
            _LogoutResponse.setDefinedIn(this);
            addClassDefList(_LogoutResponse);

            ClassDefinitionDMO _GetRequestOBJ = new ClassDefinitionDMO();
            _GetRequest = new ClassDefinition(_GetRequestOBJ);
            _GetRequestOBJ.setName("GetRequest");
            _GetRequestOBJ.setDmdID("508");
            _GetRequestOBJ.setClassType("STRUCTURAL");
            _GetRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _GetRequestOBJ.setLineNumber("117");
            _GetRequestOBJ.setDescription("The GetRequest is used to retrieve objects.");
            _GetRequestOBJ.setDerivedFrom("Request");
            _GetRequestOBJ.setUseWrapperType("EXTENDED");
            _GetRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.GetRequestREF");
            _GetRequestOBJ.setDmwIteratorClass("GetRequestIterableDMW");
            _GetRequestOBJ.addMay("targets");
            _GetRequestOBJ.addMay("filter");
            _GetRequestOBJ.addMay("filterByClass");
            _GetRequestOBJ.addMay("blockingFactor");
            _GetRequestOBJ.addMay("registerForEvents");
            _GetRequestOBJ.addMay("attributeSelector");
            _GetRequestOBJ.addMay("cacheResponse");
            _GetRequestOBJ.addMay("slice");
            _GetRequestOBJ.addMay("classFilter");
            _GetRequestOBJ.addMust("scope");
            _GetRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.GetRequestIterableDMW");
            _GetRequest.setDefinedIn(this);
            addClassDefList(_GetRequest);

            ClassDefinitionDMO _GetResponseOBJ = new ClassDefinitionDMO();
            _GetResponse = new ClassDefinition(_GetResponseOBJ);
            _GetResponseOBJ.setName("GetResponse");
            _GetResponseOBJ.setDmdID("509");
            _GetResponseOBJ.setClassType("STRUCTURAL");
            _GetResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _GetResponseOBJ.setLineNumber("132");
            _GetResponseOBJ.setDescription("The GetResponse returns a set of objects. If you had set registerForEvents to true in the GetRequest, the listenerID will be the identifier that you will need to specify in the DenotifyRequest in order to denotify for events on the objects you initially retrieved.");
            _GetResponseOBJ.setDerivedFrom("Response");
            _GetResponseOBJ.setUseWrapperType("EXTENDED");
            _GetResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.GetResponseREF");
            _GetResponseOBJ.setDmwIteratorClass("GetResponseIterableDMW");
            _GetResponseOBJ.addMay("targets");
            _GetResponseOBJ.addMay("objectList");
            _GetResponseOBJ.addMay("cacheResponse");
            _GetResponseOBJ.addMay("listenerID");
            _GetResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.GetResponseIterableDMW");
            _GetResponse.setDefinedIn(this);
            addClassDefList(_GetResponse);

            ClassDefinitionDMO _ActionRequestOBJ = new ClassDefinitionDMO();
            _ActionRequest = new ClassDefinition(_ActionRequestOBJ);
            _ActionRequestOBJ.setName("ActionRequest");
            _ActionRequestOBJ.setDmdID("510");
            _ActionRequestOBJ.setClassType("EXTENSIBLE");
            _ActionRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _ActionRequestOBJ.setLineNumber("145");
            _ActionRequestOBJ.setDescription("The ActionRequest is used to trigger behaviour on one or more objects.");
            _ActionRequestOBJ.setDerivedFrom("Request");
            _ActionRequestOBJ.setUseWrapperType("EXTENDED");
            _ActionRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.ActionRequestREF");
            _ActionRequestOBJ.setDmwIteratorClass("ActionRequestIterableDMW");
            _ActionRequestOBJ.addMay("scope");
            _ActionRequestOBJ.addMay("objectList");
            _ActionRequestOBJ.addMay("actionTrigger");
            _ActionRequestOBJ.addMust("FQN");
            _ActionRequestOBJ.addMust("actionName");
            _ActionRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.ActionRequestIterableDMW");
            _ActionRequest.setDefinedIn(this);
            addClassDefList(_ActionRequest);

            ClassDefinitionDMO _ActionResponseOBJ = new ClassDefinitionDMO();
            _ActionResponse = new ClassDefinition(_ActionResponseOBJ);
            _ActionResponseOBJ.setName("ActionResponse");
            _ActionResponseOBJ.setDmdID("511");
            _ActionResponseOBJ.setClassType("EXTENSIBLE");
            _ActionResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _ActionResponseOBJ.setLineNumber("157");
            _ActionResponseOBJ.setDescription("The ActionResponse returns the results of a particular ActionRequest. Exactly what is returned will depend on the efActionDef.");
            _ActionResponseOBJ.setDerivedFrom("Response");
            _ActionResponseOBJ.setUseWrapperType("EXTENDED");
            _ActionResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.ActionResponseREF");
            _ActionResponseOBJ.setDmwIteratorClass("ActionResponseIterableDMW");
            _ActionResponseOBJ.addMay("objectList");
            _ActionResponseOBJ.addMust("timeMS");
            _ActionResponseOBJ.addMust("actionName");
            _ActionResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.ActionResponseIterableDMW");
            _ActionResponse.setDefinedIn(this);
            addClassDefList(_ActionResponse);

            ClassDefinitionDMO _SetRequestOBJ = new ClassDefinitionDMO();
            _SetRequest = new ClassDefinition(_SetRequestOBJ);
            _SetRequestOBJ.setName("SetRequest");
            _SetRequestOBJ.setDmdID("512");
            _SetRequestOBJ.setClassType("STRUCTURAL");
            _SetRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _SetRequestOBJ.setLineNumber("170");
            _SetRequestOBJ.setDescription("The SetRequest allows you to alter the attribute values associated with an object. Like the get request, the set of attributes that can be manipulated will depend on the object type that is specified.");
            _SetRequestOBJ.setDerivedFrom("Request");
            _SetRequestOBJ.setUseWrapperType("EXTENDED");
            _SetRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.SetRequestREF");
            _SetRequestOBJ.setDmwIteratorClass("SetRequestIterableDMW");
            _SetRequestOBJ.addMay("targetObjectClass");
            _SetRequestOBJ.addMust("target");
            _SetRequestOBJ.addMust("modify");
            _SetRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.SetRequestIterableDMW");
            _SetRequest.setDefinedIn(this);
            addClassDefList(_SetRequest);

            ClassDefinitionDMO _SetResponseOBJ = new ClassDefinitionDMO();
            _SetResponse = new ClassDefinition(_SetResponseOBJ);
            _SetResponseOBJ.setName("SetResponse");
            _SetResponseOBJ.setDmdID("513");
            _SetResponseOBJ.setClassType("EXTENSIBLE");
            _SetResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _SetResponseOBJ.setLineNumber("182");
            _SetResponseOBJ.setDescription("The SetResponse returns the results of a particular SetRequest. The objectList will contain the objects with the previously specified edits.");
            _SetResponseOBJ.setDerivedFrom("Response");
            _SetResponseOBJ.setUseWrapperType("EXTENDED");
            _SetResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.SetResponseREF");
            _SetResponseOBJ.setDmwIteratorClass("SetResponseIterableDMW");
            _SetResponseOBJ.addMay("objectList");
            _SetResponseOBJ.addMust("timeMS");
            _SetResponseOBJ.addMust("target");
            _SetResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.SetResponseIterableDMW");
            _SetResponse.setDefinedIn(this);
            addClassDefList(_SetResponse);

            ClassDefinitionDMO _CreateRequestOBJ = new ClassDefinitionDMO();
            _CreateRequest = new ClassDefinition(_CreateRequestOBJ);
            _CreateRequestOBJ.setName("CreateRequest");
            _CreateRequestOBJ.setDmdID("514");
            _CreateRequestOBJ.setClassType("STRUCTURAL");
            _CreateRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _CreateRequestOBJ.setLineNumber("194");
            _CreateRequestOBJ.setDescription("The CreateRequest allows you to create a new object. If the parentName is specified, the object will be created beneath that parent object.");
            _CreateRequestOBJ.setDerivedFrom("Request");
            _CreateRequestOBJ.setUseWrapperType("EXTENDED");
            _CreateRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.CreateRequestREF");
            _CreateRequestOBJ.setDmwIteratorClass("CreateRequestIterableDMW");
            _CreateRequestOBJ.addMay("parentName");
            _CreateRequestOBJ.addMust("requestID");
            _CreateRequestOBJ.addMust("newObject");
            _CreateRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.CreateRequestIterableDMW");
            _CreateRequest.setDefinedIn(this);
            addClassDefList(_CreateRequest);

            ClassDefinitionDMO _CreateResponseOBJ = new ClassDefinitionDMO();
            _CreateResponse = new ClassDefinition(_CreateResponseOBJ);
            _CreateResponseOBJ.setName("CreateResponse");
            _CreateResponseOBJ.setDmdID("515");
            _CreateResponseOBJ.setClassType("STRUCTURAL");
            _CreateResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _CreateResponseOBJ.setLineNumber("205");
            _CreateResponseOBJ.setDescription("The CreateResponse returns the results of a particular CreateRequest. The objectList contents will be implementation specific e.g. if there were problems with object creation there may be error indications.");
            _CreateResponseOBJ.setDerivedFrom("Response");
            _CreateResponseOBJ.setUseWrapperType("EXTENDED");
            _CreateResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.CreateResponseREF");
            _CreateResponseOBJ.setDmwIteratorClass("CreateResponseIterableDMW");
            _CreateResponseOBJ.addMay("objectList");
            _CreateResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.CreateResponseIterableDMW");
            _CreateResponse.setDefinedIn(this);
            addClassDefList(_CreateResponse);

            ClassDefinitionDMO _DeleteRequestOBJ = new ClassDefinitionDMO();
            _DeleteRequest = new ClassDefinition(_DeleteRequestOBJ);
            _DeleteRequestOBJ.setName("DeleteRequest");
            _DeleteRequestOBJ.setDmdID("516");
            _DeleteRequestOBJ.setClassType("STRUCTURAL");
            _DeleteRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _DeleteRequestOBJ.setLineNumber("217");
            _DeleteRequestOBJ.setDescription("The DeleteRequest allows you to delete one or more objects. If no scope is specified, the scope is assumed to be BASE i.e. just the specific object indicated by the targets. The behaviour of this request is implementation specific.");
            _DeleteRequestOBJ.setDerivedFrom("Request");
            _DeleteRequestOBJ.setUseWrapperType("EXTENDED");
            _DeleteRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.DeleteRequestREF");
            _DeleteRequestOBJ.setDmwIteratorClass("DeleteRequestIterableDMW");
            _DeleteRequestOBJ.addMay("scope");
            _DeleteRequestOBJ.addMust("targets");
            _DeleteRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.DeleteRequestIterableDMW");
            _DeleteRequest.setDefinedIn(this);
            addClassDefList(_DeleteRequest);

            ClassDefinitionDMO _DeleteResponseOBJ = new ClassDefinitionDMO();
            _DeleteResponse = new ClassDefinition(_DeleteResponseOBJ);
            _DeleteResponseOBJ.setName("DeleteResponse");
            _DeleteResponseOBJ.setDmdID("517");
            _DeleteResponseOBJ.setClassType("STRUCTURAL");
            _DeleteResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _DeleteResponseOBJ.setLineNumber("228");
            _DeleteResponseOBJ.setDescription("The DeleteResponse returns the results of a particular DeleteRequest. The objectList contents will be implementation specific e.g. if there were problems with object deletion there may be error indications.");
            _DeleteResponseOBJ.setDerivedFrom("Response");
            _DeleteResponseOBJ.setUseWrapperType("EXTENDED");
            _DeleteResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.DeleteResponseREF");
            _DeleteResponseOBJ.setDmwIteratorClass("DeleteResponseIterableDMW");
            _DeleteResponseOBJ.addMay("objectList");
            _DeleteResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.DeleteResponseIterableDMW");
            _DeleteResponse.setDefinedIn(this);
            addClassDefList(_DeleteResponse);

            ClassDefinitionDMO _DMPEventOBJ = new ClassDefinitionDMO();
            _DMPEvent = new ClassDefinition(_DMPEventOBJ);
            _DMPEventOBJ.setName("DMPEvent");
            _DMPEventOBJ.setDmdID("518");
            _DMPEventOBJ.setClassType("STRUCTURAL");
            _DMPEventOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _DMPEventOBJ.setLineNumber("248");
            _DMPEventOBJ.setDescription("The Event class allows for the asynchronous notification of noteworthy system events.");
            _DMPEventOBJ.setDerivedFrom("DMPMessage");
            _DMPEventOBJ.setUseWrapperType("EXTENDED");
            _DMPEventOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.DMPEventREF");
            _DMPEventOBJ.setUsesInterface("de.novanic.eventservice.client.event.Event");
            _DMPEventOBJ.setDmwIteratorClass("DMPEventIterableDMW");
            _DMPEventOBJ.addMay("source");
            _DMPEventOBJ.addMay("sourceObjectClass");
            _DMPEventOBJ.addMay("modify");
            _DMPEventOBJ.addMay("sourceObject");
            _DMPEventOBJ.addMay("originatorID");
            _DMPEventOBJ.addMay("handlerID");
            _DMPEventOBJ.addMay("notifyOriginator");
            _DMPEventOBJ.addMay("slice");
            _DMPEventOBJ.addMay("listenerID");
            _DMPEventOBJ.addMay("myOwnEvent");
            _DMPEventOBJ.addMust("eventTypeDMP");
            _DMPEventOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.DMPEventIterableDMW");
            _DMPEvent.setDefinedIn(this);
            addClassDefList(_DMPEvent);

            ClassDefinitionDMO _NotifyRequestOBJ = new ClassDefinitionDMO();
            _NotifyRequest = new ClassDefinition(_NotifyRequestOBJ);
            _NotifyRequestOBJ.setName("NotifyRequest");
            _NotifyRequestOBJ.setDmdID("519");
            _NotifyRequestOBJ.setClassType("STRUCTURAL");
            _NotifyRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _NotifyRequestOBJ.setLineNumber("260");
            _NotifyRequestOBJ.setDescription("The NotifyRequest allows you to register for events on an arbitrary object or set of objects.");
            _NotifyRequestOBJ.setDerivedFrom("Request");
            _NotifyRequestOBJ.setUseWrapperType("EXTENDED");
            _NotifyRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.NotifyRequestREF");
            _NotifyRequestOBJ.setDmwIteratorClass("NotifyRequestIterableDMW");
            _NotifyRequestOBJ.addMay("scope");
            _NotifyRequestOBJ.addMay("filter");
            _NotifyRequestOBJ.addMust("target");
            _NotifyRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.NotifyRequestIterableDMW");
            _NotifyRequest.setDefinedIn(this);
            addClassDefList(_NotifyRequest);

            ClassDefinitionDMO _NotifyResponseOBJ = new ClassDefinitionDMO();
            _NotifyResponse = new ClassDefinition(_NotifyResponseOBJ);
            _NotifyResponseOBJ.setName("NotifyResponse");
            _NotifyResponseOBJ.setDmdID("520");
            _NotifyResponseOBJ.setClassType("STRUCTURAL");
            _NotifyResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _NotifyResponseOBJ.setLineNumber("268");
            _NotifyResponseOBJ.setDescription("The NotifyResponse is sent as the result of a NotifyRequest.");
            _NotifyResponseOBJ.setDerivedFrom("Response");
            _NotifyResponseOBJ.setUseWrapperType("EXTENDED");
            _NotifyResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.NotifyResponseREF");
            _NotifyResponseOBJ.setDmwIteratorClass("NotifyResponseIterableDMW");
            _NotifyResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.NotifyResponseIterableDMW");
            _NotifyResponse.setDefinedIn(this);
            addClassDefList(_NotifyResponse);

            ClassDefinitionDMO _DenotifyRequestOBJ = new ClassDefinitionDMO();
            _DenotifyRequest = new ClassDefinition(_DenotifyRequestOBJ);
            _DenotifyRequestOBJ.setName("DenotifyRequest");
            _DenotifyRequestOBJ.setDmdID("521");
            _DenotifyRequestOBJ.setClassType("STRUCTURAL");
            _DenotifyRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _DenotifyRequestOBJ.setLineNumber("281");
            _DenotifyRequestOBJ.setDescription("The DenotifyRequest allows you to deregister for event notification on one or more objects.");
            _DenotifyRequestOBJ.setDerivedFrom("Request");
            _DenotifyRequestOBJ.setUseWrapperType("EXTENDED");
            _DenotifyRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.DenotifyRequestREF");
            _DenotifyRequestOBJ.setDmwIteratorClass("DenotifyRequestIterableDMW");
            _DenotifyRequestOBJ.addMay("listenerID");
            _DenotifyRequestOBJ.addMay("scope");
            _DenotifyRequestOBJ.addMay("filter");
            _DenotifyRequestOBJ.addMust("target");
            _DenotifyRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.DenotifyRequestIterableDMW");
            _DenotifyRequest.setDefinedIn(this);
            addClassDefList(_DenotifyRequest);

            ClassDefinitionDMO _DenotifyResponseOBJ = new ClassDefinitionDMO();
            _DenotifyResponse = new ClassDefinition(_DenotifyResponseOBJ);
            _DenotifyResponseOBJ.setName("DenotifyResponse");
            _DenotifyResponseOBJ.setDmdID("522");
            _DenotifyResponseOBJ.setClassType("STRUCTURAL");
            _DenotifyResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _DenotifyResponseOBJ.setLineNumber("292");
            _DenotifyResponseOBJ.setDescription("The DenotifyResponse is sent as a result of a DenotifyRequest.");
            _DenotifyResponseOBJ.setDerivedFrom("Response");
            _DenotifyResponseOBJ.setUseWrapperType("EXTENDED");
            _DenotifyResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.DenotifyResponseREF");
            _DenotifyResponseOBJ.setDmwIteratorClass("DenotifyResponseIterableDMW");
            _DenotifyResponseOBJ.addMay("target");
            _DenotifyResponseOBJ.addMay("scope");
            _DenotifyResponseOBJ.addMay("filter");
            _DenotifyResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.DenotifyResponseIterableDMW");
            _DenotifyResponse.setDefinedIn(this);
            addClassDefList(_DenotifyResponse);

            ClassDefinitionDMO _PreAuthRequestOBJ = new ClassDefinitionDMO();
            _PreAuthRequest = new ClassDefinition(_PreAuthRequestOBJ);
            _PreAuthRequestOBJ.setName("PreAuthRequest");
            _PreAuthRequestOBJ.setDmdID("523");
            _PreAuthRequestOBJ.setClassType("STRUCTURAL");
            _PreAuthRequestOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _PreAuthRequestOBJ.setLineNumber("302");
            _PreAuthRequestOBJ.setDescription("The PreAuthRequest allows for the retrieval of information from the servlet before a user has authenticated. Exactly what type of information can be  retrieved is application specific.");
            _PreAuthRequestOBJ.setDerivedFrom("Request");
            _PreAuthRequestOBJ.setUseWrapperType("EXTENDED");
            _PreAuthRequestOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.PreAuthRequestREF");
            _PreAuthRequestOBJ.setDmwIteratorClass("PreAuthRequestIterableDMW");
            _PreAuthRequestOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.PreAuthRequestIterableDMW");
            _PreAuthRequest.setDefinedIn(this);
            addClassDefList(_PreAuthRequest);

            ClassDefinitionDMO _PreAuthResponseOBJ = new ClassDefinitionDMO();
            _PreAuthResponse = new ClassDefinition(_PreAuthResponseOBJ);
            _PreAuthResponseOBJ.setName("PreAuthResponse");
            _PreAuthResponseOBJ.setDmdID("524");
            _PreAuthResponseOBJ.setClassType("STRUCTURAL");
            _PreAuthResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/classes2.dmd");
            _PreAuthResponseOBJ.setLineNumber("311");
            _PreAuthResponseOBJ.setDescription("The PreAuthResponse is sent as a result of a PreAuthRequest.");
            _PreAuthResponseOBJ.setDerivedFrom("Response");
            _PreAuthResponseOBJ.setUseWrapperType("EXTENDED");
            _PreAuthResponseOBJ.setDmtREFImport("org.dmd.dmp.shared.generated.types.PreAuthResponseREF");
            _PreAuthResponseOBJ.setDmwIteratorClass("PreAuthResponseIterableDMW");
            _PreAuthResponseOBJ.addMay("appName");
            _PreAuthResponseOBJ.addMay("appVersion");
            _PreAuthResponseOBJ.setDmwIteratorImport("org.dmd.dmp.server.generated.dmw.PreAuthResponseIterableDMW");
            _PreAuthResponse.setDefinedIn(this);
            addClassDefList(_PreAuthResponse);

    }

    private void initAttributes() throws DmcValueException {
            AttributeDefinitionDMO _requestIDOBJ = new AttributeDefinitionDMO();
            _requestID = new AttributeDefinition(_requestIDOBJ);
            _requestIDOBJ.setType("Integer");
            _requestIDOBJ.setName("requestID");
            _requestIDOBJ.setDmdID("501");
            _requestIDOBJ.setDescription("A unique identifier that is generated on a client to distinguish the responses that are associated with a given request.");
            _requestIDOBJ.setValueType("MULTI");
            _requestID.setDefinedIn(this);
            _requestIDOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _requestIDOBJ.setLineNumber("9");
            addAttributeDefList(_requestID);

            AttributeDefinitionDMO _sessionIDOBJ = new AttributeDefinitionDMO();
            _sessionID = new AttributeDefinition(_sessionIDOBJ);
            _sessionIDOBJ.setType("String");
            _sessionIDOBJ.setName("sessionID");
            _sessionIDOBJ.setDmdID("502");
            _sessionIDOBJ.setDescription("A unique identifier that identifies a client session with the server.");
            _sessionID.setDefinedIn(this);
            _sessionIDOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _sessionIDOBJ.setLineNumber("15");
            addAttributeDefList(_sessionID);

            AttributeDefinitionDMO _requestRootOBJ = new AttributeDefinitionDMO();
            _requestRoot = new AttributeDefinition(_requestRootOBJ);
            _requestRootOBJ.setType("String");
            _requestRootOBJ.setName("requestRoot");
            _requestRootOBJ.setDmdID("503");
            _requestRootOBJ.setDescription("For a set of objects stored in a hierarchic name space, this will be prefix beneath which all objects managed through the interface will reside.");
            _requestRoot.setDefinedIn(this);
            _requestRootOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _requestRootOBJ.setLineNumber("22");
            addAttributeDefList(_requestRoot);

            AttributeDefinitionDMO _responseTypeOBJ = new AttributeDefinitionDMO();
            _responseType = new AttributeDefinition(_responseTypeOBJ);
            _responseTypeOBJ.setType("ResponseTypeEnum");
            _responseTypeOBJ.setName("responseType");
            _responseTypeOBJ.setDmdID("504");
            _responseTypeOBJ.setDescription("Indicates the category of response, success, failure, warning etc.");
            _responseType.setDefinedIn(this);
            _responseTypeOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _responseTypeOBJ.setLineNumber("28");
            addAttributeDefList(_responseType);

            AttributeDefinitionDMO _responseCategoryOBJ = new AttributeDefinitionDMO();
            _responseCategory = new AttributeDefinition(_responseCategoryOBJ);
            _responseCategoryOBJ.setType("ResponseCategoryEnum");
            _responseCategoryOBJ.setName("responseCategory");
            _responseCategoryOBJ.setDmdID("505");
            _responseCategoryOBJ.setDescription("Indicates the category of a response.");
            _responseCategory.setDefinedIn(this);
            _responseCategoryOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _responseCategoryOBJ.setLineNumber("34");
            addAttributeDefList(_responseCategory);

            AttributeDefinitionDMO _responseTextOBJ = new AttributeDefinitionDMO();
            _responseText = new AttributeDefinition(_responseTextOBJ);
            _responseTextOBJ.setType("String");
            _responseTextOBJ.setName("responseText");
            _responseTextOBJ.setDmdID("506");
            _responseTextOBJ.setDescription("Textual information associated with a response.");
            _responseText.setDefinedIn(this);
            _responseTextOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _responseTextOBJ.setLineNumber("40");
            addAttributeDefList(_responseText);

            AttributeDefinitionDMO _FQNListOBJ = new AttributeDefinitionDMO();
            _FQNList = new AttributeDefinition(_FQNListOBJ);
            _FQNListOBJ.setType("String");
            _FQNListOBJ.setName("FQNList");
            _FQNListOBJ.setDmdID("507");
            _FQNListOBJ.setDescription("A set of fully qualified names.");
            _FQNListOBJ.setValueType("MULTI");
            _FQNList.setDefinedIn(this);
            _FQNListOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _FQNListOBJ.setLineNumber("63");
            addAttributeDefList(_FQNList);

            AttributeDefinitionDMO _targetOBJ = new AttributeDefinitionDMO();
            _target = new AttributeDefinition(_targetOBJ);
            _targetOBJ.setType("NameContainer");
            _targetOBJ.setName("target");
            _targetOBJ.setDmdID("508");
            _targetOBJ.setDescription("The target of a request. This is the contained name of the object.");
            _target.setDefinedIn(this);
            _targetOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _targetOBJ.setLineNumber("69");
            addAttributeDefList(_target);

            AttributeDefinitionDMO _sourceObjectClassOBJ = new AttributeDefinitionDMO();
            _sourceObjectClass = new AttributeDefinition(_sourceObjectClassOBJ);
            _sourceObjectClassOBJ.setType("ClassDefinition");
            _sourceObjectClassOBJ.setName("sourceObjectClass");
            _sourceObjectClassOBJ.setDmdID("509");
            _sourceObjectClassOBJ.setDescription("The construction class name of the source of an event.");
            _sourceObjectClass.setDefinedIn(this);
            _sourceObjectClassOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _sourceObjectClassOBJ.setLineNumber("75");
            addAttributeDefList(_sourceObjectClass);

            AttributeDefinitionDMO _lastResponseOBJ = new AttributeDefinitionDMO();
            _lastResponse = new AttributeDefinition(_lastResponseOBJ);
            _lastResponseOBJ.setType("Boolean");
            _lastResponseOBJ.setName("lastResponse");
            _lastResponseOBJ.setDmdID("510");
            _lastResponseOBJ.setDescription("Flag that indicates if this is the last response to a request. NOTE: this defaults to true if not specified, since most requests result in a single response.");
            _lastResponseOBJ.setNullReturnValue("true");
            _lastResponse.setDefinedIn(this);
            _lastResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _lastResponseOBJ.setLineNumber("83");
            addAttributeDefList(_lastResponse);

            AttributeDefinitionDMO _scopeOBJ = new AttributeDefinitionDMO();
            _scope = new AttributeDefinition(_scopeOBJ);
            _scopeOBJ.setType("ScopeEnum");
            _scopeOBJ.setName("scope");
            _scopeOBJ.setDmdID("511");
            _scopeOBJ.setDescription("Indicates the scope of an operation applied to a hierarchy of objects.");
            _scope.setDefinedIn(this);
            _scopeOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _scopeOBJ.setLineNumber("89");
            addAttributeDefList(_scope);

            AttributeDefinitionDMO _objectListOBJ = new AttributeDefinitionDMO();
            _objectList = new AttributeDefinition(_objectListOBJ);
            _objectListOBJ.setType("DmcObject");
            _objectListOBJ.setName("objectList");
            _objectListOBJ.setDmdID("512");
            _objectListOBJ.setDescription("A set of objects returned from the server.");
            _objectListOBJ.setValueType("MULTI");
            _objectList.setDefinedIn(this);
            _objectListOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _objectListOBJ.setLineNumber("96");
            addAttributeDefList(_objectList);

            AttributeDefinitionDMO _newObjectOBJ = new AttributeDefinitionDMO();
            _newObject = new AttributeDefinition(_newObjectOBJ);
            _newObjectOBJ.setType("DmcObject");
            _newObjectOBJ.setName("newObject");
            _newObjectOBJ.setDmdID("513");
            _newObjectOBJ.setDescription("A new object to be created.");
            _newObject.setDefinedIn(this);
            _newObjectOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _newObjectOBJ.setLineNumber("102");
            addAttributeDefList(_newObject);

            AttributeDefinitionDMO _sourceObjectOBJ = new AttributeDefinitionDMO();
            _sourceObject = new AttributeDefinition(_sourceObjectOBJ);
            _sourceObjectOBJ.setType("DmcObject");
            _sourceObjectOBJ.setName("sourceObject");
            _sourceObjectOBJ.setDmdID("514");
            _sourceObjectOBJ.setDescription("The object associated with an event. This is generally only seen in create events, but there's nothing to prevent you from sending it in other events.");
            _sourceObject.setDefinedIn(this);
            _sourceObjectOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _sourceObjectOBJ.setLineNumber("109");
            addAttributeDefList(_sourceObject);

            AttributeDefinitionDMO _actionNameOBJ = new AttributeDefinitionDMO();
            _actionName = new AttributeDefinition(_actionNameOBJ);
            _actionNameOBJ.setType("String");
            _actionNameOBJ.setName("actionName");
            _actionNameOBJ.setDmdID("515");
            _actionNameOBJ.setDescription("The name of an action to be triggered.");
            _actionName.setDefinedIn(this);
            _actionNameOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _actionNameOBJ.setLineNumber("115");
            addAttributeDefList(_actionName);

            AttributeDefinitionDMO _responseFormatOBJ = new AttributeDefinitionDMO();
            _responseFormat = new AttributeDefinition(_responseFormatOBJ);
            _responseFormatOBJ.setType("ResponseFormatEnum");
            _responseFormatOBJ.setName("responseFormat");
            _responseFormatOBJ.setDmdID("516");
            _responseFormatOBJ.setDescription("When the protocol is used for a JSON interface, the response format indicates whether the client wants the results as a flat set of objects (STANDARD) or as hierarchy of child objects embedded in arrays beneath their parents (DOM).");
            _responseFormat.setDefinedIn(this);
            _responseFormatOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _responseFormatOBJ.setLineNumber("129");
            addAttributeDefList(_responseFormat);

            AttributeDefinitionDMO _readableFormatOBJ = new AttributeDefinitionDMO();
            _readableFormat = new AttributeDefinition(_readableFormatOBJ);
            _readableFormatOBJ.setType("Boolean");
            _readableFormatOBJ.setName("readableFormat");
            _readableFormatOBJ.setDmdID("517");
            _readableFormatOBJ.setDescription("A flag that indicates if you want a response in a human readable format with  formatting. The default is to use the most compact form - no additional whitespace and no newlines.");
            _readableFormat.setDefinedIn(this);
            _readableFormatOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _readableFormatOBJ.setLineNumber("137");
            addAttributeDefList(_readableFormat);

            AttributeDefinitionDMO _timeMSOBJ = new AttributeDefinitionDMO();
            _timeMS = new AttributeDefinition(_timeMSOBJ);
            _timeMSOBJ.setType("Long");
            _timeMSOBJ.setName("timeMS");
            _timeMSOBJ.setDmdID("518");
            _timeMSOBJ.setDescription("A time stamp in milliseconds.");
            _timeMS.setDefinedIn(this);
            _timeMSOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _timeMSOBJ.setLineNumber("143");
            addAttributeDefList(_timeMS);

            AttributeDefinitionDMO _blockingFactorOBJ = new AttributeDefinitionDMO();
            _blockingFactor = new AttributeDefinition(_blockingFactorOBJ);
            _blockingFactorOBJ.setType("Integer");
            _blockingFactorOBJ.setName("blockingFactor");
            _blockingFactorOBJ.setDmdID("519");
            _blockingFactorOBJ.setDescription("The number of objects to be returned in a block in a GetResponse. If not specified, the server will attempt to return all requested objects in a single response.");
            _blockingFactor.setDefinedIn(this);
            _blockingFactorOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _blockingFactorOBJ.setLineNumber("150");
            addAttributeDefList(_blockingFactor);

            AttributeDefinitionDMO _filterOBJ = new AttributeDefinitionDMO();
            _filter = new AttributeDefinition(_filterOBJ);
            _filterOBJ.setType("String");
            _filterOBJ.setName("filter");
            _filterOBJ.setDmdID("520");
            _filterOBJ.setDescription("Currently a place holder for the eventually filter implementation.");
            _filter.setDefinedIn(this);
            _filterOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _filterOBJ.setLineNumber("156");
            addAttributeDefList(_filter);

            AttributeDefinitionDMO _filterByClassOBJ = new AttributeDefinitionDMO();
            _filterByClass = new AttributeDefinition(_filterByClassOBJ);
            _filterByClassOBJ.setType("ClassDefinition");
            _filterByClassOBJ.setName("filterByClass");
            _filterByClassOBJ.setDmdID("521");
            _filterByClassOBJ.setDescription("Expedient way to ask for just objects of a particular class.");
            _filterByClass.setDefinedIn(this);
            _filterByClassOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _filterByClassOBJ.setLineNumber("162");
            addAttributeDefList(_filterByClass);

            AttributeDefinitionDMO _eventTypeDMPOBJ = new AttributeDefinitionDMO();
            _eventTypeDMP = new AttributeDefinition(_eventTypeDMPOBJ);
            _eventTypeDMPOBJ.setType("DMPEventTypeEnum");
            _eventTypeDMPOBJ.setName("eventTypeDMP");
            _eventTypeDMPOBJ.setDmdID("523");
            _eventTypeDMPOBJ.setDescription("The eventTypeDMP indicates the nature of an event.");
            _eventTypeDMP.setDefinedIn(this);
            _eventTypeDMPOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _eventTypeDMPOBJ.setLineNumber("175");
            addAttributeDefList(_eventTypeDMP);

            AttributeDefinitionDMO _userFQNOBJ = new AttributeDefinitionDMO();
            _userFQN = new AttributeDefinition(_userFQNOBJ);
            _userFQNOBJ.setType("String");
            _userFQNOBJ.setName("userFQN");
            _userFQNOBJ.setDmdID("524");
            _userFQNOBJ.setDescription("The fully qualified name of a user.");
            _userFQN.setDefinedIn(this);
            _userFQNOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _userFQNOBJ.setLineNumber("181");
            addAttributeDefList(_userFQN);

            AttributeDefinitionDMO _actionTriggerOBJ = new AttributeDefinitionDMO();
            _actionTrigger = new AttributeDefinition(_actionTriggerOBJ);
            _actionTriggerOBJ.setType("DmcObject");
            _actionTriggerOBJ.setName("actionTrigger");
            _actionTriggerOBJ.setDmdID("525");
            _actionTriggerOBJ.setDescription("The action trigger information i.e. an associated parameters for the action.");
            _actionTrigger.setDefinedIn(this);
            _actionTriggerOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _actionTriggerOBJ.setLineNumber("187");
            addAttributeDefList(_actionTrigger);

            AttributeDefinitionDMO _originatorIDOBJ = new AttributeDefinitionDMO();
            _originatorID = new AttributeDefinition(_originatorIDOBJ);
            _originatorIDOBJ.setType("Integer");
            _originatorIDOBJ.setName("originatorID");
            _originatorIDOBJ.setDmdID("526");
            _originatorIDOBJ.setDescription("The thing that originated a request.");
            _originatorID.setDefinedIn(this);
            _originatorIDOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _originatorIDOBJ.setLineNumber("193");
            addAttributeDefList(_originatorID);

            AttributeDefinitionDMO _notifyOriginatorOBJ = new AttributeDefinitionDMO();
            _notifyOriginator = new AttributeDefinition(_notifyOriginatorOBJ);
            _notifyOriginatorOBJ.setType("Boolean");
            _notifyOriginatorOBJ.setName("notifyOriginator");
            _notifyOriginatorOBJ.setDmdID("527");
            _notifyOriginatorOBJ.setDescription("Indicates if an originator wants its own event.");
            _notifyOriginator.setDefinedIn(this);
            _notifyOriginatorOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _notifyOriginatorOBJ.setLineNumber("199");
            addAttributeDefList(_notifyOriginator);

            AttributeDefinitionDMO _parentNameOBJ = new AttributeDefinitionDMO();
            _parentName = new AttributeDefinition(_parentNameOBJ);
            _parentNameOBJ.setType("NameContainer");
            _parentNameOBJ.setName("parentName");
            _parentNameOBJ.setDmdID("529");
            _parentNameOBJ.setDescription("The name of the parent of an object.");
            _parentName.setDefinedIn(this);
            _parentNameOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _parentNameOBJ.setLineNumber("214");
            addAttributeDefList(_parentName);

            AttributeDefinitionDMO _registerForEventsOBJ = new AttributeDefinitionDMO();
            _registerForEvents = new AttributeDefinition(_registerForEventsOBJ);
            _registerForEventsOBJ.setType("Boolean");
            _registerForEventsOBJ.setName("registerForEvents");
            _registerForEventsOBJ.setDmdID("530");
            _registerForEventsOBJ.setDescription("When the registerForEvents flag is set to true on a GetRequest, the client will be registered to receive events for the object(s) associated with the request. This mechanism ties object retrieval to event notification so that there's no possibility of missing events associated with the objects being retrieved. The system providing the GetResponses should ensure that any events associated with the objects are queued for  delivery until after the GetResponse is complete.");
            _registerForEvents.setDefinedIn(this);
            _registerForEventsOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _registerForEventsOBJ.setLineNumber("225");
            addAttributeDefList(_registerForEvents);

            AttributeDefinitionDMO _handlerIDOBJ = new AttributeDefinitionDMO();
            _handlerID = new AttributeDefinition(_handlerIDOBJ);
            _handlerIDOBJ.setType("Integer");
            _handlerIDOBJ.setName("handlerID");
            _handlerIDOBJ.setDmdID("531");
            _handlerIDOBJ.setDescription("The handlerID is a convenience attribute on requests that allows for routing of responses back to the appropriate response handler. This is used in the Dark Matter MVC framework.");
            _handlerID.setDefinedIn(this);
            _handlerIDOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _handlerIDOBJ.setLineNumber("233");
            addAttributeDefList(_handlerID);

            AttributeDefinitionDMO _sourceOBJ = new AttributeDefinitionDMO();
            _source = new AttributeDefinition(_sourceOBJ);
            _sourceOBJ.setType("NameContainer");
            _sourceOBJ.setName("source");
            _sourceOBJ.setDmdID("532");
            _sourceOBJ.setDescription("The source of an event. This is the contained name of the object.");
            _source.setDefinedIn(this);
            _sourceOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _sourceOBJ.setLineNumber("239");
            addAttributeDefList(_source);

            AttributeDefinitionDMO _attributeSelectorOBJ = new AttributeDefinitionDMO();
            _attributeSelector = new AttributeDefinition(_attributeSelectorOBJ);
            _attributeSelectorOBJ.setType("AttributeID");
            _attributeSelectorOBJ.setName("attributeSelector");
            _attributeSelectorOBJ.setDmdID("533");
            _attributeSelectorOBJ.setDescription("The attributeSelector allows you to specify a subset of an object's attributes to be returned in a GetResponse.");
            _attributeSelectorOBJ.setValueType("HASHSET");
            _attributeSelector.setDefinedIn(this);
            _attributeSelectorOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _attributeSelectorOBJ.setLineNumber("247");
            addAttributeDefList(_attributeSelector);

            AttributeDefinitionDMO _cacheResponseOBJ = new AttributeDefinitionDMO();
            _cacheResponse = new AttributeDefinition(_cacheResponseOBJ);
            _cacheResponseOBJ.setType("Boolean");
            _cacheResponseOBJ.setName("cacheResponse");
            _cacheResponseOBJ.setDmdID("534");
            _cacheResponseOBJ.setDescription("The cacheResponse flag can be set on GetRequests and is reflected back in the GetResponse. If you are using a central response handler implementation (with caching) the handler can check to see if it should automatically cache the contents of a GetResponse or not. In cases where you are using Sliced objects, this is handy when you you retrieve the full object, but don't want to have it cached.");
            _cacheResponse.setDefinedIn(this);
            _cacheResponseOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _cacheResponseOBJ.setLineNumber("257");
            addAttributeDefList(_cacheResponse);

            AttributeDefinitionDMO _sliceOBJ = new AttributeDefinitionDMO();
            _slice = new AttributeDefinition(_sliceOBJ);
            _sliceOBJ.setType("String");
            _sliceOBJ.setName("slice");
            _sliceOBJ.setDmdID("535");
            _sliceOBJ.setDescription("The name of a SliceDefinition. If specified, on a GetRequest, the set of attributes returned will be the specified slice of the object. For named objects, the object is always returned as well.");
            _slice.setDefinedIn(this);
            _sliceOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _sliceOBJ.setLineNumber("265");
            addAttributeDefList(_slice);

            AttributeDefinitionDMO _targetObjectClassOBJ = new AttributeDefinitionDMO();
            _targetObjectClass = new AttributeDefinition(_targetObjectClassOBJ);
            _targetObjectClassOBJ.setType("ClassDefinition");
            _targetObjectClassOBJ.setName("targetObjectClass");
            _targetObjectClassOBJ.setDmdID("536");
            _targetObjectClassOBJ.setDescription("The construction class of the target of SetRequest. This is a convenience attribute used to record the object class of an object being modified by a SetRequest so that it can be passed on in the sourceObjectClass of an event.");
            _targetObjectClass.setDefinedIn(this);
            _targetObjectClassOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _targetObjectClassOBJ.setLineNumber("273");
            addAttributeDefList(_targetObjectClass);

            AttributeDefinitionDMO _targetsOBJ = new AttributeDefinitionDMO();
            _targets = new AttributeDefinition(_targetsOBJ);
            _targetsOBJ.setType("NameContainer");
            _targetsOBJ.setName("targets");
            _targetsOBJ.setDmdID("537");
            _targetsOBJ.setDescription("The targets of a GetRequest. This is the contained name of the object.");
            _targetsOBJ.setValueType("MULTI");
            _targets.setDefinedIn(this);
            _targetsOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _targetsOBJ.setLineNumber("280");
            addAttributeDefList(_targets);

            AttributeDefinitionDMO _listenerIDOBJ = new AttributeDefinitionDMO();
            _listenerID = new AttributeDefinition(_listenerIDOBJ);
            _listenerIDOBJ.setType("Long");
            _listenerIDOBJ.setName("listenerID");
            _listenerIDOBJ.setDmdID("538");
            _listenerIDOBJ.setDescription("The targets of a GetRequest. This is the contained name of the object.");
            _listenerID.setDefinedIn(this);
            _listenerIDOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _listenerIDOBJ.setLineNumber("286");
            addAttributeDefList(_listenerID);

            AttributeDefinitionDMO _trackingEnabledOBJ = new AttributeDefinitionDMO();
            _trackingEnabled = new AttributeDefinition(_trackingEnabledOBJ);
            _trackingEnabledOBJ.setType("Boolean");
            _trackingEnabledOBJ.setName("trackingEnabled");
            _trackingEnabledOBJ.setDmdID("539");
            _trackingEnabledOBJ.setDescription("A flag used for debug purposes to allow you to turn logging behaviour for a messages.");
            _trackingEnabled.setDefinedIn(this);
            _trackingEnabledOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _trackingEnabledOBJ.setLineNumber("292");
            addAttributeDefList(_trackingEnabled);

            AttributeDefinitionDMO _timeoutSecondsOBJ = new AttributeDefinitionDMO();
            _timeoutSeconds = new AttributeDefinition(_timeoutSecondsOBJ);
            _timeoutSecondsOBJ.setType("Integer");
            _timeoutSecondsOBJ.setName("timeoutSeconds");
            _timeoutSecondsOBJ.setDmdID("540");
            _timeoutSecondsOBJ.setDescription("A timeout flag that may be set on messages.");
            _timeoutSecondsOBJ.setNullReturnValue("2");
            _timeoutSeconds.setDefinedIn(this);
            _timeoutSecondsOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _timeoutSecondsOBJ.setLineNumber("299");
            addAttributeDefList(_timeoutSeconds);

            AttributeDefinitionDMO _appNameOBJ = new AttributeDefinitionDMO();
            _appName = new AttributeDefinition(_appNameOBJ);
            _appNameOBJ.setType("String");
            _appNameOBJ.setName("appName");
            _appNameOBJ.setDmdID("541");
            _appNameOBJ.setDescription("The name of an application.");
            _appName.setDefinedIn(this);
            _appNameOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _appNameOBJ.setLineNumber("305");
            addAttributeDefList(_appName);

            AttributeDefinitionDMO _appVersionOBJ = new AttributeDefinitionDMO();
            _appVersion = new AttributeDefinition(_appVersionOBJ);
            _appVersionOBJ.setType("String");
            _appVersionOBJ.setName("appVersion");
            _appVersionOBJ.setDmdID("542");
            _appVersionOBJ.setDescription("The version of an application.");
            _appVersion.setDefinedIn(this);
            _appVersionOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _appVersionOBJ.setLineNumber("311");
            addAttributeDefList(_appVersion);

            AttributeDefinitionDMO _myOwnEventOBJ = new AttributeDefinitionDMO();
            _myOwnEvent = new AttributeDefinition(_myOwnEventOBJ);
            _myOwnEventOBJ.setType("Boolean");
            _myOwnEventOBJ.setName("myOwnEvent");
            _myOwnEventOBJ.setDmdID("543");
            _myOwnEventOBJ.setDescription("This flag is set by the CommsController on events when they are received. If the originatorID on an event matches the originatorID returned in the LoginResponse, it means that the event occurred because of a request sent by you; so myOwnEvent will be true. If the event was caused by another client, it will be false.");
            _myOwnEvent.setDefinedIn(this);
            _myOwnEventOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/attributes2.dmd");
            _myOwnEventOBJ.setLineNumber("320");
            addAttributeDefList(_myOwnEvent);

    }

    private void initTypes() throws DmcValueException {
    }

    private void initActions() throws DmcValueException {
    }

    private void initEnums() throws DmcValueException {
            EnumDefinitionDMO _ScopeEnumOBJ = new EnumDefinitionDMO();
            _ScopeEnum = new EnumDefinition(_ScopeEnumOBJ);
            _ScopeEnumOBJ.setName("ScopeEnum");
            _ScopeEnumOBJ.addEnumValue("0 NONE Indicates that no value has been set.");
            _ScopeEnumOBJ.addEnumValue("1 BASE Applies the operation only to the object named in the request.");
            _ScopeEnumOBJ.addEnumValue("2 NEXT Applies the operation to the children, or next layer, of objects below the target object.");
            _ScopeEnumOBJ.addEnumValue("3 ALL Applies the operation to the entire sub-tree of objects beneath the target object.");
            _ScopeEnumOBJ.setDescription("The ScopeEnum indicates the scope of an operation when applied to a hierarchy of objects.");
            _ScopeEnum.setDefinedIn(this);
            _ScopeEnumOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/types.dmd");
            _ScopeEnumOBJ.setLineNumber("12");
            addEnumDefList(_ScopeEnum);

            EnumDefinitionDMO _DMPEventTypeEnumOBJ = new EnumDefinitionDMO();
            _DMPEventTypeEnum = new EnumDefinition(_DMPEventTypeEnumOBJ);
            _DMPEventTypeEnumOBJ.setName("DMPEventTypeEnum");
            _DMPEventTypeEnumOBJ.addEnumValue("0 CREATED Indicates that an object was created.");
            _DMPEventTypeEnumOBJ.addEnumValue("1 DELETED Indicates that an object was deleted.");
            _DMPEventTypeEnumOBJ.addEnumValue("2 MODIFIED Indicates that an object was modified.");
            _DMPEventTypeEnumOBJ.addEnumValue("3 LOADED Indicates that an object has been loaded in the cache.");
            _DMPEventTypeEnumOBJ.setDescription("The ObjectEventEnum indicates the type of operation that caused  an object event to be generated.");
            _DMPEventTypeEnum.setDefinedIn(this);
            _DMPEventTypeEnumOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/types.dmd");
            _DMPEventTypeEnumOBJ.setLineNumber("21");
            addEnumDefList(_DMPEventTypeEnum);

            EnumDefinitionDMO _FileModeEnumOBJ = new EnumDefinitionDMO();
            _FileModeEnum = new EnumDefinition(_FileModeEnumOBJ);
            _FileModeEnumOBJ.setName("FileModeEnum");
            _FileModeEnumOBJ.addEnumValue("0 OPEN Causes a save to file operation to overwrite an existing file or create it if it doesn't exist.");
            _FileModeEnumOBJ.addEnumValue("1 APPEND Causes a save to file operation to append to an existing file or create it if it doesn't exist.");
            _FileModeEnumOBJ.setDescription("The FileModeEnum is used to indicate the mode in which a file is opened for writing  when the results of an operation are to be captured to a file.");
            _FileModeEnum.setDefinedIn(this);
            _FileModeEnumOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/types.dmd");
            _FileModeEnumOBJ.setLineNumber("30");
            addEnumDefList(_FileModeEnum);

            EnumDefinitionDMO _ResponseTypeEnumOBJ = new EnumDefinitionDMO();
            _ResponseTypeEnum = new EnumDefinition(_ResponseTypeEnumOBJ);
            _ResponseTypeEnumOBJ.setName("ResponseTypeEnum");
            _ResponseTypeEnumOBJ.addEnumValue("0 UNKNOWN An unknown type of response; shouldn't happen.");
            _ResponseTypeEnumOBJ.addEnumValue("1 SUCCESS Indicates that the request was successful.");
            _ResponseTypeEnumOBJ.addEnumValue("2 WARNING Indicates that the request was sucessful but that there were warnings generated and that there is some descriptive text that indicates what happened.");
            _ResponseTypeEnumOBJ.addEnumValue("3 ERROR Indicates that the request failed and that there is some descriptive text that indicates what happened.");
            _ResponseTypeEnumOBJ.addEnumValue("4 PROGRESSTEXT Indicates that the request is proceeding and that this is a textual update on the progress of the request.");
            _ResponseTypeEnumOBJ.addEnumValue("5 PROGRESSPERCENT Indicates that the request is proceeding and that this is the percentage of the processing that's complete.");
            _ResponseTypeEnumOBJ.setDescription("The ResponseTypeEnum indicates the type of a response.");
            _ResponseTypeEnum.setDefinedIn(this);
            _ResponseTypeEnumOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/types.dmd");
            _ResponseTypeEnumOBJ.setLineNumber("45");
            addEnumDefList(_ResponseTypeEnum);

            EnumDefinitionDMO _ResponseCategoryEnumOBJ = new EnumDefinitionDMO();
            _ResponseCategoryEnum = new EnumDefinition(_ResponseCategoryEnumOBJ);
            _ResponseCategoryEnumOBJ.setName("ResponseCategoryEnum");
            _ResponseCategoryEnumOBJ.addEnumValue("0 UNKNOWN An uncategorized response.");
            _ResponseCategoryEnumOBJ.addEnumValue("1 SOFTWARE A response related to software.");
            _ResponseCategoryEnumOBJ.addEnumValue("2 SECURITY A response related to security.");
            _ResponseCategoryEnumOBJ.addEnumValue("3 REPOSITORY A response related to the repository.");
            _ResponseCategoryEnumOBJ.addEnumValue("4 COMMS A response related to communication.");
            _ResponseCategoryEnumOBJ.addEnumValue("5 OPERATIONAL A response related to an operation.");
            _ResponseCategoryEnumOBJ.setDescription("The ResponseCategoryEnum indicates the category of an error response.");
            _ResponseCategoryEnum.setDefinedIn(this);
            _ResponseCategoryEnumOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/types.dmd");
            _ResponseCategoryEnumOBJ.setLineNumber("55");
            addEnumDefList(_ResponseCategoryEnum);

            EnumDefinitionDMO _ResponseFormatEnumOBJ = new EnumDefinitionDMO();
            _ResponseFormatEnum = new EnumDefinition(_ResponseFormatEnumOBJ);
            _ResponseFormatEnumOBJ.setName("ResponseFormatEnum");
            _ResponseFormatEnumOBJ.addEnumValue("0 STANDARD Indicates that the responses should be in standard flat format.");
            _ResponseFormatEnumOBJ.addEnumValue("1 DOM Indicates that the response should be in DOM format i.e. the hierarchic structure of the data should be reflected by indenting children in subarrays beneath an object.");
            _ResponseFormatEnumOBJ.setDescription("The ResponseFormatEnum indicates how JSON responses are to be formatted.");
            _ResponseFormatEnum.setDefinedIn(this);
            _ResponseFormatEnumOBJ.setFile("/Users/peter/controller/dark-matter-data/src/org/dmd/dmp/shared/schema/v0dot1/types.dmd");
            _ResponseFormatEnumOBJ.setLineNumber("61");
            addEnumDefList(_ResponseFormatEnum);

    }


    @Override
    public synchronized DmpSchemaAG getInstance() throws DmcValueException{
    	   if (instance == null)
    		   initialize();
    	   return(instance);
    }
}

