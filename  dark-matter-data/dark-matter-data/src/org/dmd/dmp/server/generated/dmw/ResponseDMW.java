//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2010 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.dmp.server.generated.dmw;

import java.util.*;
import org.dmd.dmc.*;
import org.dmd.dms.*;

// import 3
import org.dmd.dmp.shared.generated.enums.ResponseCategoryEnum;
// import 3
import org.dmd.dmp.shared.generated.enums.ResponseTypeEnum;

// import 8
import org.dmd.dmp.server.extended.DMPMessage;
// import 9
import org.dmd.dmp.shared.generated.dmo.ResponseDMO;

/**
 * The Response class serves as a common base for all response messages. It
 * used to be that the Response was abstract, but because we could receive a
 * completely unknown request (for instance via a JSON/XML interface), we had
 * to have the ability to return a generic error response.
 * <P>
 * Generated from the dmp schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.DMWGenerator.dumpWrapper(DMWGenerator.java:203)
 */
abstract public class ResponseDMW extends DMPMessage {

    private ResponseDMO mycore;

    public ResponseDMW() {
        super(new ResponseDMO(), org.dmd.dmp.server.generated.DmpSchemaAG._Response);
        mycore = (ResponseDMO) core;
        mycore.setContainer(this);
    }

    public ResponseDMW(ResponseDMO obj) {
        super(obj, org.dmd.dmp.server.generated.DmpSchemaAG._Response);
        mycore = (ResponseDMO) core;
        mycore.setContainer(this);
    }

    @Override
    public void setDmcObject(DmcObject obj) {
        mycore = (ResponseDMO) obj;
        mycore.setContainer(this);
        super.setDmcObject(obj);
    }

    protected ResponseDMW(ResponseDMO obj, ClassDefinition cd) {
        super(obj,cd);
        mycore = (ResponseDMO) core;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected ArrayList getAuxDataHolder() {
        return(new ArrayList<org.dmd.dmp.server.extended.Response>());
    }

    public String getResponseText(){
        return(mycore.getResponseText());
    }

    /**
     * Sets responseText to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    public void setResponseText(Object value) throws DmcValueException {
        mycore.setResponseText(value);
    }

    /**
     * Removes the responseText attribute value.
     */
    public void remResponseText(){
        mycore.remResponseText();
    }

    public ResponseCategoryEnum getResponseCategory(){
        return(mycore.getResponseCategory());
    }

    /**
     * Sets responseCategory to the specified value.
     * @param value A value compatible with DmcTypeResponseCategoryEnum
     */
    public void setResponseCategory(Object value) throws DmcValueException {
        mycore.setResponseCategory(value);
    }

    /**
     * Removes the responseCategory attribute value.
     */
    public void remResponseCategory(){
        mycore.remResponseCategory();
    }

    public Boolean getLastResponse(){
        return(mycore.getLastResponse());
    }

    /**
     * Sets lastResponse to the specified value.
     * @param value A value compatible with DmcTypeBoolean
     */
    public void setLastResponse(Object value) throws DmcValueException {
        mycore.setLastResponse(value);
    }

    /**
     * Removes the lastResponse attribute value.
     */
    public void remLastResponse(){
        mycore.remLastResponse();
    }

    public ResponseTypeEnum getResponseType(){
        return(mycore.getResponseType());
    }

    /**
     * Sets responseType to the specified value.
     * @param value A value compatible with DmcTypeResponseTypeEnum
     */
    public void setResponseType(Object value) throws DmcValueException {
        mycore.setResponseType(value);
    }

    /**
     * Removes the responseType attribute value.
     */
    public void remResponseType(){
        mycore.remResponseType();
    }


}
