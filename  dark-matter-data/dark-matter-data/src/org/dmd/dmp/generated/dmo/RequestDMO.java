package org.dmd.dmp.generated.dmo;

import org.dmd.dmc.DmcAttribute;
import org.dmd.dmc.DmcValueException;
import org.dmd.dmc.types.DmcTypeBoolean;
import org.dmd.dmp.generated.enums.ResponseFormatEnum;
import org.dmd.dmp.generated.types.DmcTypeResponseFormatEnum;
import org.dmd.dmc.types.DmcTypeString;

import org.dmd.dmp.generated.dmo.DMPMessageDMO;

@SuppressWarnings("serial")
/**
 * The request class provides a common base for all request messages.
 * 
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoFormatter.getClassHeader(DmoFormatter.java:182)
 */
abstract public class RequestDMO  extends DMPMessageDMO  {

    public final static String _sessionID = "sessionID";
    public final static String _readableFormat = "readableFormat";
    public final static String _responseFormat = "responseFormat";

    public RequestDMO() {
    }

    public String getSessionID(){
        DmcTypeString attr = (DmcTypeString) attributes.get(_sessionID);
        if (attr == null)
            return(null);

        return(attr.getSV());
    }

    /**
     * Sets sessionID to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    @SuppressWarnings("unchecked")
    public void setSessionID(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_sessionID);
        if (attr == null)
            attr = new DmcTypeString();
        
        attr.set(value);
        set(_sessionID,attr);
    }

    public Boolean getReadableFormat(){
        DmcTypeBoolean attr = (DmcTypeBoolean) attributes.get(_readableFormat);
        if (attr == null)
            return(false);

        return(attr.getSV());
    }

    /**
     * Sets readableFormat to the specified value.
     * @param value A value compatible with DmcTypeBoolean
     */
    @SuppressWarnings("unchecked")
    public void setReadableFormat(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_readableFormat);
        if (attr == null)
            attr = new DmcTypeBoolean();
        
        attr.set(value);
        set(_readableFormat,attr);
    }

    public ResponseFormatEnum getResponseFormat(){
        DmcTypeResponseFormatEnum attr = (DmcTypeResponseFormatEnum) attributes.get(_responseFormat);
        if (attr == null)
            return(null);

        return(attr.getSV());
    }

    /**
     * Sets responseFormat to the specified value.
     * @param value A value compatible with DmcTypeResponseFormatEnum
     */
    @SuppressWarnings("unchecked")
    public void setResponseFormat(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_responseFormat);
        if (attr == null)
            attr = new DmcTypeResponseFormatEnum();
        
        attr.set(value);
        set(_responseFormat,attr);
    }




}
