#summary Large scale application development and Model View Whatever

<wiki:toc />

= Large scale application/site development with GWT =

As I've mentioned before, I am eternally grateful to those folks who've developed [http://code.google.com/webtoolkit/ GWT].

My first approach to web application development was based on [http://www.sencha.com/products/extgwt/ Sencha's] ExtGWT MVC mechanisms, and although this approach has been maligned by some, it allowed me to get started on a framework for developing a large scale web application.

However, approaches to software design evolve and when I first saw the [http://code.google.com/webtoolkit/articles/mvp-architecture.html Large scale application development and MVP] article by Chris Ramsdale, it gave me some other food for thought.

Likewise, when the [http://code.google.com/webtoolkit/doc/latest/DevGuideMvpActivitiesAndPlaces.html GWT MVP Development with Activities and Places] page went up, I was again presented with a veritable banquet of ideas!

However, trying to reconcile these ideas into something coherent and systematic was leaving me with conceptual indigestion. 

== Web Applications versus Web Sites ==

As I mentioned in the [DMDOverview Dark Matter Data Overview], I view <font color="#9E0B0F> *web application development* </font> as being distinct from <font color="#9E0B0F> *web site development* </font>. Now, although I view them as distinct, that's not to say that there aren't similarities between these concepts, there definitely are.

The primary conceptual difference I see between web applications and web sites has to do with [http://code.google.com/webtoolkit/doc/latest/DevGuideMvpActivitiesAndPlaces.html#Places Places]. As a rule of thumb, I tend to see web applications as existing in a single `Place`. Web sites, on the other hand are comprised of many different `Places`. 

In a web application, the user's overall `View` tends to remain fairly consistent. Elements may be added to the view e.g. tabs, dialogs etc. but the overall structure tends to remain constant. Likewise, the backward and forward buttons tend not to be used. In short, the user's interaction is more like the interaction with a desktop application. 

Of course, this is a generalization, so don't get carried away if you don't agree; I'm merely trying to lay some conceptual groundwork here ;-)



= Model View Whatever =