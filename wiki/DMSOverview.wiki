#summary An overview of the Dark Matter Schema specification.

<font color="#6a6a6a">
= Dark Matter Schema =
</font>

Schemas (or data models) have a tendency to be tightly tied to particular persistence mechanisms, although there have been a variety of projects that have tried (and succeeded) to make schema and modeling more generic, for example, The [http://www.eclipse.org/modeling/emf/ Eclipse Modeling Framework] (EMF). 

The Dark Matter Schema (DMS) isn't meant to compete with EMF, but it is meant to allow you get some significant benefit from a mechanism that is very simple and straight forward to use. EMF was considered at Dark Matter's inception, but the amount of baggage (and learning curve) that came with it, was considered overkill for Dark Matter's basic concepts.

The Dark Matter Schema “eats it own dogfood” in that the metaschema (the schema that defines how schema is specified) is defined in terms of itself.

The meta schema is defined in terms of the following Dark Matter Object classes:

<table>

<tr>
<td>
[DMSTypeDefinition TypeDefinition]
</td>
<td>
is used to define a type that can be used in the definition of attributes
</td>
</tr>

<tr>
<td>
[DMSEnumDefinition EnumDefinition]
</td>
<td>
is used to define enumerated types
</td>
</tr>

<tr>
<td width="160">
[DMSAttributeDefinition AttributeDefinition]
</td>
<td>
is used to defined attributes that comprise classes
</td>
</tr>


<tr>
<td>
[DMSClassDefinition ClassDefinition]
</td>
<td>
is used to define classes of objects that are turned into generated Dark Matter Object (DMO) Java classes.
</td>
</tr>

</table>

These objects, along a few others, comprise a [DMSSchemaDefinition SchemaDefinition] that gathers together a set of related object definitions that form the basis of a reusable module of functionality. Schemas can depend on other, previously defined, schemas so that functionality can be extended in a rational manner.

All data used by Dark Matter is defined by the DMS mechanisms; that includes all configuration files, all operations performed against DMOs, all events generated by interactions with DMOs. Everything.

<table border=0 width="100%"> <tr> <td>
{{{


}}}
</td></tr></table>