#summary The Dark Matter Schema SchemaDefinition

<font color="#6a6a6a">
= Schema Definitions =
</font>

This page provides you with a basic overview of the Dark Matter Schema (DMS) definition mechanisms.

=== A Note About Project Structure ===

A great deal of the infrastructure required by applications that use Dark Matter is automatically generated from the schema that you define. Code is generated in relation to where you place certain configuration files, for instance the DMS files that end with `.dms` extensions.

You are free to place these files wherever you want but certain source structures fit with the spirit of [http://code.google.com/webtoolkit/overview.html GWT] which generally structures the source heierarchy as follows:

{{{
src
    client
        (client specific code)
    server
        (server specific code)
    shared
        (code shared by client and server)
}}}

The code generated from DMS falls into the shared category and your `.dms` file should be placed accordingly:

{{{
src
    client
    server
    shared
        dmdconfig
            v0dot1
               myschema.dms

}}}

All code generated by the various generators used by Dark Matter will be created beneath a *`generated`* folder; this makes it quite clear which subfolders should be specified in your `.gwt.xml` source path declarations (if you don't follow the convention of placing shared code in a single folder). 

After running the [DMOGenerator DMO Generator] on your schema, the source structure will appear as follows:

{{{
src
    client
    server
    shared
        dmdconfig
            v0dot1
               myschema.dms
        generated
           dmo
           enums
           types
           ...
}}}
