//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2010 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.dmr.server.base.generated.dmw;

// Generated from:  org.dmd.dmg.generators.DMWGenerator.formatImports(DMWGenerator.java:842)
import org.dmd.dmc.*;                                                     // If any attributes
import org.dmd.dmc.types.FullyQualifiedName;                              // Primitive type
import org.dmd.dmr.server.base.extended.HierarchicObject;                 // Required for getModificationRecorder()
import org.dmd.dmr.shared.base.generated.dmo.HierarchicObjectDMO;         // Class not auxiliary or abstract
import org.dmd.dms.*;                                                     // Always 2
import org.dmd.dms.generated.types.DmcTypeModifierMV;                     // Required for MODREC constructor

/**
 * A HierarchicObject is meant to represent any object that can be identified
 * with a Fully Qualified Name (FQN) and exists in a containment relationship
 * with other objects. The exact implementation of a HierarchicObject is
 * application specific.
 * <P>
 * Generated from the dmr.base schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from:  org.dmd.dmg.generators.DMWGenerator.dumpWrapper(DMWGenerator.java:347)
 */
public class HierarchicObjectDMW extends DmwWrapper implements DmcNamedObjectIF {

    private HierarchicObjectDMO mycore;

    public HierarchicObjectDMW() {
        super(new HierarchicObjectDMO(), org.dmd.dmr.server.base.generated.DmrBaseSchemaAG._HierarchicObject);
        mycore = (HierarchicObjectDMO) core;
        mycore.setContainer(this);
    }

    public HierarchicObjectDMW(DmcTypeModifierMV mods) {
        super(new HierarchicObjectDMO(mods), org.dmd.dmr.server.base.generated.DmrBaseSchemaAG._HierarchicObject);
        mycore = (HierarchicObjectDMO) core;
        mycore.setContainer(this);
    }

    public HierarchicObject getModificationRecorder(){
        HierarchicObject rc = new HierarchicObject();
        rc.setDmcObject(new HierarchicObjectDMO(new DmcTypeModifierMV()));
        rc.setFQN(getFQN());
        return(rc);
    }

    public HierarchicObjectDMW(HierarchicObjectDMO obj) {
        super(obj, org.dmd.dmr.server.base.generated.DmrBaseSchemaAG._HierarchicObject);
        mycore = (HierarchicObjectDMO) core;
        mycore.setContainer(this);
    }

    @Override
    public void setDmcObject(DmcObject obj) {
        mycore = (HierarchicObjectDMO) obj;
        mycore.setContainer(this);
        super.setDmcObject(obj);
    }

    public HierarchicObjectDMO getDMO() {
        return(mycore);
    }

    protected HierarchicObjectDMW(HierarchicObjectDMO obj, ClassDefinition cd) {
        super(obj,cd);
        mycore = (HierarchicObjectDMO) core;
    }

    //  org.dmd.dmg.generators.DMWGenerator.getAccessFunctions(DMWGenerator.java:868)
    public FullyQualifiedName getObjectName(){
        return(mycore.getFQN());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(mycore.getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof HierarchicObjectDMW){
            return( getObjectName().equals( ((HierarchicObjectDMW) obj).getObjectName()) );
        }
        return(false);
    }

    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:999)
    public Integer getLineNumber(){
        return(mycore.getLineNumber());
    }

    /**
     * Sets lineNumber to the specified value.
     * @param value A value compatible with DmcTypeInteger
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1046)
    public void setLineNumber(Object value) throws DmcValueException {
        mycore.setLineNumber(value);
    }

    /**
     * Sets lineNumber to the specified value.
     * @param value Integer
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1055)
    public void setLineNumber(Integer value){
        mycore.setLineNumber(value);
    }

    /**
     * Removes the lineNumber attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1070)
    public void remLineNumber(){
        mycore.remLineNumber();
    }

    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:999)
    public String getFile(){
        return(mycore.getFile());
    }

    /**
     * Sets file to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1046)
    public void setFile(Object value) throws DmcValueException {
        mycore.setFile(value);
    }

    /**
     * Sets file to the specified value.
     * @param value String
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1055)
    public void setFile(String value){
        mycore.setFile(value);
    }

    /**
     * Removes the file attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1070)
    public void remFile(){
        mycore.remFile();
    }

    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:999)
    public FullyQualifiedName getFQN(){
        return(mycore.getFQN());
    }

    /**
     * Sets FQN to the specified value.
     * @param value A value compatible with DmcTypeFullyQualifiedName
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1046)
    public void setFQN(Object value) throws DmcValueException {
        mycore.setFQN(value);
    }

    /**
     * Sets FQN to the specified value.
     * @param value FullyQualifiedName
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1055)
    public void setFQN(FullyQualifiedName value){
        mycore.setFQN(value);
    }

    /**
     * Removes the FQN attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:1070)
    public void remFQN(){
        mycore.remFQN();
    }


}
