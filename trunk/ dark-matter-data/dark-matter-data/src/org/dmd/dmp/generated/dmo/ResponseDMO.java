package org.dmd.dmp.generated.dmo;

import org.dmd.dmc.DmcAttribute;
import org.dmd.dmc.DmcValueException;
import org.dmd.dmc.types.DmcTypeBoolean;
import org.dmd.dmc.types.DmcTypeInteger;
import org.dmd.dmp.generated.enums.ResponseCategoryEnum;
import org.dmd.dmp.generated.types.DmcTypeResponseCategoryEnum;
import org.dmd.dmp.generated.enums.ResponseTypeEnum;
import org.dmd.dmp.generated.types.DmcTypeResponseTypeEnum;
import org.dmd.dmc.types.DmcTypeString;

import org.dmd.dmc.DmcObject;

@SuppressWarnings("serial")
/**
 * This class serves as a common base for all response messages. It used to
 * be that the Response was abstract, but because we could receive a
 * completely unknown request, we had to have the ability to return a generic
 * error response.
 * 
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoFormatter.getClassHeader(DmoFormatter.java:185)
 */
public class ResponseDMO  extends DmcObject  {

    public final static String _responseText = "responseText";
    public final static String _responseCategory = "responseCategory";
    public final static String _lastResponse = "lastResponse";
    public final static String _requestID = "requestID";
    public final static String _responseType = "responseType";

    public ResponseDMO() {
    }

    public String getResponseText(){
        DmcTypeString attr = (DmcTypeString) attributes.get(_responseText);
        if (attr == null)
            return(null);

        return(attr.getSV());
    }

    /**
     * Sets responseText to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    @SuppressWarnings("unchecked")
    public void setResponseText(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_responseText);
        if (attr == null)
            attr = new DmcTypeString();
        
        attr.set(value);
        set(_responseText,attr);
    }

    public ResponseCategoryEnum getResponseCategory(){
        DmcTypeResponseCategoryEnum attr = (DmcTypeResponseCategoryEnum) attributes.get(_responseCategory);
        if (attr == null)
            return(null);

        return(attr.getSV());
    }

    /**
     * Sets responseCategory to the specified value.
     * @param value A value compatible with DmcTypeResponseCategoryEnum
     */
    @SuppressWarnings("unchecked")
    public void setResponseCategory(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_responseCategory);
        if (attr == null)
            attr = new DmcTypeResponseCategoryEnum();
        
        attr.set(value);
        set(_responseCategory,attr);
    }

    public Boolean getLastResponse(){
        DmcTypeBoolean attr = (DmcTypeBoolean) attributes.get(_lastResponse);
        if (attr == null)
            return(false);

        return(attr.getSV());
    }

    /**
     * Sets lastResponse to the specified value.
     * @param value A value compatible with DmcTypeBoolean
     */
    @SuppressWarnings("unchecked")
    public void setLastResponse(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_lastResponse);
        if (attr == null)
            attr = new DmcTypeBoolean();
        
        attr.set(value);
        set(_lastResponse,attr);
    }

    public Integer getRequestID(){
        DmcTypeInteger attr = (DmcTypeInteger) attributes.get(_requestID);
        if (attr == null)
            return(null);

        return(attr.getSV());
    }

    /**
     * Sets requestID to the specified value.
     * @param value A value compatible with DmcTypeInteger
     */
    @SuppressWarnings("unchecked")
    public void setRequestID(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_requestID);
        if (attr == null)
            attr = new DmcTypeInteger();
        
        attr.set(value);
        set(_requestID,attr);
    }

    public ResponseTypeEnum getResponseType(){
        DmcTypeResponseTypeEnum attr = (DmcTypeResponseTypeEnum) attributes.get(_responseType);
        if (attr == null)
            return(null);

        return(attr.getSV());
    }

    /**
     * Sets responseType to the specified value.
     * @param value A value compatible with DmcTypeResponseTypeEnum
     */
    @SuppressWarnings("unchecked")
    public void setResponseType(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_responseType);
        if (attr == null)
            attr = new DmcTypeResponseTypeEnum();
        
        attr.set(value);
        set(_responseType,attr);
    }




}
