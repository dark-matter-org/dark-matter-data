package org.dmd.dmp.generated.types;

import org.dmd.dmc.DmcAttribute;
import org.dmd.dmc.DmcValueException;
import org.dmd.dmp.generated.enums.*;

/**
 * This is the generated DmcAttribute derivative for values of type ResponseTypeEnum
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoTypeFormatter.dumpEnumType(DmoTypeFormatter.java:67)
 */
@SuppressWarnings("serial")
public class DmcTypeResponseTypeEnum extends DmcAttribute<ResponseTypeEnum> {

    public DmcTypeResponseTypeEnum(){
    }

    protected ResponseTypeEnum typeCheck(Object value) throws DmcValueException {
        ResponseTypeEnum rc = null;

        if (value instanceof ResponseTypeEnum){
            rc = (ResponseTypeEnum)value;
        }
        else if (value instanceof String){
            rc = ResponseTypeEnum.get((String)value);
            if (rc == null){
                throw(new DmcValueException("Value: " + value.toString() + " is not a valid ResponseTypeEnum value."));
            }
        }
        else{
            throw(new DmcValueException("Object of class: " + value.getClass().getName() + " passed where object compatible with ResponseTypeEnum expected."));
        }
        return(rc);
    }

    public String getString(){
        if (sv == null){
            StringBuffer sb = new StringBuffer();
            for (ResponseTypeEnum t : mv){
                sb.append(t + ", ");
            }
            return(sb.toString());
        }
        else
            return(sv.toString());

    }


}
