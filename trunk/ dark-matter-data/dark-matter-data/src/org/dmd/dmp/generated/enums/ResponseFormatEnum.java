package org.dmd.dmp.generated.enums;

import java.util.*;

/**
 * The ResponseFormatEnum indicates how JSON responses are to be formatted.
 * 
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoEnumFormatter.dumpEnum(DmoEnumFormatter.java:71)
 */
public enum ResponseFormatEnum
{
    /**
     * Indicates that the responses should be in standard flat format.
     */
    STANDARD(0),

    /**
     *  Indicates that the response should be in DOM format i.e. the hierarchic
     * structure of the data should be reflected by indenting children in
     * subarrays beneath an object.
     */
    DOM(1);

    // Maps our integer value to the enumeration value
    private static final Map<Integer,ResponseFormatEnum> lookup = new HashMap<Integer,ResponseFormatEnum>();

    static {
        for(ResponseFormatEnum s : EnumSet.allOf(ResponseFormatEnum.class))
            lookup.put(s.intValue(), s);
    }

    // Maps our enumeration (string) value to the enumeration value
    private static final Map<String,ResponseFormatEnum> lookupString = new HashMap<String, ResponseFormatEnum>();

    static {
        for(ResponseFormatEnum s : EnumSet.allOf(ResponseFormatEnum.class))
            lookupString.put(s.name(), s);
    }

    // Our current value as an int - normally, this isn't available in an enum
    private int ival;

    /**
     * This private constructor allows us to access our int value when required.
     */
    private ResponseFormatEnum(int i){
        ival = i;
    }

    /**
     * Returns the value of this enum value as an int.
     */
    public int intValue(){
        return(ival);
    }

    /**
     * Returns the enum value of the specified int or null if it's not valid.
     */
    public static ResponseFormatEnum get(int code) {
        return(lookup.get(code));
    }

    /**
     * Returns a value for this enum or throws an exception if the String value isn't
     * a valid member of this enum.
     */
    public static ResponseFormatEnum get(String str) {
        return(lookupString.get(str));
    }

}