package org.dmd.dmp.generated.shared.dmo;

import java.util.*;

import org.dmd.dmc.DmcAttribute;
import org.dmd.dmc.DmcValueException;
import org.dmd.dmp.generated.shared.enums.ScopeEnum;
import org.dmd.dmp.generated.shared.types.DmcTypeScopeEnum;
import org.dmd.dmc.types.DmcTypeString;

import org.dmd.dmp.generated.shared.dmo.RequestDMO;

@SuppressWarnings("serial")
/**
 * The DeleteRequest allows you to delete one or more objects. If no scope is
 * specified, the scope is assumed to be BASE i.e. just the specific object
 * indicated by the fqn(s). The behaviour of this request is implementation
 * specific.
 * 
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoFormatter.getClassHeader(DmoFormatter.java:182)
 */
public class DeleteRequestDMO  extends RequestDMO  {

    public final static String _scope = "scope";
    public final static String _fqnList = "fqnList";

    public DeleteRequestDMO() {
    }

    public ScopeEnum getScope(){
        DmcTypeScopeEnum attr = (DmcTypeScopeEnum) attributes.get(_scope);
        if (attr == null)
            return(null);

        return(attr.getSV());
    }

    /**
     * Sets scope to the specified value.
     * @param value A value compatible with DmcTypeScopeEnum
     */
    @SuppressWarnings("unchecked")
    public void setScope(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_scope);
        if (attr == null)
            attr = new DmcTypeScopeEnum();
        
        attr.set(value);
        set(_scope,attr);
    }

    /**
     * @returns An Iterator of String objects.
     */
    public Iterator<String> getFqnList(){
        DmcTypeString attr = (DmcTypeString) attributes.get(_fqnList);
        if (attr == null)
            return(null);

        return(attr.getMV());
    }

    /**
     * Adds another fqnList value.
     * @param value A value compatible with String
     */
    @SuppressWarnings("unchecked")
    public void addFqnList(Object value) throws DmcValueException {
        DmcAttribute attr = attributes.get(_fqnList);
        if (attr == null)
            attr = new DmcTypeString();
        
        attr.add(value);
        add(_fqnList,attr);
    }

    /**
     * Deletes a fqnList value.
     * @param value The String to be deleted from set of attribute values.
     */
    public void delFqnList(Object value){
        try{
            del(_fqnList, value);
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }




}
