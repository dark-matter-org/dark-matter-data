package org.dmd.dmt.server.generated;

import org.dmd.dmc.DmcOmni;
import org.dmd.dmc.DmcValueException;
import org.dmd.dms.*;
import org.dmd.dms.generated.dmo.*;
import org.dmd.dmt.shared.generated.dmo.DmtDMSAG;


/**
 * The dmt schema defines a sets of definitions for Dark Matter Testing
 * purposes.
 * <P>
 * Generated from the dmt schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:160)
 */
public class DmtSchemaAG extends SchemaDefinition {

    public static ClassDefinition _TestAbstractFixed;
    public static ClassDefinition _TestAbstractExtended;
    public static ClassDefinition _TestBasicObjectFixed;
    public static ClassDefinition _TestBasicNamedObjectFixed;
    public static ClassDefinition _TestBasicNamedObjectExtended;
    public static ClassDefinition _TestBasicAuxiliary;
    public static ClassDefinition _TestOneLevelSubpackage;
    public static ClassDefinition _TestOneLevelSubpackageExtended;
    public static ClassDefinition _TestMultiLevelSubpackage;
    public static ClassDefinition _TestDerivedSubpackage;
    public static ClassDefinition _TestDerivedDiffSubpackage;
    public static ClassDefinition _UUIDNamedObject;
    public static ClassDefinition _IntegerNamedObject;
    public static ClassDefinition _NameContainerTest;
    public static ClassDefinition _BaseObj;
    public static ClassDefinition _ObjWithRefs;
    public static ClassDefinition _ClientCountFilter;
    public static ClassDefinition _ClientCountFilterRequest;

    public static AttributeDefinition _svBoolean;
    public static AttributeDefinition _mvBoolean;
    public static AttributeDefinition _svDate;
    public static AttributeDefinition _mvDate;
    public static AttributeDefinition _hsDate;
    public static AttributeDefinition _tsDate;
    public static AttributeDefinition _svDmcObject;
    public static AttributeDefinition _mvDmcObject;
    public static AttributeDefinition _svDouble;
    public static AttributeDefinition _mvDouble;
    public static AttributeDefinition _hsDouble;
    public static AttributeDefinition _tsDouble;
    public static AttributeDefinition _svFloat;
    public static AttributeDefinition _mvFloat;
    public static AttributeDefinition _hsFloat;
    public static AttributeDefinition _tsFloat;
    public static AttributeDefinition _svInteger;
    public static AttributeDefinition _mvInteger;
    public static AttributeDefinition _hsInteger;
    public static AttributeDefinition _tsInteger;
    public static AttributeDefinition _intToString;
    public static AttributeDefinition _svLong;
    public static AttributeDefinition _mvLong;
    public static AttributeDefinition _hsLong;
    public static AttributeDefinition _tsLong;
    public static AttributeDefinition _svString;
    public static AttributeDefinition _mvString;
    public static AttributeDefinition _hsString;
    public static AttributeDefinition _tsString;
    public static AttributeDefinition _svTestBasicNamedObjectFixed;
    public static AttributeDefinition _mvTestBasicNamedObjectFixed;
    public static AttributeDefinition _anObjName;
    public static AttributeDefinition _dmtStringName;
    public static AttributeDefinition _anotherDmtName;
    public static AttributeDefinition _objRef;
    public static AttributeDefinition _objRefMV;
    public static AttributeDefinition _objRefHM;
    public static AttributeDefinition _attrIDs;
    public static AttributeDefinition _OUIFilter;
    public static AttributeDefinition _clientCountFilter;
    public static AttributeDefinition _mvTestEnum;
    public static AttributeDefinition _hsTestEnum;
    public static AttributeDefinition _hsNames;
    public static AttributeDefinition _transString;
    public static AttributeDefinition _nonperString;
    public static AttributeDefinition _indexedString;

    public static TypeDefinition _DmtStringName;


    public static EnumDefinition _DmtTestEnum;

    static DmtSchemaAG instance;

    public DmtSchemaAG() throws DmcValueException {
        generatedSchema = true;
        staticRefName   = "org.dmd.dmt.server.generated.DmtSchemaAG";

        dependsOnSchemaClasses.put("dmp","org.dmd.dmp.server.generated.DmpSchemaAG");

    }

    private void initialize() throws DmcValueException {
        if (instance == null){
            instance        = this;
            SchemaDefinitionDMO me = (SchemaDefinitionDMO) this.getDmcObject();
            me.setName("dmt");
            me.setSchemaPackage("org.dmd.dmt.shared");
            me.setDmwPackage("org.dmd.dmt.server");
            me.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/dmt.dms");


            me.addDependsOn("dmp");
            dependsOnSchemaClasses.put("dmp","org.dmd.dmp.server.generated.DmpSchemaAG");


            initClasses();
            initAttributes();
            initTypes();
            initActions();
            initEnums();
            DmcOmni.instance().addCompactSchema(DmtDMSAG.instance());
        }
    }

    private void initClasses() throws DmcValueException {
            ClassDefinitionDMO _TestAbstractFixedOBJ = new ClassDefinitionDMO();
            _TestAbstractFixed = new ClassDefinition(_TestAbstractFixedOBJ);
            _TestAbstractFixedOBJ.setName("TestAbstractFixed");
            _TestAbstractFixedOBJ.setDmdID("10001");
            _TestAbstractFixedOBJ.setClassType("ABSTRACT");
            _TestAbstractFixedOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestAbstractFixedOBJ.setLineNumber("8");
            _TestAbstractFixedOBJ.setDescription("The TestAbstract class just defines an abstract base class from which other test classes can be derived to tes this type of derivation.");
            _TestAbstractFixedOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestAbstractFixedREF");
            _TestAbstractFixedOBJ.setDmwIteratorClass("TestAbstractFixedIterableDMW");
            _TestAbstractFixedOBJ.addMust("svString");
            _TestAbstractFixedOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestAbstractFixedIterableDMW");
            _TestAbstractFixed.setDefinedIn(this);
            addClassDefList(_TestAbstractFixed);

            ClassDefinitionDMO _TestAbstractExtendedOBJ = new ClassDefinitionDMO();
            _TestAbstractExtended = new ClassDefinition(_TestAbstractExtendedOBJ);
            _TestAbstractExtendedOBJ.setName("TestAbstractExtended");
            _TestAbstractExtendedOBJ.setDmdID("10002");
            _TestAbstractExtendedOBJ.setClassType("ABSTRACT");
            _TestAbstractExtendedOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestAbstractExtendedOBJ.setLineNumber("17");
            _TestAbstractExtendedOBJ.setDescription("The TestAbstract class just defines an abstract base class from which other test classes can be derived to tes this type of derivation.");
            _TestAbstractExtendedOBJ.setUseWrapperType("EXTENDED");
            _TestAbstractExtendedOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestAbstractExtendedREF");
            _TestAbstractExtendedOBJ.setDmwIteratorClass("TestAbstractExtendedIterableDMW");
            _TestAbstractExtendedOBJ.addMust("svString");
            _TestAbstractExtendedOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestAbstractExtendedIterableDMW");
            _TestAbstractExtended.setDefinedIn(this);
            addClassDefList(_TestAbstractExtended);

            ClassDefinitionDMO _TestBasicObjectFixedOBJ = new ClassDefinitionDMO();
            _TestBasicObjectFixed = new ClassDefinition(_TestBasicObjectFixedOBJ);
            _TestBasicObjectFixedOBJ.setName("TestBasicObjectFixed");
            _TestBasicObjectFixedOBJ.setDmdID("10003");
            _TestBasicObjectFixedOBJ.setClassType("STRUCTURAL");
            _TestBasicObjectFixedOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestBasicObjectFixedOBJ.setLineNumber("59");
            _TestBasicObjectFixedOBJ.setDescription("The TestBasicObjectFixed class provides a test bed for all types of basic attribute values.");
            _TestBasicObjectFixedOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestBasicObjectFixedREF");
            _TestBasicObjectFixedOBJ.setDmwIteratorClass("TestBasicObjectFixedIterableDMW");
            _TestBasicObjectFixedOBJ.addMay("svBoolean");
            _TestBasicObjectFixedOBJ.addMay("mvBoolean");
            _TestBasicObjectFixedOBJ.addMay("svDate");
            _TestBasicObjectFixedOBJ.addMay("mvDate");
            _TestBasicObjectFixedOBJ.addMay("hsDate");
            _TestBasicObjectFixedOBJ.addMay("tsDate");
            _TestBasicObjectFixedOBJ.addMay("svDouble");
            _TestBasicObjectFixedOBJ.addMay("mvDouble");
            _TestBasicObjectFixedOBJ.addMay("hsDouble");
            _TestBasicObjectFixedOBJ.addMay("tsDouble");
            _TestBasicObjectFixedOBJ.addMay("svFloat");
            _TestBasicObjectFixedOBJ.addMay("mvFloat");
            _TestBasicObjectFixedOBJ.addMay("hsFloat");
            _TestBasicObjectFixedOBJ.addMay("tsFloat");
            _TestBasicObjectFixedOBJ.addMay("svInteger");
            _TestBasicObjectFixedOBJ.addMay("mvInteger");
            _TestBasicObjectFixedOBJ.addMay("hsInteger");
            _TestBasicObjectFixedOBJ.addMay("tsInteger");
            _TestBasicObjectFixedOBJ.addMay("intToString");
            _TestBasicObjectFixedOBJ.addMay("svLong");
            _TestBasicObjectFixedOBJ.addMay("mvLong");
            _TestBasicObjectFixedOBJ.addMay("hsLong");
            _TestBasicObjectFixedOBJ.addMay("tsLong");
            _TestBasicObjectFixedOBJ.addMay("svString");
            _TestBasicObjectFixedOBJ.addMay("mvString");
            _TestBasicObjectFixedOBJ.addMay("hsString");
            _TestBasicObjectFixedOBJ.addMay("tsString");
            _TestBasicObjectFixedOBJ.addMay("svTestBasicNamedObjectFixed");
            _TestBasicObjectFixedOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestBasicObjectFixedIterableDMW");
            _TestBasicObjectFixed.setDefinedIn(this);
            addClassDefList(_TestBasicObjectFixed);

            ClassDefinitionDMO _TestBasicNamedObjectFixedOBJ = new ClassDefinitionDMO();
            _TestBasicNamedObjectFixed = new ClassDefinition(_TestBasicNamedObjectFixedOBJ);
            _TestBasicNamedObjectFixedOBJ.setName("TestBasicNamedObjectFixed");
            _TestBasicNamedObjectFixedOBJ.setDmdID("10004");
            _TestBasicNamedObjectFixedOBJ.setClassType("STRUCTURAL");
            _TestBasicNamedObjectFixedOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestBasicNamedObjectFixedOBJ.setLineNumber("70");
            _TestBasicNamedObjectFixedOBJ.setDescription("The TestBasicNamedObjectFixed class provides a test bed for a named object.");
            _TestBasicNamedObjectFixedOBJ.setIsNamedBy("name");
            _TestBasicNamedObjectFixedOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestBasicNamedObjectFixedREF");
            _TestBasicNamedObjectFixedOBJ.setDmwIteratorClass("TestBasicNamedObjectFixedIterableDMW");
            _TestBasicNamedObjectFixedOBJ.addMay("mvString");
            _TestBasicNamedObjectFixedOBJ.addMay("mvTestBasicNamedObjectFixed");
            _TestBasicNamedObjectFixedOBJ.addMust("name");
            _TestBasicNamedObjectFixedOBJ.addMust("svString");
            _TestBasicNamedObjectFixedOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestBasicNamedObjectFixedIterableDMW");
            _TestBasicNamedObjectFixed.setDefinedIn(this);
            addClassDefList(_TestBasicNamedObjectFixed);

            ClassDefinitionDMO _TestBasicNamedObjectExtendedOBJ = new ClassDefinitionDMO();
            _TestBasicNamedObjectExtended = new ClassDefinition(_TestBasicNamedObjectExtendedOBJ);
            _TestBasicNamedObjectExtendedOBJ.setName("TestBasicNamedObjectExtended");
            _TestBasicNamedObjectExtendedOBJ.setDmdID("10005");
            _TestBasicNamedObjectExtendedOBJ.setClassType("STRUCTURAL");
            _TestBasicNamedObjectExtendedOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestBasicNamedObjectExtendedOBJ.setLineNumber("82");
            _TestBasicNamedObjectExtendedOBJ.setDescription("The TestBasicNamedObjectExtended class provides a test bed for a named object that's extended.");
            _TestBasicNamedObjectExtendedOBJ.setIsNamedBy("name");
            _TestBasicNamedObjectExtendedOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestBasicNamedObjectExtendedREF");
            _TestBasicNamedObjectExtendedOBJ.setDmwIteratorClass("TestBasicNamedObjectExtendedIterableDMW");
            _TestBasicNamedObjectExtendedOBJ.addMay("mvString");
            _TestBasicNamedObjectExtendedOBJ.addMay("mvTestBasicNamedObjectFixed");
            _TestBasicNamedObjectExtendedOBJ.addMust("name");
            _TestBasicNamedObjectExtendedOBJ.addMust("svString");
            _TestBasicNamedObjectExtendedOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestBasicNamedObjectExtendedIterableDMW");
            _TestBasicNamedObjectExtended.setDefinedIn(this);
            addClassDefList(_TestBasicNamedObjectExtended);

            ClassDefinitionDMO _TestBasicAuxiliaryOBJ = new ClassDefinitionDMO();
            _TestBasicAuxiliary = new ClassDefinition(_TestBasicAuxiliaryOBJ);
            _TestBasicAuxiliaryOBJ.setName("TestBasicAuxiliary");
            _TestBasicAuxiliaryOBJ.setDmdID("10006");
            _TestBasicAuxiliaryOBJ.setClassType("AUXILIARY");
            _TestBasicAuxiliaryOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestBasicAuxiliaryOBJ.setLineNumber("89");
            _TestBasicAuxiliaryOBJ.setDescription("The TestBasicAuxiliary class allows us to test basic auxiliary class functionality.");
            _TestBasicAuxiliaryOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestBasicAuxiliaryREF");
            _TestBasicAuxiliaryOBJ.setDmwIteratorClass("TestBasicAuxiliaryIterableDMW");
            _TestBasicAuxiliaryOBJ.addMay("svString");
            _TestBasicAuxiliaryOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestBasicAuxiliaryIterableDMW");
            _TestBasicAuxiliaryOBJ.setDmoAuxClassImport("org.dmd.dmt.shared.generated.auxw.TestBasicAuxiliaryDMO");
            _TestBasicAuxiliaryOBJ.setDmwAuxClass("TestBasicAuxiliary");
            _TestBasicAuxiliaryOBJ.setDmoAuxClass("TestBasicAuxiliaryDMO");
            _TestBasicAuxiliaryOBJ.setDmwAuxClassImport("org.dmd.dmt.server.generated.auxw.TestBasicAuxiliary");
            _TestBasicAuxiliary.setDefinedIn(this);
            addClassDefList(_TestBasicAuxiliary);

            ClassDefinitionDMO _TestOneLevelSubpackageOBJ = new ClassDefinitionDMO();
            _TestOneLevelSubpackage = new ClassDefinition(_TestOneLevelSubpackageOBJ);
            _TestOneLevelSubpackageOBJ.setName("TestOneLevelSubpackage");
            _TestOneLevelSubpackageOBJ.setDmdID("10007");
            _TestOneLevelSubpackageOBJ.setClassType("STRUCTURAL");
            _TestOneLevelSubpackageOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestOneLevelSubpackageOBJ.setLineNumber("100");
            _TestOneLevelSubpackageOBJ.setDescription("The TestOneLevelSubpackage class provides a test bed for generating DMWs in different subpackages.");
            _TestOneLevelSubpackageOBJ.setIsNamedBy("name");
            _TestOneLevelSubpackageOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestOneLevelSubpackageREF");
            _TestOneLevelSubpackageOBJ.setDmwIteratorClass("TestOneLevelSubpackageIterableDMW");
            _TestOneLevelSubpackageOBJ.addMay("mvString");
            _TestOneLevelSubpackageOBJ.addMust("name");
            _TestOneLevelSubpackageOBJ.addMust("svString");
            _TestOneLevelSubpackageOBJ.setSubpackage("subpack");
            _TestOneLevelSubpackageOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestOneLevelSubpackageIterableDMW");
            _TestOneLevelSubpackage.setDefinedIn(this);
            addClassDefList(_TestOneLevelSubpackage);

            ClassDefinitionDMO _TestOneLevelSubpackageExtendedOBJ = new ClassDefinitionDMO();
            _TestOneLevelSubpackageExtended = new ClassDefinition(_TestOneLevelSubpackageExtendedOBJ);
            _TestOneLevelSubpackageExtendedOBJ.setName("TestOneLevelSubpackageExtended");
            _TestOneLevelSubpackageExtendedOBJ.setDmdID("10008");
            _TestOneLevelSubpackageExtendedOBJ.setClassType("STRUCTURAL");
            _TestOneLevelSubpackageExtendedOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestOneLevelSubpackageExtendedOBJ.setLineNumber("112");
            _TestOneLevelSubpackageExtendedOBJ.setDescription("The TestOneLevelSubpackage class provides a test bed for generating DMWs in different subpackages.");
            _TestOneLevelSubpackageExtendedOBJ.setIsNamedBy("name");
            _TestOneLevelSubpackageExtendedOBJ.setUseWrapperType("EXTENDED");
            _TestOneLevelSubpackageExtendedOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestOneLevelSubpackageExtendedREF");
            _TestOneLevelSubpackageExtendedOBJ.setDmwIteratorClass("TestOneLevelSubpackageExtendedIterableDMW");
            _TestOneLevelSubpackageExtendedOBJ.addMay("mvString");
            _TestOneLevelSubpackageExtendedOBJ.addMust("name");
            _TestOneLevelSubpackageExtendedOBJ.addMust("svString");
            _TestOneLevelSubpackageExtendedOBJ.setSubpackage("subpack");
            _TestOneLevelSubpackageExtendedOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestOneLevelSubpackageExtendedIterableDMW");
            _TestOneLevelSubpackageExtended.setDefinedIn(this);
            addClassDefList(_TestOneLevelSubpackageExtended);

            ClassDefinitionDMO _TestMultiLevelSubpackageOBJ = new ClassDefinitionDMO();
            _TestMultiLevelSubpackage = new ClassDefinition(_TestMultiLevelSubpackageOBJ);
            _TestMultiLevelSubpackageOBJ.setName("TestMultiLevelSubpackage");
            _TestMultiLevelSubpackageOBJ.setDmdID("10009");
            _TestMultiLevelSubpackageOBJ.setClassType("STRUCTURAL");
            _TestMultiLevelSubpackageOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestMultiLevelSubpackageOBJ.setLineNumber("123");
            _TestMultiLevelSubpackageOBJ.setDescription("The TestOneLevelSubpackage class provides a test bed for generating DMWs in different subpackages.");
            _TestMultiLevelSubpackageOBJ.setIsNamedBy("name");
            _TestMultiLevelSubpackageOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestMultiLevelSubpackageREF");
            _TestMultiLevelSubpackageOBJ.setDmwIteratorClass("TestMultiLevelSubpackageIterableDMW");
            _TestMultiLevelSubpackageOBJ.addMay("mvString");
            _TestMultiLevelSubpackageOBJ.addMust("name");
            _TestMultiLevelSubpackageOBJ.addMust("svString");
            _TestMultiLevelSubpackageOBJ.setSubpackage("subpack.multi");
            _TestMultiLevelSubpackageOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestMultiLevelSubpackageIterableDMW");
            _TestMultiLevelSubpackage.setDefinedIn(this);
            addClassDefList(_TestMultiLevelSubpackage);

            ClassDefinitionDMO _TestDerivedSubpackageOBJ = new ClassDefinitionDMO();
            _TestDerivedSubpackage = new ClassDefinition(_TestDerivedSubpackageOBJ);
            _TestDerivedSubpackageOBJ.setName("TestDerivedSubpackage");
            _TestDerivedSubpackageOBJ.setDmdID("10010");
            _TestDerivedSubpackageOBJ.setClassType("STRUCTURAL");
            _TestDerivedSubpackageOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestDerivedSubpackageOBJ.setLineNumber("135");
            _TestDerivedSubpackageOBJ.setDescription("The TestDerivedSubpackage tests derivation within the same subpackage.");
            _TestDerivedSubpackageOBJ.setDerivedFrom("TestMultiLevelSubpackage");
            _TestDerivedSubpackageOBJ.setIsNamedBy("name");
            _TestDerivedSubpackageOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestDerivedSubpackageREF");
            _TestDerivedSubpackageOBJ.setDmwIteratorClass("TestDerivedSubpackageIterableDMW");
            _TestDerivedSubpackageOBJ.addMay("mvString");
            _TestDerivedSubpackageOBJ.addMust("name");
            _TestDerivedSubpackageOBJ.addMust("svString");
            _TestDerivedSubpackageOBJ.setSubpackage("subpack.multi");
            _TestDerivedSubpackageOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestDerivedSubpackageIterableDMW");
            _TestDerivedSubpackage.setDefinedIn(this);
            addClassDefList(_TestDerivedSubpackage);

            ClassDefinitionDMO _TestDerivedDiffSubpackageOBJ = new ClassDefinitionDMO();
            _TestDerivedDiffSubpackage = new ClassDefinition(_TestDerivedDiffSubpackageOBJ);
            _TestDerivedDiffSubpackageOBJ.setName("TestDerivedDiffSubpackage");
            _TestDerivedDiffSubpackageOBJ.setDmdID("10011");
            _TestDerivedDiffSubpackageOBJ.setClassType("STRUCTURAL");
            _TestDerivedDiffSubpackageOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _TestDerivedDiffSubpackageOBJ.setLineNumber("148");
            _TestDerivedDiffSubpackageOBJ.setDescription("The TestDerivedDiffSubpackage test derivation from a different subpackage.");
            _TestDerivedDiffSubpackageOBJ.setDerivedFrom("TestOneLevelSubpackage");
            _TestDerivedDiffSubpackageOBJ.setIsNamedBy("name");
            _TestDerivedDiffSubpackageOBJ.setUseWrapperType("EXTENDED");
            _TestDerivedDiffSubpackageOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.TestDerivedDiffSubpackageREF");
            _TestDerivedDiffSubpackageOBJ.setDmwIteratorClass("TestDerivedDiffSubpackageIterableDMW");
            _TestDerivedDiffSubpackageOBJ.addMay("mvString");
            _TestDerivedDiffSubpackageOBJ.addMust("name");
            _TestDerivedDiffSubpackageOBJ.addMust("svString");
            _TestDerivedDiffSubpackageOBJ.setSubpackage("subpack.multi");
            _TestDerivedDiffSubpackageOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.TestDerivedDiffSubpackageIterableDMW");
            _TestDerivedDiffSubpackage.setDefinedIn(this);
            addClassDefList(_TestDerivedDiffSubpackage);

            ClassDefinitionDMO _UUIDNamedObjectOBJ = new ClassDefinitionDMO();
            _UUIDNamedObject = new ClassDefinition(_UUIDNamedObjectOBJ);
            _UUIDNamedObjectOBJ.setName("UUIDNamedObject");
            _UUIDNamedObjectOBJ.setDmdID("10012");
            _UUIDNamedObjectOBJ.setClassType("STRUCTURAL");
            _UUIDNamedObjectOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _UUIDNamedObjectOBJ.setLineNumber("163");
            _UUIDNamedObjectOBJ.setIsNamedBy("uuidName");
            _UUIDNamedObjectOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.UUIDNamedObjectREF");
            _UUIDNamedObjectOBJ.setDmwIteratorClass("UUIDNamedObjectIterableDMW");
            _UUIDNamedObjectOBJ.addMay("svBoolean");
            _UUIDNamedObjectOBJ.addMay("mvBoolean");
            _UUIDNamedObjectOBJ.addMay("svString");
            _UUIDNamedObjectOBJ.addMay("mvString");
            _UUIDNamedObjectOBJ.addMay("svDate");
            _UUIDNamedObjectOBJ.addMay("mvDate");
            _UUIDNamedObjectOBJ.addMay("svDouble");
            _UUIDNamedObjectOBJ.addMay("mvDouble");
            _UUIDNamedObjectOBJ.addMust("uuidName");
            _UUIDNamedObjectOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.UUIDNamedObjectIterableDMW");
            _UUIDNamedObject.setDefinedIn(this);
            addClassDefList(_UUIDNamedObject);

            ClassDefinitionDMO _IntegerNamedObjectOBJ = new ClassDefinitionDMO();
            _IntegerNamedObject = new ClassDefinition(_IntegerNamedObjectOBJ);
            _IntegerNamedObjectOBJ.setName("IntegerNamedObject");
            _IntegerNamedObjectOBJ.setDmdID("10013");
            _IntegerNamedObjectOBJ.setClassType("STRUCTURAL");
            _IntegerNamedObjectOBJ.setDataType("NONPERSISTENT");
            _IntegerNamedObjectOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _IntegerNamedObjectOBJ.setLineNumber("172");
            _IntegerNamedObjectOBJ.setIsNamedBy("integerName");
            _IntegerNamedObjectOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.IntegerNamedObjectREF");
            _IntegerNamedObjectOBJ.setDmwIteratorClass("IntegerNamedObjectIterableDMW");
            _IntegerNamedObjectOBJ.addMay("svString");
            _IntegerNamedObjectOBJ.addMust("integerName");
            _IntegerNamedObjectOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.IntegerNamedObjectIterableDMW");
            _IntegerNamedObject.setDefinedIn(this);
            addClassDefList(_IntegerNamedObject);

            ClassDefinitionDMO _NameContainerTestOBJ = new ClassDefinitionDMO();
            _NameContainerTest = new ClassDefinition(_NameContainerTestOBJ);
            _NameContainerTestOBJ.setName("NameContainerTest");
            _NameContainerTestOBJ.setDmdID("10014");
            _NameContainerTestOBJ.setClassType("STRUCTURAL");
            _NameContainerTestOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _NameContainerTestOBJ.setLineNumber("181");
            _NameContainerTestOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.NameContainerTestREF");
            _NameContainerTestOBJ.setDmwIteratorClass("NameContainerTestIterableDMW");
            _NameContainerTestOBJ.addMay("anotherDmtName");
            _NameContainerTestOBJ.addMust("dmtStringName");
            _NameContainerTestOBJ.addMust("anObjName");
            _NameContainerTestOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.NameContainerTestIterableDMW");
            _NameContainerTest.setDefinedIn(this);
            addClassDefList(_NameContainerTest);

            ClassDefinitionDMO _BaseObjOBJ = new ClassDefinitionDMO();
            _BaseObj = new ClassDefinition(_BaseObjOBJ);
            _BaseObjOBJ.setName("BaseObj");
            _BaseObjOBJ.setDmdID("10015");
            _BaseObjOBJ.setClassType("ABSTRACT");
            _BaseObjOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _BaseObjOBJ.setLineNumber("189");
            _BaseObjOBJ.setIsNamedBy("name");
            _BaseObjOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.BaseObjREF");
            _BaseObjOBJ.setDmwIteratorClass("BaseObjIterableDMW");
            _BaseObjOBJ.addMay("svDate");
            _BaseObjOBJ.addMust("name");
            _BaseObjOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.BaseObjIterableDMW");
            _BaseObj.setDefinedIn(this);
            addClassDefList(_BaseObj);

            ClassDefinitionDMO _ObjWithRefsOBJ = new ClassDefinitionDMO();
            _ObjWithRefs = new ClassDefinition(_ObjWithRefsOBJ);
            _ObjWithRefsOBJ.setName("ObjWithRefs");
            _ObjWithRefsOBJ.setDmdID("10016");
            _ObjWithRefsOBJ.setClassType("STRUCTURAL");
            _ObjWithRefsOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _ObjWithRefsOBJ.setLineNumber("211");
            _ObjWithRefsOBJ.setDerivedFrom("BaseObj");
            _ObjWithRefsOBJ.setIsNamedBy("name");
            _ObjWithRefsOBJ.setUseWrapperType("EXTENDED");
            _ObjWithRefsOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.ObjWithRefsREF");
            _ObjWithRefsOBJ.setDmwIteratorClass("ObjWithRefsIterableDMW");
            _ObjWithRefsOBJ.addMay("objRef");
            _ObjWithRefsOBJ.addMay("objRefMV");
            _ObjWithRefsOBJ.addMay("objRefHM");
            _ObjWithRefsOBJ.addMay("mvString");
            _ObjWithRefsOBJ.addMay("intToString");
            _ObjWithRefsOBJ.addMay("attrIDs");
            _ObjWithRefsOBJ.addMay("hsDate");
            _ObjWithRefsOBJ.addMay("hsTestEnum");
            _ObjWithRefsOBJ.addMay("hsNames");
            _ObjWithRefsOBJ.addMay("nonperString");
            _ObjWithRefsOBJ.addMay("transString");
            _ObjWithRefsOBJ.addMust("name");
            _ObjWithRefsOBJ.addMust("svString");
            _ObjWithRefsOBJ.addMust("mvTestEnum");
            _ObjWithRefsOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.ObjWithRefsIterableDMW");
            _ObjWithRefs.setDefinedIn(this);
            addClassDefList(_ObjWithRefs);

            ClassDefinitionDMO _ClientCountFilterOBJ = new ClassDefinitionDMO();
            _ClientCountFilter = new ClassDefinition(_ClientCountFilterOBJ);
            _ClientCountFilterOBJ.setName("ClientCountFilter");
            _ClientCountFilterOBJ.setDmdID("10017");
            _ClientCountFilterOBJ.setClassType("STRUCTURAL");
            _ClientCountFilterOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _ClientCountFilterOBJ.setLineNumber("218");
            _ClientCountFilterOBJ.setUseWrapperType("EXTENDED");
            _ClientCountFilterOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.ClientCountFilterREF");
            _ClientCountFilterOBJ.setDmwIteratorClass("ClientCountFilterIterableDMW");
            _ClientCountFilterOBJ.addMay("OUIFilter");
            _ClientCountFilterOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.ClientCountFilterIterableDMW");
            _ClientCountFilter.setDefinedIn(this);
            addClassDefList(_ClientCountFilter);

            ClassDefinitionDMO _ClientCountFilterRequestOBJ = new ClassDefinitionDMO();
            _ClientCountFilterRequest = new ClassDefinition(_ClientCountFilterRequestOBJ);
            _ClientCountFilterRequestOBJ.setName("ClientCountFilterRequest");
            _ClientCountFilterRequestOBJ.setDmdID("10018");
            _ClientCountFilterRequestOBJ.setClassType("STRUCTURAL");
            _ClientCountFilterRequestOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/classes.dmd");
            _ClientCountFilterRequestOBJ.setLineNumber("227");
            _ClientCountFilterRequestOBJ.setDerivedFrom("Request");
            _ClientCountFilterRequestOBJ.setUseWrapperType("EXTENDED");
            _ClientCountFilterRequestOBJ.setDmtREFImport("org.dmd.dmt.shared.generated.types.ClientCountFilterRequestREF");
            _ClientCountFilterRequestOBJ.setDmwIteratorClass("ClientCountFilterRequestIterableDMW");
            _ClientCountFilterRequestOBJ.addMay("clientCountFilter");
            _ClientCountFilterRequestOBJ.addMust("requestID");
            _ClientCountFilterRequestOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.ClientCountFilterRequestIterableDMW");
            _ClientCountFilterRequest.setDefinedIn(this);
            addClassDefList(_ClientCountFilterRequest);

    }

    private void initAttributes() throws DmcValueException {
            AttributeDefinitionDMO _svBooleanOBJ = new AttributeDefinitionDMO();
            _svBoolean = new AttributeDefinition(_svBooleanOBJ);
            _svBooleanOBJ.setType("Boolean");
            _svBooleanOBJ.setName("svBoolean");
            _svBooleanOBJ.setDmdID("10000");
            _svBooleanOBJ.setDescription("A single valued Boolean.");
            _svBoolean.setDefinedIn(this);
            _svBooleanOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _svBooleanOBJ.setLineNumber("10");
            addAttributeDefList(_svBoolean);

            AttributeDefinitionDMO _mvBooleanOBJ = new AttributeDefinitionDMO();
            _mvBoolean = new AttributeDefinition(_mvBooleanOBJ);
            _mvBooleanOBJ.setType("Boolean");
            _mvBooleanOBJ.setName("mvBoolean");
            _mvBooleanOBJ.setDmdID("10001");
            _mvBooleanOBJ.setDescription("A multi-valued Boolean.");
            _mvBooleanOBJ.setValueType("MULTI");
            _mvBoolean.setDefinedIn(this);
            _mvBooleanOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvBooleanOBJ.setLineNumber("17");
            addAttributeDefList(_mvBoolean);

            AttributeDefinitionDMO _svDateOBJ = new AttributeDefinitionDMO();
            _svDate = new AttributeDefinition(_svDateOBJ);
            _svDateOBJ.setType("Date");
            _svDateOBJ.setName("svDate");
            _svDateOBJ.setDmdID("10010");
            _svDateOBJ.setDescription("A sv Date.");
            _svDate.setDefinedIn(this);
            _svDateOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _svDateOBJ.setLineNumber("26");
            addAttributeDefList(_svDate);

            AttributeDefinitionDMO _mvDateOBJ = new AttributeDefinitionDMO();
            _mvDate = new AttributeDefinition(_mvDateOBJ);
            _mvDateOBJ.setType("Date");
            _mvDateOBJ.setName("mvDate");
            _mvDateOBJ.setDmdID("10011");
            _mvDateOBJ.setDescription("A mv Date.");
            _mvDateOBJ.setValueType("MULTI");
            _mvDate.setDefinedIn(this);
            _mvDateOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvDateOBJ.setLineNumber("33");
            addAttributeDefList(_mvDate);

            AttributeDefinitionDMO _hsDateOBJ = new AttributeDefinitionDMO();
            _hsDate = new AttributeDefinition(_hsDateOBJ);
            _hsDateOBJ.setType("Date");
            _hsDateOBJ.setName("hsDate");
            _hsDateOBJ.setDmdID("10012");
            _hsDateOBJ.setDescription("A hs Date.");
            _hsDateOBJ.setValueType("HASHSET");
            _hsDate.setDefinedIn(this);
            _hsDateOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _hsDateOBJ.setLineNumber("40");
            addAttributeDefList(_hsDate);

            AttributeDefinitionDMO _tsDateOBJ = new AttributeDefinitionDMO();
            _tsDate = new AttributeDefinition(_tsDateOBJ);
            _tsDateOBJ.setType("Date");
            _tsDateOBJ.setName("tsDate");
            _tsDateOBJ.setDmdID("10013");
            _tsDateOBJ.setDescription("A ts Date.");
            _tsDateOBJ.setValueType("TREESET");
            _tsDate.setDefinedIn(this);
            _tsDateOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _tsDateOBJ.setLineNumber("47");
            addAttributeDefList(_tsDate);

            AttributeDefinitionDMO _svDmcObjectOBJ = new AttributeDefinitionDMO();
            _svDmcObject = new AttributeDefinition(_svDmcObjectOBJ);
            _svDmcObjectOBJ.setType("DmcObject");
            _svDmcObjectOBJ.setName("svDmcObject");
            _svDmcObjectOBJ.setDmdID("10020");
            _svDmcObjectOBJ.setDescription("A single valued DmcObject.");
            _svDmcObject.setDefinedIn(this);
            _svDmcObjectOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _svDmcObjectOBJ.setLineNumber("56");
            addAttributeDefList(_svDmcObject);

            AttributeDefinitionDMO _mvDmcObjectOBJ = new AttributeDefinitionDMO();
            _mvDmcObject = new AttributeDefinition(_mvDmcObjectOBJ);
            _mvDmcObjectOBJ.setType("DmcObject");
            _mvDmcObjectOBJ.setName("mvDmcObject");
            _mvDmcObjectOBJ.setDmdID("10021");
            _mvDmcObjectOBJ.setDescription("A multi-valued DmcObject.");
            _mvDmcObjectOBJ.setValueType("MULTI");
            _mvDmcObject.setDefinedIn(this);
            _mvDmcObjectOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvDmcObjectOBJ.setLineNumber("63");
            addAttributeDefList(_mvDmcObject);

            AttributeDefinitionDMO _svDoubleOBJ = new AttributeDefinitionDMO();
            _svDouble = new AttributeDefinition(_svDoubleOBJ);
            _svDoubleOBJ.setType("Double");
            _svDoubleOBJ.setName("svDouble");
            _svDoubleOBJ.setDmdID("10040");
            _svDoubleOBJ.setDescription("A sv Double.");
            _svDouble.setDefinedIn(this);
            _svDoubleOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _svDoubleOBJ.setLineNumber("102");
            addAttributeDefList(_svDouble);

            AttributeDefinitionDMO _mvDoubleOBJ = new AttributeDefinitionDMO();
            _mvDouble = new AttributeDefinition(_mvDoubleOBJ);
            _mvDoubleOBJ.setType("Double");
            _mvDoubleOBJ.setName("mvDouble");
            _mvDoubleOBJ.setDmdID("10041");
            _mvDoubleOBJ.setDescription("An mv Double.");
            _mvDoubleOBJ.setValueType("MULTI");
            _mvDouble.setDefinedIn(this);
            _mvDoubleOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvDoubleOBJ.setLineNumber("109");
            addAttributeDefList(_mvDouble);

            AttributeDefinitionDMO _hsDoubleOBJ = new AttributeDefinitionDMO();
            _hsDouble = new AttributeDefinition(_hsDoubleOBJ);
            _hsDoubleOBJ.setType("Double");
            _hsDoubleOBJ.setName("hsDouble");
            _hsDoubleOBJ.setDmdID("10042");
            _hsDoubleOBJ.setDescription("An hs Double.");
            _hsDoubleOBJ.setValueType("HASHSET");
            _hsDouble.setDefinedIn(this);
            _hsDoubleOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _hsDoubleOBJ.setLineNumber("116");
            addAttributeDefList(_hsDouble);

            AttributeDefinitionDMO _tsDoubleOBJ = new AttributeDefinitionDMO();
            _tsDouble = new AttributeDefinition(_tsDoubleOBJ);
            _tsDoubleOBJ.setType("Double");
            _tsDoubleOBJ.setName("tsDouble");
            _tsDoubleOBJ.setDmdID("10043");
            _tsDoubleOBJ.setDescription("A ts Double.");
            _tsDoubleOBJ.setValueType("TREESET");
            _tsDouble.setDefinedIn(this);
            _tsDoubleOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _tsDoubleOBJ.setLineNumber("123");
            addAttributeDefList(_tsDouble);

            AttributeDefinitionDMO _svFloatOBJ = new AttributeDefinitionDMO();
            _svFloat = new AttributeDefinition(_svFloatOBJ);
            _svFloatOBJ.setType("Float");
            _svFloatOBJ.setName("svFloat");
            _svFloatOBJ.setDmdID("10050");
            _svFloatOBJ.setDescription("A sv Float.");
            _svFloat.setDefinedIn(this);
            _svFloatOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _svFloatOBJ.setLineNumber("132");
            addAttributeDefList(_svFloat);

            AttributeDefinitionDMO _mvFloatOBJ = new AttributeDefinitionDMO();
            _mvFloat = new AttributeDefinition(_mvFloatOBJ);
            _mvFloatOBJ.setType("Float");
            _mvFloatOBJ.setName("mvFloat");
            _mvFloatOBJ.setDmdID("10051");
            _mvFloatOBJ.setDescription("An mv Float.");
            _mvFloatOBJ.setValueType("MULTI");
            _mvFloat.setDefinedIn(this);
            _mvFloatOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvFloatOBJ.setLineNumber("139");
            addAttributeDefList(_mvFloat);

            AttributeDefinitionDMO _hsFloatOBJ = new AttributeDefinitionDMO();
            _hsFloat = new AttributeDefinition(_hsFloatOBJ);
            _hsFloatOBJ.setType("Float");
            _hsFloatOBJ.setName("hsFloat");
            _hsFloatOBJ.setDmdID("10052");
            _hsFloatOBJ.setDescription("An hs Float.");
            _hsFloatOBJ.setValueType("HASHSET");
            _hsFloat.setDefinedIn(this);
            _hsFloatOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _hsFloatOBJ.setLineNumber("146");
            addAttributeDefList(_hsFloat);

            AttributeDefinitionDMO _tsFloatOBJ = new AttributeDefinitionDMO();
            _tsFloat = new AttributeDefinition(_tsFloatOBJ);
            _tsFloatOBJ.setType("Float");
            _tsFloatOBJ.setName("tsFloat");
            _tsFloatOBJ.setDmdID("10053");
            _tsFloatOBJ.setDescription("A ts Float.");
            _tsFloatOBJ.setValueType("TREESET");
            _tsFloat.setDefinedIn(this);
            _tsFloatOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _tsFloatOBJ.setLineNumber("153");
            addAttributeDefList(_tsFloat);

            AttributeDefinitionDMO _svIntegerOBJ = new AttributeDefinitionDMO();
            _svInteger = new AttributeDefinition(_svIntegerOBJ);
            _svIntegerOBJ.setType("Integer");
            _svIntegerOBJ.setName("svInteger");
            _svIntegerOBJ.setDmdID("10060");
            _svIntegerOBJ.setDescription("A sv Integer.");
            _svInteger.setDefinedIn(this);
            _svIntegerOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _svIntegerOBJ.setLineNumber("162");
            addAttributeDefList(_svInteger);

            AttributeDefinitionDMO _mvIntegerOBJ = new AttributeDefinitionDMO();
            _mvInteger = new AttributeDefinition(_mvIntegerOBJ);
            _mvIntegerOBJ.setType("Integer");
            _mvIntegerOBJ.setName("mvInteger");
            _mvIntegerOBJ.setDmdID("10061");
            _mvIntegerOBJ.setDescription("An mv Integer.");
            _mvIntegerOBJ.setValueType("MULTI");
            _mvInteger.setDefinedIn(this);
            _mvIntegerOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvIntegerOBJ.setLineNumber("169");
            addAttributeDefList(_mvInteger);

            AttributeDefinitionDMO _hsIntegerOBJ = new AttributeDefinitionDMO();
            _hsInteger = new AttributeDefinition(_hsIntegerOBJ);
            _hsIntegerOBJ.setType("Integer");
            _hsIntegerOBJ.setName("hsInteger");
            _hsIntegerOBJ.setDmdID("10062");
            _hsIntegerOBJ.setDescription("An hs Integer.");
            _hsIntegerOBJ.setValueType("HASHSET");
            _hsInteger.setDefinedIn(this);
            _hsIntegerOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _hsIntegerOBJ.setLineNumber("176");
            addAttributeDefList(_hsInteger);

            AttributeDefinitionDMO _tsIntegerOBJ = new AttributeDefinitionDMO();
            _tsInteger = new AttributeDefinition(_tsIntegerOBJ);
            _tsIntegerOBJ.setType("Integer");
            _tsIntegerOBJ.setName("tsInteger");
            _tsIntegerOBJ.setDmdID("10063");
            _tsIntegerOBJ.setDescription("A ts Integer.");
            _tsIntegerOBJ.setValueType("TREESET");
            _tsInteger.setDefinedIn(this);
            _tsIntegerOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _tsIntegerOBJ.setLineNumber("183");
            addAttributeDefList(_tsInteger);

            AttributeDefinitionDMO _intToStringOBJ = new AttributeDefinitionDMO();
            _intToString = new AttributeDefinition(_intToStringOBJ);
            _intToStringOBJ.setType("IntegerToString");
            _intToStringOBJ.setName("intToString");
            _intToStringOBJ.setDmdID("10080");
            _intToStringOBJ.setDescription("A hash mapping of an integer to a string.");
            _intToStringOBJ.setValueType("HASHMAPPED");
            _intToString.setDefinedIn(this);
            _intToStringOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _intToStringOBJ.setLineNumber("193");
            addAttributeDefList(_intToString);

            AttributeDefinitionDMO _svLongOBJ = new AttributeDefinitionDMO();
            _svLong = new AttributeDefinition(_svLongOBJ);
            _svLongOBJ.setType("Long");
            _svLongOBJ.setName("svLong");
            _svLongOBJ.setDmdID("10110");
            _svLongOBJ.setDescription("A sv Long.");
            _svLong.setDefinedIn(this);
            _svLongOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _svLongOBJ.setLineNumber("202");
            addAttributeDefList(_svLong);

            AttributeDefinitionDMO _mvLongOBJ = new AttributeDefinitionDMO();
            _mvLong = new AttributeDefinition(_mvLongOBJ);
            _mvLongOBJ.setType("Long");
            _mvLongOBJ.setName("mvLong");
            _mvLongOBJ.setDmdID("10111");
            _mvLongOBJ.setDescription("An mv Long.");
            _mvLongOBJ.setValueType("MULTI");
            _mvLong.setDefinedIn(this);
            _mvLongOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvLongOBJ.setLineNumber("209");
            addAttributeDefList(_mvLong);

            AttributeDefinitionDMO _hsLongOBJ = new AttributeDefinitionDMO();
            _hsLong = new AttributeDefinition(_hsLongOBJ);
            _hsLongOBJ.setType("Long");
            _hsLongOBJ.setName("hsLong");
            _hsLongOBJ.setDmdID("10112");
            _hsLongOBJ.setDescription("An hs Long.");
            _hsLongOBJ.setValueType("HASHSET");
            _hsLong.setDefinedIn(this);
            _hsLongOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _hsLongOBJ.setLineNumber("216");
            addAttributeDefList(_hsLong);

            AttributeDefinitionDMO _tsLongOBJ = new AttributeDefinitionDMO();
            _tsLong = new AttributeDefinition(_tsLongOBJ);
            _tsLongOBJ.setType("Long");
            _tsLongOBJ.setName("tsLong");
            _tsLongOBJ.setDmdID("10113");
            _tsLongOBJ.setDescription("A ts Long.");
            _tsLongOBJ.setValueType("TREESET");
            _tsLong.setDefinedIn(this);
            _tsLongOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _tsLongOBJ.setLineNumber("223");
            addAttributeDefList(_tsLong);

            AttributeDefinitionDMO _svStringOBJ = new AttributeDefinitionDMO();
            _svString = new AttributeDefinition(_svStringOBJ);
            _svStringOBJ.setType("String");
            _svStringOBJ.setName("svString");
            _svStringOBJ.setDmdID("10140");
            _svStringOBJ.setDescription("A sv String.");
            _svString.setDefinedIn(this);
            _svStringOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _svStringOBJ.setLineNumber("233");
            addAttributeDefList(_svString);

            AttributeDefinitionDMO _mvStringOBJ = new AttributeDefinitionDMO();
            _mvString = new AttributeDefinition(_mvStringOBJ);
            _mvStringOBJ.setType("String");
            _mvStringOBJ.setName("mvString");
            _mvStringOBJ.setDmdID("10141");
            _mvStringOBJ.setDescription("An mv String.");
            _mvStringOBJ.setValueType("MULTI");
            _mvString.setDefinedIn(this);
            _mvStringOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvStringOBJ.setLineNumber("240");
            addAttributeDefList(_mvString);

            AttributeDefinitionDMO _hsStringOBJ = new AttributeDefinitionDMO();
            _hsString = new AttributeDefinition(_hsStringOBJ);
            _hsStringOBJ.setType("String");
            _hsStringOBJ.setName("hsString");
            _hsStringOBJ.setDmdID("10142");
            _hsStringOBJ.setDescription("An hs String.");
            _hsStringOBJ.setValueType("HASHSET");
            _hsString.setDefinedIn(this);
            _hsStringOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _hsStringOBJ.setLineNumber("247");
            addAttributeDefList(_hsString);

            AttributeDefinitionDMO _tsStringOBJ = new AttributeDefinitionDMO();
            _tsString = new AttributeDefinition(_tsStringOBJ);
            _tsStringOBJ.setType("String");
            _tsStringOBJ.setName("tsString");
            _tsStringOBJ.setDmdID("10153");
            _tsStringOBJ.setDescription("A ts String.");
            _tsStringOBJ.setValueType("TREESET");
            _tsString.setDefinedIn(this);
            _tsStringOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _tsStringOBJ.setLineNumber("254");
            addAttributeDefList(_tsString);

            AttributeDefinitionDMO _svTestBasicNamedObjectFixedOBJ = new AttributeDefinitionDMO();
            _svTestBasicNamedObjectFixed = new AttributeDefinition(_svTestBasicNamedObjectFixedOBJ);
            _svTestBasicNamedObjectFixedOBJ.setType("TestBasicNamedObjectFixed");
            _svTestBasicNamedObjectFixedOBJ.setName("svTestBasicNamedObjectFixed");
            _svTestBasicNamedObjectFixedOBJ.setDmdID("10300");
            _svTestBasicNamedObjectFixedOBJ.setDescription("A single valued TestBasicNamedObjectFixed.");
            _svTestBasicNamedObjectFixed.setDefinedIn(this);
            _svTestBasicNamedObjectFixedOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _svTestBasicNamedObjectFixedOBJ.setLineNumber("280");
            addAttributeDefList(_svTestBasicNamedObjectFixed);

            AttributeDefinitionDMO _mvTestBasicNamedObjectFixedOBJ = new AttributeDefinitionDMO();
            _mvTestBasicNamedObjectFixed = new AttributeDefinition(_mvTestBasicNamedObjectFixedOBJ);
            _mvTestBasicNamedObjectFixedOBJ.setType("TestBasicNamedObjectFixed");
            _mvTestBasicNamedObjectFixedOBJ.setName("mvTestBasicNamedObjectFixed");
            _mvTestBasicNamedObjectFixedOBJ.setDmdID("10301");
            _mvTestBasicNamedObjectFixedOBJ.setDescription("A multi-valued TestBasicNamedObjectFixed.");
            _mvTestBasicNamedObjectFixedOBJ.setValueType("MULTI");
            _mvTestBasicNamedObjectFixed.setDefinedIn(this);
            _mvTestBasicNamedObjectFixedOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvTestBasicNamedObjectFixedOBJ.setLineNumber("287");
            addAttributeDefList(_mvTestBasicNamedObjectFixed);

            AttributeDefinitionDMO _anObjNameOBJ = new AttributeDefinitionDMO();
            _anObjName = new AttributeDefinition(_anObjNameOBJ);
            _anObjNameOBJ.setType("NameContainer");
            _anObjNameOBJ.setName("anObjName");
            _anObjNameOBJ.setDmdID("10400");
            _anObjNameOBJ.setDescription("A single-valued NameContainer.");
            _anObjName.setDefinedIn(this);
            _anObjNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _anObjNameOBJ.setLineNumber("293");
            addAttributeDefList(_anObjName);

            AttributeDefinitionDMO _dmtStringNameOBJ = new AttributeDefinitionDMO();
            _dmtStringName = new AttributeDefinition(_dmtStringNameOBJ);
            _dmtStringNameOBJ.setDesignatedNameAttribute("true");
            _dmtStringNameOBJ.setType("DmtStringName");
            _dmtStringNameOBJ.setName("dmtStringName");
            _dmtStringNameOBJ.setDmdID("10401");
            _dmtStringNameOBJ.setDescription("The naming attribute for DmtNameStrings.");
            _dmtStringName.setDefinedIn(this);
            _dmtStringNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _dmtStringNameOBJ.setLineNumber("300");
            addAttributeDefList(_dmtStringName);

            AttributeDefinitionDMO _anotherDmtNameOBJ = new AttributeDefinitionDMO();
            _anotherDmtName = new AttributeDefinition(_anotherDmtNameOBJ);
            _anotherDmtNameOBJ.setType("DmtStringName");
            _anotherDmtNameOBJ.setName("anotherDmtName");
            _anotherDmtNameOBJ.setDmdID("10402");
            _anotherDmtNameOBJ.setDescription("Another DmtStringName attribute.");
            _anotherDmtName.setDefinedIn(this);
            _anotherDmtNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _anotherDmtNameOBJ.setLineNumber("306");
            addAttributeDefList(_anotherDmtName);

            AttributeDefinitionDMO _objRefOBJ = new AttributeDefinitionDMO();
            _objRef = new AttributeDefinition(_objRefOBJ);
            _objRefOBJ.setType("ObjWithRefs");
            _objRefOBJ.setName("objRef");
            _objRefOBJ.setDmdID("10403");
            _objRefOBJ.setDescription("Another ObjWithRefs object.");
            _objRef.setDefinedIn(this);
            _objRefOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _objRefOBJ.setLineNumber("312");
            addAttributeDefList(_objRef);

            AttributeDefinitionDMO _objRefMVOBJ = new AttributeDefinitionDMO();
            _objRefMV = new AttributeDefinition(_objRefMVOBJ);
            _objRefMVOBJ.setType("ObjWithRefs");
            _objRefMVOBJ.setName("objRefMV");
            _objRefMVOBJ.setDmdID("10404");
            _objRefMVOBJ.setDescription("Other ObjWithRefs objects.");
            _objRefMVOBJ.setValueType("MULTI");
            _objRefMV.setDefinedIn(this);
            _objRefMVOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _objRefMVOBJ.setLineNumber("319");
            addAttributeDefList(_objRefMV);

            AttributeDefinitionDMO _objRefHMOBJ = new AttributeDefinitionDMO();
            _objRefHM = new AttributeDefinition(_objRefHMOBJ);
            _objRefHMOBJ.setType("ObjWithRefs");
            _objRefHMOBJ.setName("objRefHM");
            _objRefHMOBJ.setDmdID("10405");
            _objRefHMOBJ.setDescription("Other ObjWithRefs objects.");
            _objRefHMOBJ.setValueType("HASHMAPPED");
            _objRefHM.setDefinedIn(this);
            _objRefHMOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _objRefHMOBJ.setLineNumber("326");
            addAttributeDefList(_objRefHM);

            AttributeDefinitionDMO _attrIDsOBJ = new AttributeDefinitionDMO();
            _attrIDs = new AttributeDefinition(_attrIDsOBJ);
            _attrIDsOBJ.setType("AttributeID");
            _attrIDsOBJ.setName("attrIDs");
            _attrIDsOBJ.setDmdID("10406");
            _attrIDsOBJ.setValueType("HASHSET");
            _attrIDs.setDefinedIn(this);
            _attrIDsOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _attrIDsOBJ.setLineNumber("332");
            addAttributeDefList(_attrIDs);

            AttributeDefinitionDMO _OUIFilterOBJ = new AttributeDefinitionDMO();
            _OUIFilter = new AttributeDefinition(_OUIFilterOBJ);
            _OUIFilterOBJ.setType("String");
            _OUIFilterOBJ.setName("OUIFilter");
            _OUIFilterOBJ.setDmdID("10407");
            _OUIFilterOBJ.setNullReturnValue("");
            _OUIFilter.setDefinedIn(this);
            _OUIFilterOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _OUIFilterOBJ.setLineNumber("338");
            addAttributeDefList(_OUIFilter);

            AttributeDefinitionDMO _clientCountFilterOBJ = new AttributeDefinitionDMO();
            _clientCountFilter = new AttributeDefinition(_clientCountFilterOBJ);
            _clientCountFilterOBJ.setType("ClientCountFilter");
            _clientCountFilterOBJ.setName("clientCountFilter");
            _clientCountFilterOBJ.setDmdID("10408");
            _clientCountFilter.setDefinedIn(this);
            _clientCountFilterOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _clientCountFilterOBJ.setLineNumber("343");
            addAttributeDefList(_clientCountFilter);

            AttributeDefinitionDMO _mvTestEnumOBJ = new AttributeDefinitionDMO();
            _mvTestEnum = new AttributeDefinition(_mvTestEnumOBJ);
            _mvTestEnumOBJ.setType("DmtTestEnum");
            _mvTestEnumOBJ.setName("mvTestEnum");
            _mvTestEnumOBJ.setDmdID("10409");
            _mvTestEnumOBJ.setValueType("MULTI");
            _mvTestEnum.setDefinedIn(this);
            _mvTestEnumOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _mvTestEnumOBJ.setLineNumber("349");
            addAttributeDefList(_mvTestEnum);

            AttributeDefinitionDMO _hsTestEnumOBJ = new AttributeDefinitionDMO();
            _hsTestEnum = new AttributeDefinition(_hsTestEnumOBJ);
            _hsTestEnumOBJ.setType("DmtTestEnum");
            _hsTestEnumOBJ.setName("hsTestEnum");
            _hsTestEnumOBJ.setDmdID("10410");
            _hsTestEnumOBJ.setValueType("HASHSET");
            _hsTestEnum.setDefinedIn(this);
            _hsTestEnumOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _hsTestEnumOBJ.setLineNumber("355");
            addAttributeDefList(_hsTestEnum);

            AttributeDefinitionDMO _hsNamesOBJ = new AttributeDefinitionDMO();
            _hsNames = new AttributeDefinition(_hsNamesOBJ);
            _hsNamesOBJ.setType("NameContainer");
            _hsNamesOBJ.setName("hsNames");
            _hsNamesOBJ.setDmdID("10411");
            _hsNamesOBJ.setValueType("HASHSET");
            _hsNames.setDefinedIn(this);
            _hsNamesOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _hsNamesOBJ.setLineNumber("361");
            addAttributeDefList(_hsNames);

            AttributeDefinitionDMO _transStringOBJ = new AttributeDefinitionDMO();
            _transString = new AttributeDefinition(_transStringOBJ);
            _transStringOBJ.setType("String");
            _transStringOBJ.setName("transString");
            _transStringOBJ.setDmdID("10412");
            _transStringOBJ.setDataType("TRANSIENT");
            _transStringOBJ.setValueType("HASHSET");
            _transString.setDefinedIn(this);
            _transStringOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _transStringOBJ.setLineNumber("368");
            addAttributeDefList(_transString);

            AttributeDefinitionDMO _nonperStringOBJ = new AttributeDefinitionDMO();
            _nonperString = new AttributeDefinition(_nonperStringOBJ);
            _nonperStringOBJ.setType("String");
            _nonperStringOBJ.setName("nonperString");
            _nonperStringOBJ.setDmdID("10413");
            _nonperStringOBJ.setDataType("NONPERSISTENT");
            _nonperStringOBJ.setValueType("HASHSET");
            _nonperString.setDefinedIn(this);
            _nonperStringOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _nonperStringOBJ.setLineNumber("375");
            addAttributeDefList(_nonperString);

            AttributeDefinitionDMO _indexedStringOBJ = new AttributeDefinitionDMO();
            _indexedString = new AttributeDefinition(_indexedStringOBJ);
            _indexedStringOBJ.setType("String");
            _indexedStringOBJ.setName("indexedString");
            _indexedStringOBJ.setDmdID("10414");
            _indexedStringOBJ.setMvsize("5");
            _indexedStringOBJ.setValueType("MULTI");
            _indexedString.setDefinedIn(this);
            _indexedStringOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/attributes.dmd");
            _indexedStringOBJ.setLineNumber("382");
            addAttributeDefList(_indexedString);

    }

    private void initTypes() throws DmcValueException {
            TypeDefinitionDMO _DmtStringNameOBJ = new TypeDefinitionDMO();
            _DmtStringName = new TypeDefinition(_DmtStringNameOBJ);
            _DmtStringNameOBJ.setNameType("STRUCTURAL");
            _DmtStringNameOBJ.setName("DmtStringName");
            _DmtStringNameOBJ.setTypeClassName("org.dmd.dmt.shared.types.DmcTypeDmtStringName");
            _DmtStringNameOBJ.setPrimitiveType("org.dmd.dmt.shared.types.DmtStringName");
            _DmtStringNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/types.dmd");
            _DmtStringNameOBJ.setLineNumber("8");
            _DmtStringNameOBJ.setDescription("The DmtStringName type was created to test the definition of name types.");
            _DmtStringNameOBJ.setDmwIteratorClass("DmtStringNameIterableDMW");
            _DmtStringNameOBJ.setIsNameType("true");
            _DmtStringName.setDefinedIn(this);
            _DmtStringNameOBJ.setDmwIteratorImport("org.dmd.dmt.server.generated.dmw.DmtStringNameIterableDMW");
            addTypeDefList(_DmtStringName);

    }

    private void initActions() throws DmcValueException {
    }

    private void initEnums() throws DmcValueException {
            EnumDefinitionDMO _DmtTestEnumOBJ = new EnumDefinitionDMO();
            _DmtTestEnum = new EnumDefinition(_DmtTestEnumOBJ);
            _DmtTestEnumOBJ.setName("DmtTestEnum");
            _DmtTestEnumOBJ.addEnumValue("0 TEST1 First test.");
            _DmtTestEnumOBJ.addEnumValue("1 TEST2 Second test.");
            _DmtTestEnumOBJ.addEnumValue("2 TEST3 Third test.");
            _DmtTestEnumOBJ.setDescription("The DmtTestEnum is used for testing operations on eneumerated types");
            _DmtTestEnum.setDefinedIn(this);
            _DmtTestEnumOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/dmt/shared/dmdconfig/v0dot1/types.dmd");
            _DmtTestEnumOBJ.setLineNumber("15");
            addEnumDefList(_DmtTestEnum);

    }


    @Override
    public synchronized DmtSchemaAG getInstance() throws DmcValueException{
    	   if (instance == null)
    		   initialize();
    	   return(instance);
    }
}

