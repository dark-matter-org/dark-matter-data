package org.dmd.mvw.tools.mvwgenerator.generated;

import org.dmd.dmc.DmcOmni;
import org.dmd.dmc.DmcValueException;
import org.dmd.dms.*;
import org.dmd.dms.generated.dmo.*;
import org.dmd.mvw.tools.mvwgenerator.generated.dmo.MvwDMSAG;


/**
 * The MVW (Model-View-Whatever) schema defines classes that can be used to
 * model aspects of both Model-View-Controller or Model-View-Presenter style
 * applications.
 * <P>
 * Generated from the mvw schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:160)
 */
public class MvwSchemaAG extends SchemaDefinition {

    public static ClassDefinition _MvwDefinition;
    public static ClassDefinition _Event;
    public static ClassDefinition _Module;
    public static ClassDefinition _View;
    public static ClassDefinition _Component;
    public static ClassDefinition _Controller;
    public static ClassDefinition _Presenter;
    public static ClassDefinition _Place;
    public static ClassDefinition _SubPlace;
    public static ClassDefinition _Activity;
    public static ClassDefinition _RunContextItem;
    public static ClassDefinition _WebApplication;
    public static ClassDefinition _I18NConfig;
    public static ClassDefinition _MenuImplementationConfig;
    public static ClassDefinition _MenuElementDefinition;
    public static ClassDefinition _Menu;
    public static ClassDefinition _MenuBar;
    public static ClassDefinition _SubMenu;
    public static ClassDefinition _MenuItem;
    public static ClassDefinition _Separator;
    public static ClassDefinition _Action;

    public static AttributeDefinition _definedInModule;
    public static AttributeDefinition _firesEvent;
    public static AttributeDefinition _handlesEvent;
    public static AttributeDefinition _argVector;
    public static AttributeDefinition _userDataImport;
    public static AttributeDefinition _dependsOnModule;
    public static AttributeDefinition _selectedDMO;
    public static AttributeDefinition _useBaseClass;
    public static AttributeDefinition _eventName;
    public static AttributeDefinition _moduleName;
    public static AttributeDefinition _componentName;
    public static AttributeDefinition _viewName;
    public static AttributeDefinition _widget;
    public static AttributeDefinition _localEvent;
    public static AttributeDefinition _displayDMO;
    public static AttributeDefinition _selectEvent;
    public static AttributeDefinition _deleteEvent;
    public static AttributeDefinition _clickEvent;
    public static AttributeDefinition _modifyEvent;
    public static AttributeDefinition _createEvent;
    public static AttributeDefinition _broadcast;
    public static AttributeDefinition _broadcastOnly;
    public static AttributeDefinition _presenterMethod;
    public static AttributeDefinition _viewMethod;
    public static AttributeDefinition _useClass;
    public static AttributeDefinition _itemName;
    public static AttributeDefinition _construction;
    public static AttributeDefinition _itemOrder;
    public static AttributeDefinition _contextImpl;
    public static AttributeDefinition _importThis;
    public static AttributeDefinition _local;
    public static AttributeDefinition _appName;
    public static AttributeDefinition _controllerName;
    public static AttributeDefinition _usesRunContextItem;
    public static AttributeDefinition _presenterImport;
    public static AttributeDefinition _viewImport;
    public static AttributeDefinition _sharedImport;
    public static AttributeDefinition _presenterName;
    public static AttributeDefinition _activityName;
    public static AttributeDefinition _managesView;
    public static AttributeDefinition _usesController;
    public static AttributeDefinition _useSchema;
    public static AttributeDefinition _sendsGetRequest;
    public static AttributeDefinition _sendsDeleteRequest;
    public static AttributeDefinition _sendsSetRequest;
    public static AttributeDefinition _sendsCreateRequest;
    public static AttributeDefinition _sendsActionRequest;
    public static AttributeDefinition _sendsLoginRequest;
    public static AttributeDefinition _sendsLogoutRequest;
    public static AttributeDefinition _centralDMPErrorHandler;
    public static AttributeDefinition _centralRPCErrorHandler;
    public static AttributeDefinition _placeName;
    public static AttributeDefinition _placePrefix;
    public static AttributeDefinition _runsActivity;
    public static AttributeDefinition _parentPlace;
    public static AttributeDefinition _defaultPlace;
    public static AttributeDefinition _abstractActivity;
    public static AttributeDefinition _addedToRunContext;
    public static AttributeDefinition _instantiatesPresenter;
    public static AttributeDefinition _createOnDemand;
    public static AttributeDefinition _instantiatesView;
    public static AttributeDefinition _theOne;
    public static AttributeDefinition _usingStandardSubpackages;
    public static AttributeDefinition _configName;
    public static AttributeDefinition _defaultMenuBar;
    public static AttributeDefinition _alternateMenuBar;
    public static AttributeDefinition _elementName;
    public static AttributeDefinition _useImpl;
    public static AttributeDefinition _addToMenu;
    public static AttributeDefinition _alwaysEnabled;
    public static AttributeDefinition _menuOrder;
    public static AttributeDefinition _displayLabel;
    public static AttributeDefinition _actionName;
    public static AttributeDefinition _triggersAction;
    public static AttributeDefinition _defaultSubMenu;
    public static AttributeDefinition _alternateSubMenu;
    public static AttributeDefinition _defaultMenuItem;
    public static AttributeDefinition _alternateMenuItem;
    public static AttributeDefinition _implementsAction;
    public static AttributeDefinition _implementedBy;
    public static AttributeDefinition _defaultSeparator;
    public static AttributeDefinition _menuImplementation;
    public static AttributeDefinition _displayLabelI18N;

    public static TypeDefinition _EventWithArgs;
    public static TypeDefinition _MethodWithArgs;
    public static TypeDefinition _GetWithOptions;
    public static TypeDefinition _RequestWithOptions;
    public static TypeDefinition _DisplayDataSpec;
    public static TypeDefinition _EventSpec;
    public static TypeDefinition _OperationSpec;
    public static TypeDefinition _MenuElementTypeAndComment;


    public static EnumDefinition _SelectionTypeEnum;
    public static EnumDefinition _EventScopeEnum;
    public static EnumDefinition _GetFunctionOptionEnum;
    public static EnumDefinition _RequestOptionEnum;

    static MvwSchemaAG instance;

    public MvwSchemaAG() throws DmcValueException {
        generatedSchema = true;
        staticRefName   = "org.dmd.mvw.tools.mvwgenerator.generated.MvwSchemaAG";

        dependsOnSchemaClasses.put("dmg","org.dmd.dmg.generated.DmgSchemaAG");

    }

    private void initialize() throws DmcValueException {
        if (instance == null){
            instance        = this;
            SchemaDefinitionDMO me = (SchemaDefinitionDMO) this.getDmcObject();
            me.setName("mvw");
            me.setSchemaPackage("org.dmd.mvw.tools.mvwgenerator");
            me.setDmwPackage("org.dmd.mvw.tools.mvwgenerator");
            me.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/mvw.dms");


            me.addDependsOn("dmg");
            dependsOnSchemaClasses.put("dmg","org.dmd.dmg.generated.DmgSchemaAG");


            initClasses();
            initAttributes();
            initTypes();
            initActions();
            initEnums();
            DmcOmni.instance().addCompactSchema(MvwDMSAG.instance());
        }
    }

    private void initClasses() throws DmcValueException {
            ClassDefinitionDMO _MvwDefinitionOBJ = new ClassDefinitionDMO();
            _MvwDefinition = new ClassDefinition(_MvwDefinitionOBJ);
            _MvwDefinitionOBJ.setName("MvwDefinition");
            _MvwDefinitionOBJ.setDmdID("801");
            _MvwDefinitionOBJ.setClassType("ABSTRACT");
            _MvwDefinitionOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MvwDefinitionOBJ.setLineNumber("14");
            _MvwDefinitionOBJ.setDescription("The MvwDefinition class provide a common base for all MVW definition classes.");
            _MvwDefinitionOBJ.setIsNamedBy("camelCaseName");
            _MvwDefinitionOBJ.setUseWrapperType("EXTENDED");
            _MvwDefinitionOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MvwDefinitionREF");
            _MvwDefinitionOBJ.setDmwIteratorClass("MvwDefinitionIterableDMW");
            _MvwDefinitionOBJ.addMay("file");
            _MvwDefinitionOBJ.addMay("lineNumber");
            _MvwDefinitionOBJ.addMay("description");
            _MvwDefinitionOBJ.addMust("camelCaseName");
            _MvwDefinitionOBJ.addMust("definedInModule");
            _MvwDefinitionOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MvwDefinitionIterableDMW");
            _MvwDefinition.setDefinedIn(this);
            addClassDefList(_MvwDefinition);

            ClassDefinitionDMO _EventOBJ = new ClassDefinitionDMO();
            _Event = new ClassDefinition(_EventOBJ);
            _EventOBJ.setName("Event");
            _EventOBJ.setDmdID("802");
            _EventOBJ.setClassType("STRUCTURAL");
            _EventOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _EventOBJ.setLineNumber("75");
            _EventOBJ.setDescription("The specification of an Event definition will result in the creation of a gwtEvent and its associated handler interface.");
            _EventOBJ.setDerivedFrom("MvwDefinition");
            _EventOBJ.setIsNamedBy("eventName");
            _EventOBJ.setUseWrapperType("EXTENDED");
            _EventOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.EventREF");
            _EventOBJ.setDmwIteratorClass("EventIterableDMW");
            _EventOBJ.addMay("argVector");
            _EventOBJ.addMay("importThis");
            _EventOBJ.addMust("eventName");
            _EventOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.EventIterableDMW");
            _Event.setDefinedIn(this);
            addClassDefList(_Event);

            ClassDefinitionDMO _ModuleOBJ = new ClassDefinitionDMO();
            _Module = new ClassDefinition(_ModuleOBJ);
            _ModuleOBJ.setName("Module");
            _ModuleOBJ.setDmdID("803");
            _ModuleOBJ.setClassType("STRUCTURAL");
            _ModuleOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ModuleOBJ.setLineNumber("117");
            _ModuleOBJ.setDescription("The Module is used to define a reusable set of MVW functionality which can be referred to in Application definitions or other Module definitions.");
            _ModuleOBJ.setDerivedFrom("MvwDefinition");
            _ModuleOBJ.setIsNamedBy("moduleName");
            _ModuleOBJ.setUseWrapperType("EXTENDED");
            _ModuleOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ModuleREF");
            _ModuleOBJ.setDmwIteratorClass("ModuleIterableDMW");
            _ModuleOBJ.addMay("dependsOnModule");
            _ModuleOBJ.addMay("dependsOnSchema");
            _ModuleOBJ.addMay("usingStandardSubpackages");
            _ModuleOBJ.addMust("moduleName");
            _ModuleOBJ.addMust("genPackage");
            _ModuleOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ModuleIterableDMW");
            _Module.setDefinedIn(this);
            addClassDefList(_Module);

            ClassDefinitionDMO _ViewOBJ = new ClassDefinitionDMO();
            _View = new ClassDefinition(_ViewOBJ);
            _ViewOBJ.setName("View");
            _ViewOBJ.setDmdID("804");
            _ViewOBJ.setClassType("STRUCTURAL");
            _ViewOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ViewOBJ.setLineNumber("153");
            _ViewOBJ.setDescription("The View is used to define the aspects of two kinds of interfaces that define the functionality provided by a view of a model; the event interface and the  data interface.");
            _ViewOBJ.setDerivedFrom("MvwDefinition");
            _ViewOBJ.setIsNamedBy("viewName");
            _ViewOBJ.setUseWrapperType("EXTENDED");
            _ViewOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ViewREF");
            _ViewOBJ.setDmwIteratorClass("ViewIterableDMW");
            _ViewOBJ.addMay("useBaseClass");
            _ViewOBJ.addMay("local");
            _ViewOBJ.addMay("broadcast");
            _ViewOBJ.addMay("broadcastOnly");
            _ViewOBJ.addMay("viewImport");
            _ViewOBJ.addMay("presenterImport");
            _ViewOBJ.addMay("sharedImport");
            _ViewOBJ.addMay("subpackage");
            _ViewOBJ.addMay("theOne");
            _ViewOBJ.addMay("usesRunContextItem");
            _ViewOBJ.addMay("widget");
            _ViewOBJ.addMay("extendsInterface");
            _ViewOBJ.addMay("presenterMethod");
            _ViewOBJ.addMay("viewMethod");
            _ViewOBJ.addMay("displayDMO");
            _ViewOBJ.addMay("selectEvent");
            _ViewOBJ.addMay("deleteEvent");
            _ViewOBJ.addMay("clickEvent");
            _ViewOBJ.addMay("modifyEvent");
            _ViewOBJ.addMay("createEvent");
            _ViewOBJ.addMust("viewName");
            _ViewOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ViewIterableDMW");
            _View.setDefinedIn(this);
            addClassDefList(_View);

            ClassDefinitionDMO _ComponentOBJ = new ClassDefinitionDMO();
            _Component = new ClassDefinition(_ComponentOBJ);
            _ComponentOBJ.setName("Component");
            _ComponentOBJ.setDmdID("805");
            _ComponentOBJ.setClassType("ABSTRACT");
            _ComponentOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ComponentOBJ.setLineNumber("191");
            _ComponentOBJ.setDescription("The Component is an abstract base for classes that define the building blocks of Applications. The primary feature of an Component is that it fires and/or handles events. Beyond that, a component can be whatever you require it to be. A variety of derived component types provide more focussed behavioural units. <p /> Many of the classes generated by MVW must be extended in order to provide the actual behaviour of your application e.g. Controllers, Views, Presenters etc. Activities must also be extended to provide your behaviour, however, Activities are also referred to by generated code and must be in a known location. By default, the classes that extend the generated activity class will reside in the 'extended' package that lies beneath the genPackage specified for your module i.e. if your gen package is com.mine, then the  derived activity classes are expected to be in com.mine.extended. If you want to place these classes in a subpackage beneath extended, use the subpackage attribute to indicate the package name e.g. if subpackage is defined as 'activities', your activity implementation class will be expected to reside in com.mine.extended.activities.");
            _ComponentOBJ.setDerivedFrom("MvwDefinition");
            _ComponentOBJ.setIsNamedBy("componentName");
            _ComponentOBJ.setUseWrapperType("EXTENDED");
            _ComponentOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ComponentREF");
            _ComponentOBJ.setDmwIteratorClass("ComponentIterableDMW");
            _ComponentOBJ.addMay("firesEvent");
            _ComponentOBJ.addMay("handlesEvent");
            _ComponentOBJ.addMay("useSchema");
            _ComponentOBJ.addMay("useBaseClass");
            _ComponentOBJ.addMay("usesRunContextItem");
            _ComponentOBJ.addMay("sendsGetRequest");
            _ComponentOBJ.addMay("sendsDeleteRequest");
            _ComponentOBJ.addMay("sendsSetRequest");
            _ComponentOBJ.addMay("sendsCreateRequest");
            _ComponentOBJ.addMay("sendsActionRequest");
            _ComponentOBJ.addMay("sendsLoginRequest");
            _ComponentOBJ.addMay("sendsLogoutRequest");
            _ComponentOBJ.addMay("subpackage");
            _ComponentOBJ.addMay("instantiatesView");
            _ComponentOBJ.addMust("componentName");
            _ComponentOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ComponentIterableDMW");
            _Component.setDefinedIn(this);
            addClassDefList(_Component);

            ClassDefinitionDMO _ControllerOBJ = new ClassDefinitionDMO();
            _Controller = new ClassDefinition(_ControllerOBJ);
            _ControllerOBJ.setName("Controller");
            _ControllerOBJ.setDmdID("806");
            _ControllerOBJ.setClassType("STRUCTURAL");
            _ControllerOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ControllerOBJ.setLineNumber("224");
            _ControllerOBJ.setDescription("The Controller represents a behavioural component that lives throughout the entire lifecycle of an WebApplication or WebSite. Generally, it manages the Presenters and Views that are displayed, but may also provide behind the scenes management of things like communications, security, menu structure etc. Controllers do not implement Presenter interfaces i.e. they do not interact directly with Views; that is the role of Presenters. <p /> Because of their implied lifetime, Controllers are made part of the overall RunContext for an application and are constructed during initialization of the application. There is no need to instantiate Controllers separately. The RunContextItem created for a controller has the same name as the Controller itself with RCI appended. You may specify an itemOrder for the Controller to control when it is instantiated in the RunContext; use this option only if you know what you're doing! The default itemOrder is 50, most base related functionality starts in itemOrder 20 or lower. <p /> Controllers should not communicate with other Controllers directly; this type of communication should be performed using events. So, although it is possible to get the handle to another Controller via the RunContext, it is discouraged. <p />");
            _ControllerOBJ.setDerivedFrom("Component");
            _ControllerOBJ.setIsNamedBy("controllerName");
            _ControllerOBJ.setUseWrapperType("EXTENDED");
            _ControllerOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ControllerREF");
            _ControllerOBJ.setDmwIteratorClass("ControllerIterableDMW");
            _ControllerOBJ.addMay("centralDMPErrorHandler");
            _ControllerOBJ.addMay("centralRPCErrorHandler");
            _ControllerOBJ.addMay("addedToRunContext");
            _ControllerOBJ.addMay("instantiatesPresenter");
            _ControllerOBJ.addMay("itemOrder");
            _ControllerOBJ.addMay("implementsAction");
            _ControllerOBJ.addMust("controllerName");
            _ControllerOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ControllerIterableDMW");
            _Controller.setDefinedIn(this);
            addClassDefList(_Controller);

            ClassDefinitionDMO _PresenterOBJ = new ClassDefinitionDMO();
            _Presenter = new ClassDefinition(_PresenterOBJ);
            _PresenterOBJ.setName("Presenter");
            _PresenterOBJ.setDmdID("807");
            _PresenterOBJ.setClassType("STRUCTURAL");
            _PresenterOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _PresenterOBJ.setLineNumber("242");
            _PresenterOBJ.setDescription("The Presenter is a behavioural component that manages one or more Views and thus implements the Presenter interface of any View it manages. Presenters populate and potentially update Views with data. This will often involve interacting with the communications interface(s) associated with an application. If a View allows the creation or alteration of data, those behaviours are usually handled directly by the View's Presenter.");
            _PresenterOBJ.setDerivedFrom("Component");
            _PresenterOBJ.setIsNamedBy("presenterName");
            _PresenterOBJ.setUseWrapperType("EXTENDED");
            _PresenterOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.PresenterREF");
            _PresenterOBJ.setDmwIteratorClass("PresenterIterableDMW");
            _PresenterOBJ.addMay("theOne");
            _PresenterOBJ.addMay("instantiatesPresenter");
            _PresenterOBJ.addMust("presenterName");
            _PresenterOBJ.addMust("managesView");
            _PresenterOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.PresenterIterableDMW");
            _Presenter.setDefinedIn(this);
            addClassDefList(_Presenter);

            ClassDefinitionDMO _PlaceOBJ = new ClassDefinitionDMO();
            _Place = new ClassDefinition(_PlaceOBJ);
            _PlaceOBJ.setName("Place");
            _PlaceOBJ.setDmdID("808");
            _PlaceOBJ.setClassType("STRUCTURAL");
            _PlaceOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _PlaceOBJ.setLineNumber("263");
            _PlaceOBJ.setDerivedFrom("MvwDefinition");
            _PlaceOBJ.setIsNamedBy("placeName");
            _PlaceOBJ.setUseWrapperType("EXTENDED");
            _PlaceOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.PlaceREF");
            _PlaceOBJ.setDmwIteratorClass("PlaceIterableDMW");
            _PlaceOBJ.addMust("placeName");
            _PlaceOBJ.addMust("placePrefix");
            _PlaceOBJ.addMust("runsActivity");
            _PlaceOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.PlaceIterableDMW");
            _Place.setDefinedIn(this);
            addClassDefList(_Place);

            ClassDefinitionDMO _SubPlaceOBJ = new ClassDefinitionDMO();
            _SubPlace = new ClassDefinition(_SubPlaceOBJ);
            _SubPlaceOBJ.setName("SubPlace");
            _SubPlaceOBJ.setDmdID("809");
            _SubPlaceOBJ.setClassType("STRUCTURAL");
            _SubPlaceOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _SubPlaceOBJ.setLineNumber("274");
            _SubPlaceOBJ.setDerivedFrom("Place");
            _SubPlaceOBJ.setIsNamedBy("placeName");
            _SubPlaceOBJ.setUseWrapperType("EXTENDED");
            _SubPlaceOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.SubPlaceREF");
            _SubPlaceOBJ.setDmwIteratorClass("SubPlaceIterableDMW");
            _SubPlaceOBJ.addMust("placeName");
            _SubPlaceOBJ.addMust("placePrefix");
            _SubPlaceOBJ.addMust("parentPlace");
            _SubPlaceOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.SubPlaceIterableDMW");
            _SubPlace.setDefinedIn(this);
            addClassDefList(_SubPlace);

            ClassDefinitionDMO _ActivityOBJ = new ClassDefinitionDMO();
            _Activity = new ClassDefinition(_ActivityOBJ);
            _ActivityOBJ.setName("Activity");
            _ActivityOBJ.setDmdID("810");
            _ActivityOBJ.setClassType("STRUCTURAL");
            _ActivityOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ActivityOBJ.setLineNumber("299");
            _ActivityOBJ.setDescription("If you are making use of Places, you'll define an Activity for each of them; all activities are derived from com.google.gwt.app.place.Activity. If you have common functionality that you wish to use for your Activity classes, implement it in a class derived from com.google.gwt.app.place.Activity and specify that class in the useBaseClass attribute of your defined Activity. <p /> Activities are meant to be short-lived, disposable entities that run in a particular Place. However, if you are building an application, it may be that you have a single Place and that all behaviour takes place within the guise of a single Activity. <p /> If the Activity manages a view, it will be generated as implementing the View's  presenter interface.");
            _ActivityOBJ.setDerivedFrom("Component");
            _ActivityOBJ.setIsNamedBy("activityName");
            _ActivityOBJ.setUseWrapperType("EXTENDED");
            _ActivityOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ActivityREF");
            _ActivityOBJ.setDmwIteratorClass("ActivityIterableDMW");
            _ActivityOBJ.addMay("useBaseClass");
            _ActivityOBJ.addMay("abstractActivity");
            _ActivityOBJ.addMay("usesController");
            _ActivityOBJ.addMay("managesView");
            _ActivityOBJ.addMust("activityName");
            _ActivityOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ActivityIterableDMW");
            _Activity.setDefinedIn(this);
            addClassDefList(_Activity);

            ClassDefinitionDMO _RunContextItemOBJ = new ClassDefinitionDMO();
            _RunContextItem = new ClassDefinition(_RunContextItemOBJ);
            _RunContextItemOBJ.setName("RunContextItem");
            _RunContextItemOBJ.setDmdID("811");
            _RunContextItemOBJ.setClassType("STRUCTURAL");
            _RunContextItemOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _RunContextItemOBJ.setLineNumber("318");
            _RunContextItemOBJ.setDescription("The RunContextItem allows for the generation of an overall RunContext for a WebApplication or WebSite.");
            _RunContextItemOBJ.setDerivedFrom("MvwDefinition");
            _RunContextItemOBJ.setIsNamedBy("itemName");
            _RunContextItemOBJ.setUseWrapperType("EXTENDED");
            _RunContextItemOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.RunContextItemREF");
            _RunContextItemOBJ.setDmwIteratorClass("RunContextItemIterableDMW");
            _RunContextItemOBJ.addMay("itemOrder");
            _RunContextItemOBJ.addMay("contextImpl");
            _RunContextItemOBJ.addMay("importThis");
            _RunContextItemOBJ.addMay("createOnDemand");
            _RunContextItemOBJ.addMay("theOne");
            _RunContextItemOBJ.addMust("itemName");
            _RunContextItemOBJ.addMust("useClass");
            _RunContextItemOBJ.addMust("construction");
            _RunContextItemOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.RunContextItemIterableDMW");
            _RunContextItem.setDefinedIn(this);
            addClassDefList(_RunContextItem);

            ClassDefinitionDMO _WebApplicationOBJ = new ClassDefinitionDMO();
            _WebApplication = new ClassDefinition(_WebApplicationOBJ);
            _WebApplicationOBJ.setName("WebApplication");
            _WebApplicationOBJ.setDmdID("812");
            _WebApplicationOBJ.setClassType("STRUCTURAL");
            _WebApplicationOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _WebApplicationOBJ.setLineNumber("332");
            _WebApplicationOBJ.setDescription("The WebApplication definition allows for the definition of the superstructure for an application, basically it's the definition of the overall application controller.");
            _WebApplicationOBJ.setDerivedFrom("MvwDefinition");
            _WebApplicationOBJ.setIsNamedBy("appName");
            _WebApplicationOBJ.setUseWrapperType("EXTENDED");
            _WebApplicationOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.WebApplicationREF");
            _WebApplicationOBJ.setDmwIteratorClass("WebApplicationIterableDMW");
            _WebApplicationOBJ.addMay("usesController");
            _WebApplicationOBJ.addMay("menuImplementation");
            _WebApplicationOBJ.addMust("appName");
            _WebApplicationOBJ.addMust("defaultPlace");
            _WebApplicationOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.WebApplicationIterableDMW");
            _WebApplication.setDefinedIn(this);
            addClassDefList(_WebApplication);

            ClassDefinitionDMO _I18NConfigOBJ = new ClassDefinitionDMO();
            _I18NConfig = new ClassDefinition(_I18NConfigOBJ);
            _I18NConfigOBJ.setName("I18NConfig");
            _I18NConfigOBJ.setDmdID("814");
            _I18NConfigOBJ.setClassType("STRUCTURAL");
            _I18NConfigOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _I18NConfigOBJ.setLineNumber("343");
            _I18NConfigOBJ.setDescription("The I18NConfig is a specialized RunContextItem that indicates an interface class used to access internationalized constants or messages.");
            _I18NConfigOBJ.setDerivedFrom("RunContextItem");
            _I18NConfigOBJ.setIsNamedBy("itemName");
            _I18NConfigOBJ.setUseWrapperType("EXTENDED");
            _I18NConfigOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.I18NConfigREF");
            _I18NConfigOBJ.setDmwIteratorClass("I18NConfigIterableDMW");
            _I18NConfigOBJ.addMust("itemName");
            _I18NConfigOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.I18NConfigIterableDMW");
            _I18NConfig.setDefinedIn(this);
            addClassDefList(_I18NConfig);

            ClassDefinitionDMO _MenuImplementationConfigOBJ = new ClassDefinitionDMO();
            _MenuImplementationConfig = new ClassDefinition(_MenuImplementationConfigOBJ);
            _MenuImplementationConfigOBJ.setName("MenuImplementationConfig");
            _MenuImplementationConfigOBJ.setDmdID("815");
            _MenuImplementationConfigOBJ.setClassType("STRUCTURAL");
            _MenuImplementationConfigOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuImplementationConfigOBJ.setLineNumber("366");
            _MenuImplementationConfigOBJ.setDescription("The MenuImplementationConfig is used to define the various classes that will  be used to implement an actual menu structure based the MVW menu definitions. <p /> The class specified by useClass must be derived from org.dmd.mvw.client.mvwmenus.base.MvwMenuFactory and have a zero arg constructor.");
            _MenuImplementationConfigOBJ.setDerivedFrom("MvwDefinition");
            _MenuImplementationConfigOBJ.setIsNamedBy("configName");
            _MenuImplementationConfigOBJ.setUseWrapperType("EXTENDED");
            _MenuImplementationConfigOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuImplementationConfigREF");
            _MenuImplementationConfigOBJ.setDmwIteratorClass("MenuImplementationConfigIterableDMW");
            _MenuImplementationConfigOBJ.addMay("alternateMenuBar");
            _MenuImplementationConfigOBJ.addMay("alternateSubMenu");
            _MenuImplementationConfigOBJ.addMay("alternateMenuItem");
            _MenuImplementationConfigOBJ.addMust("configName");
            _MenuImplementationConfigOBJ.addMust("useClass");
            _MenuImplementationConfigOBJ.addMust("defaultMenuBar");
            _MenuImplementationConfigOBJ.addMust("defaultSubMenu");
            _MenuImplementationConfigOBJ.addMust("defaultMenuItem");
            _MenuImplementationConfigOBJ.addMust("defaultSeparator");
            _MenuImplementationConfigOBJ.setSubpackage("menus");
            _MenuImplementationConfigOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuImplementationConfigIterableDMW");
            _MenuImplementationConfig.setDefinedIn(this);
            addClassDefList(_MenuImplementationConfig);

            ClassDefinitionDMO _MenuElementDefinitionOBJ = new ClassDefinitionDMO();
            _MenuElementDefinition = new ClassDefinition(_MenuElementDefinitionOBJ);
            _MenuElementDefinitionOBJ.setName("MenuElementDefinition");
            _MenuElementDefinitionOBJ.setDmdID("816");
            _MenuElementDefinitionOBJ.setClassType("STRUCTURAL");
            _MenuElementDefinitionOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuElementDefinitionOBJ.setLineNumber("378");
            _MenuElementDefinitionOBJ.setDescription("The MenuElementDefinition is common base for all definitions associated with the definition of menu elements.");
            _MenuElementDefinitionOBJ.setDerivedFrom("MvwDefinition");
            _MenuElementDefinitionOBJ.setIsNamedBy("elementName");
            _MenuElementDefinitionOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuElementDefinitionREF");
            _MenuElementDefinitionOBJ.setDmwIteratorClass("MenuElementDefinitionIterableDMW");
            _MenuElementDefinitionOBJ.addMay("useImpl");
            _MenuElementDefinitionOBJ.addMust("elementName");
            _MenuElementDefinitionOBJ.setSubpackage("menus");
            _MenuElementDefinitionOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuElementDefinitionIterableDMW");
            _MenuElementDefinition.setDefinedIn(this);
            addClassDefList(_MenuElementDefinition);

            ClassDefinitionDMO _MenuOBJ = new ClassDefinitionDMO();
            _Menu = new ClassDefinition(_MenuOBJ);
            _MenuOBJ.setName("Menu");
            _MenuOBJ.setDmdID("817");
            _MenuOBJ.setClassType("ABSTRACT");
            _MenuOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuOBJ.setLineNumber("390");
            _MenuOBJ.setDescription("The Menu is a common base for all definitions associated with the definition of menus of different types e.g. toolbars, menubars, popups etc.");
            _MenuOBJ.setDerivedFrom("MenuElementDefinition");
            _MenuOBJ.setIsNamedBy("elementName");
            _MenuOBJ.setUseWrapperType("EXTENDED");
            _MenuOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuREF");
            _MenuOBJ.setDmwIteratorClass("MenuIterableDMW");
            _MenuOBJ.addMust("elementName");
            _MenuOBJ.setSubpackage("menus");
            _MenuOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuIterableDMW");
            _Menu.setDefinedIn(this);
            addClassDefList(_Menu);

            ClassDefinitionDMO _MenuBarOBJ = new ClassDefinitionDMO();
            _MenuBar = new ClassDefinition(_MenuBarOBJ);
            _MenuBarOBJ.setName("MenuBar");
            _MenuBarOBJ.setDmdID("818");
            _MenuBarOBJ.setClassType("STRUCTURAL");
            _MenuBarOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuBarOBJ.setLineNumber("402");
            _MenuBarOBJ.setDescription("The MenuImplementationConfig is used to define the various classes that will");
            _MenuBarOBJ.setDerivedFrom("Menu");
            _MenuBarOBJ.setIsNamedBy("elementName");
            _MenuBarOBJ.setUseWrapperType("EXTENDED");
            _MenuBarOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuBarREF");
            _MenuBarOBJ.setDmwIteratorClass("MenuBarIterableDMW");
            _MenuBarOBJ.addMay("useImpl");
            _MenuBarOBJ.addMust("elementName");
            _MenuBarOBJ.setSubpackage("menus");
            _MenuBarOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuBarIterableDMW");
            _MenuBar.setDefinedIn(this);
            addClassDefList(_MenuBar);

            ClassDefinitionDMO _SubMenuOBJ = new ClassDefinitionDMO();
            _SubMenu = new ClassDefinition(_SubMenuOBJ);
            _SubMenuOBJ.setName("SubMenu");
            _SubMenuOBJ.setDmdID("819");
            _SubMenuOBJ.setClassType("STRUCTURAL");
            _SubMenuOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _SubMenuOBJ.setLineNumber("418");
            _SubMenuOBJ.setDescription("The SubMenu is used to define a submenu that is included as part of a Menu.");
            _SubMenuOBJ.setDerivedFrom("Menu");
            _SubMenuOBJ.setIsNamedBy("elementName");
            _SubMenuOBJ.setUseWrapperType("EXTENDED");
            _SubMenuOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.SubMenuREF");
            _SubMenuOBJ.setDmwIteratorClass("SubMenuIterableDMW");
            _SubMenuOBJ.addMay("displayLabel");
            _SubMenuOBJ.addMay("displayLabelI18N");
            _SubMenuOBJ.addMay("useImpl");
            _SubMenuOBJ.addMust("elementName");
            _SubMenuOBJ.addMust("addToMenu");
            _SubMenuOBJ.addMust("menuOrder");
            _SubMenuOBJ.setSubpackage("menus");
            _SubMenuOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.SubMenuIterableDMW");
            _SubMenu.setDefinedIn(this);
            addClassDefList(_SubMenu);

            ClassDefinitionDMO _MenuItemOBJ = new ClassDefinitionDMO();
            _MenuItem = new ClassDefinition(_MenuItemOBJ);
            _MenuItemOBJ.setName("MenuItem");
            _MenuItemOBJ.setDmdID("820");
            _MenuItemOBJ.setClassType("STRUCTURAL");
            _MenuItemOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuItemOBJ.setLineNumber("437");
            _MenuItemOBJ.setDescription("The MenuItem is used to define triggerable menu items. You must specify either a displayLabel or a displayLabelI18N to indicate the label to be used for the menu item.");
            _MenuItemOBJ.setDerivedFrom("MenuElementDefinition");
            _MenuItemOBJ.setIsNamedBy("elementName");
            _MenuItemOBJ.setUseWrapperType("EXTENDED");
            _MenuItemOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuItemREF");
            _MenuItemOBJ.setDmwIteratorClass("MenuItemIterableDMW");
            _MenuItemOBJ.addMay("displayLabel");
            _MenuItemOBJ.addMay("displayLabelI18N");
            _MenuItemOBJ.addMay("useImpl");
            _MenuItemOBJ.addMust("elementName");
            _MenuItemOBJ.addMust("triggersAction");
            _MenuItemOBJ.addMust("addToMenu");
            _MenuItemOBJ.addMust("menuOrder");
            _MenuItemOBJ.setSubpackage("menus");
            _MenuItemOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuItemIterableDMW");
            _MenuItem.setDefinedIn(this);
            addClassDefList(_MenuItem);

            ClassDefinitionDMO _SeparatorOBJ = new ClassDefinitionDMO();
            _Separator = new ClassDefinition(_SeparatorOBJ);
            _SeparatorOBJ.setName("Separator");
            _SeparatorOBJ.setDmdID("821");
            _SeparatorOBJ.setClassType("STRUCTURAL");
            _SeparatorOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _SeparatorOBJ.setLineNumber("451");
            _SeparatorOBJ.setDescription("The Separator is used to define menu separators.");
            _SeparatorOBJ.setDerivedFrom("MenuElementDefinition");
            _SeparatorOBJ.setIsNamedBy("elementName");
            _SeparatorOBJ.setUseWrapperType("EXTENDED");
            _SeparatorOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.SeparatorREF");
            _SeparatorOBJ.setDmwIteratorClass("SeparatorIterableDMW");
            _SeparatorOBJ.addMay("useImpl");
            _SeparatorOBJ.addMust("elementName");
            _SeparatorOBJ.addMust("addToMenu");
            _SeparatorOBJ.addMust("menuOrder");
            _SeparatorOBJ.setSubpackage("menus");
            _SeparatorOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.SeparatorIterableDMW");
            _Separator.setDefinedIn(this);
            addClassDefList(_Separator);

            ClassDefinitionDMO _ActionOBJ = new ClassDefinitionDMO();
            _Action = new ClassDefinition(_ActionOBJ);
            _ActionOBJ.setName("Action");
            _ActionOBJ.setDmdID("822");
            _ActionOBJ.setClassType("STRUCTURAL");
            _ActionOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ActionOBJ.setLineNumber("468");
            _ActionOBJ.setDescription("The Action class allows for the definition of an intermediate component that binds behavioural triggers e.g. menu items, toolbar buttons etc. to action implementors e.g. Controllers, Presenters and Activities. The Action serves the same purpose as the com.google.gwt.user.client.Command interface, but provides some additional useful functionality. The implementation of the Action (see org.dmd.mvw.client.mvwmenus.base.Action) maintains a set of TriggerIF interfaces, which are the various implementations of the menu items, toolbar buttons etc. An implementing component can enable/disable its Actions which, in turn, can enable/disable its triggers.");
            _ActionOBJ.setDerivedFrom("MvwDefinition");
            _ActionOBJ.setIsNamedBy("actionName");
            _ActionOBJ.setUseWrapperType("EXTENDED");
            _ActionOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ActionREF");
            _ActionOBJ.setDmwIteratorClass("ActionIterableDMW");
            _ActionOBJ.addMay("implementedBy");
            _ActionOBJ.addMust("actionName");
            _ActionOBJ.setSubpackage("menus");
            _ActionOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ActionIterableDMW");
            _Action.setDefinedIn(this);
            addClassDefList(_Action);

    }

    private void initAttributes() throws DmcValueException {
            AttributeDefinitionDMO _definedInModuleOBJ = new AttributeDefinitionDMO();
            _definedInModule = new AttributeDefinition(_definedInModuleOBJ);
            _definedInModuleOBJ.setType("Module");
            _definedInModuleOBJ.setName("definedInModule");
            _definedInModuleOBJ.setDmdID("800");
            _definedInModuleOBJ.setDescription("All MvwDefinitions are defined in an Module file that ends with a .mvw extension.");
            _definedInModule.setDefinedIn(this);
            _definedInModuleOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _definedInModuleOBJ.setLineNumber("7");
            addAttributeDefList(_definedInModule);

            AttributeDefinitionDMO _firesEventOBJ = new AttributeDefinitionDMO();
            _firesEvent = new AttributeDefinition(_firesEventOBJ);
            _firesEventOBJ.setType("Event");
            _firesEventOBJ.setName("firesEvent");
            _firesEventOBJ.setDmdID("801");
            _firesEventOBJ.setDescription("Indicates the MvwEvents that are fired by various MVW components.");
            _firesEventOBJ.setValueType("TREEMAPPED");
            _firesEvent.setDefinedIn(this);
            _firesEventOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _firesEventOBJ.setLineNumber("14");
            addAttributeDefList(_firesEvent);

            AttributeDefinitionDMO _handlesEventOBJ = new AttributeDefinitionDMO();
            _handlesEvent = new AttributeDefinition(_handlesEventOBJ);
            _handlesEventOBJ.setType("Event");
            _handlesEventOBJ.setName("handlesEvent");
            _handlesEventOBJ.setDmdID("802");
            _handlesEventOBJ.setDescription("This attributes holds a list of MvwEvents that are handled by various MVW components.");
            _handlesEventOBJ.setValueType("TREEMAPPED");
            _handlesEvent.setDefinedIn(this);
            _handlesEventOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _handlesEventOBJ.setLineNumber("22");
            addAttributeDefList(_handlesEvent);

            AttributeDefinitionDMO _argVectorOBJ = new AttributeDefinitionDMO();
            _argVector = new AttributeDefinition(_argVectorOBJ);
            _argVectorOBJ.setType("String");
            _argVectorOBJ.setName("argVector");
            _argVectorOBJ.setDmdID("803");
            _argVectorOBJ.setDescription("Indicates an argument vector for an event or interface.");
            _argVectorOBJ.setNullReturnValue("()");
            _argVector.setDefinedIn(this);
            _argVectorOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _argVectorOBJ.setLineNumber("41");
            addAttributeDefList(_argVector);

            AttributeDefinitionDMO _userDataImportOBJ = new AttributeDefinitionDMO();
            _userDataImport = new AttributeDefinition(_userDataImportOBJ);
            _userDataImportOBJ.setType("String");
            _userDataImportOBJ.setName("userDataImport");
            _userDataImportOBJ.setDmdID("804");
            _userDataImportOBJ.setDescription("The additionalImport attribute indicates the fully qualified class names of types that are required to support your userDataType indications. You need not explicitly indicate Java native types such as String, Integer etc. but you will have to specify things like java.util.TreeMap.");
            _userDataImportOBJ.setValueType("TREESET");
            _userDataImport.setDefinedIn(this);
            _userDataImportOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _userDataImportOBJ.setLineNumber("51");
            addAttributeDefList(_userDataImport);

            AttributeDefinitionDMO _dependsOnModuleOBJ = new AttributeDefinitionDMO();
            _dependsOnModule = new AttributeDefinition(_dependsOnModuleOBJ);
            _dependsOnModuleOBJ.setType("String");
            _dependsOnModuleOBJ.setName("dependsOnModule");
            _dependsOnModuleOBJ.setDmdID("805");
            _dependsOnModuleOBJ.setDescription("This attribute allows a Module to refer to other Modules on which it depends.");
            _dependsOnModuleOBJ.setValueType("TREESET");
            _dependsOnModule.setDefinedIn(this);
            _dependsOnModuleOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _dependsOnModuleOBJ.setLineNumber("59");
            addAttributeDefList(_dependsOnModule);

            AttributeDefinitionDMO _selectedDMOOBJ = new AttributeDefinitionDMO();
            _selectedDMO = new AttributeDefinition(_selectedDMOOBJ);
            _selectedDMOOBJ.setType("ClassDefinition");
            _selectedDMOOBJ.setName("selectedDMO");
            _selectedDMOOBJ.setDmdID("806");
            _selectedDMOOBJ.setDescription("This attribute indicates the class of DMO that is selected by a  SingleDMOSelectedEvent.");
            _selectedDMO.setDefinedIn(this);
            _selectedDMOOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _selectedDMOOBJ.setLineNumber("66");
            addAttributeDefList(_selectedDMO);

            AttributeDefinitionDMO _useBaseClassOBJ = new AttributeDefinitionDMO();
            _useBaseClass = new AttributeDefinition(_useBaseClassOBJ);
            _useBaseClassOBJ.setType("String");
            _useBaseClassOBJ.setName("useBaseClass");
            _useBaseClassOBJ.setDmdID("807");
            _useBaseClassOBJ.setDescription("The useBaseClass attribute is used to specify the class from which a generated component class should be derived. It should be fully qualified name of a class.");
            _useBaseClass.setDefinedIn(this);
            _useBaseClassOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useBaseClassOBJ.setLineNumber("74");
            addAttributeDefList(_useBaseClass);

            AttributeDefinitionDMO _eventNameOBJ = new AttributeDefinitionDMO();
            _eventName = new AttributeDefinition(_eventNameOBJ);
            _eventNameOBJ.setType("CamelCaseName");
            _eventNameOBJ.setName("eventName");
            _eventNameOBJ.setDmdID("809");
            _eventNameOBJ.setDescription("The name of an event.");
            _eventName.setDefinedIn(this);
            _eventNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _eventNameOBJ.setLineNumber("88");
            addAttributeDefList(_eventName);

            AttributeDefinitionDMO _moduleNameOBJ = new AttributeDefinitionDMO();
            _moduleName = new AttributeDefinition(_moduleNameOBJ);
            _moduleNameOBJ.setType("CamelCaseName");
            _moduleNameOBJ.setName("moduleName");
            _moduleNameOBJ.setDmdID("810");
            _moduleNameOBJ.setDescription("The name of a module.");
            _moduleName.setDefinedIn(this);
            _moduleNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _moduleNameOBJ.setLineNumber("94");
            addAttributeDefList(_moduleName);

            AttributeDefinitionDMO _componentNameOBJ = new AttributeDefinitionDMO();
            _componentName = new AttributeDefinition(_componentNameOBJ);
            _componentNameOBJ.setType("CamelCaseName");
            _componentNameOBJ.setName("componentName");
            _componentNameOBJ.setDmdID("811");
            _componentNameOBJ.setDescription("The name of a component.");
            _componentName.setDefinedIn(this);
            _componentNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _componentNameOBJ.setLineNumber("100");
            addAttributeDefList(_componentName);

            AttributeDefinitionDMO _viewNameOBJ = new AttributeDefinitionDMO();
            _viewName = new AttributeDefinition(_viewNameOBJ);
            _viewNameOBJ.setType("CamelCaseName");
            _viewNameOBJ.setName("viewName");
            _viewNameOBJ.setDmdID("812");
            _viewNameOBJ.setDescription("The name of a View.");
            _viewName.setDefinedIn(this);
            _viewNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _viewNameOBJ.setLineNumber("106");
            addAttributeDefList(_viewName);

            AttributeDefinitionDMO _widgetOBJ = new AttributeDefinitionDMO();
            _widget = new AttributeDefinition(_widgetOBJ);
            _widgetOBJ.setType("Boolean");
            _widgetOBJ.setName("widget");
            _widgetOBJ.setDmdID("813");
            _widgetOBJ.setDescription("Indicates if a View interface extends IsWidget. This defaults to true because most of our views will be displayed in a manner where implementing IsWidget is useful.");
            _widgetOBJ.setNullReturnValue("true");
            _widget.setDefinedIn(this);
            _widgetOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _widgetOBJ.setLineNumber("114");
            addAttributeDefList(_widget);

            AttributeDefinitionDMO _localEventOBJ = new AttributeDefinitionDMO();
            _localEvent = new AttributeDefinition(_localEventOBJ);
            _localEventOBJ.setType("EventWithArgs");
            _localEventOBJ.setName("localEvent");
            _localEventOBJ.setDmdID("814");
            _localEventOBJ.setDescription("Indicates a local event name. An example would be localEvent deleteButtonClicked,  which would result in a method named onDeleteButtonClicked() to be created for the Presenter interface. <P> If there are arguments associated with the event, use the form: deleteButtonClicked (ContactDMO contact)");
            _localEvent.setDefinedIn(this);
            _localEventOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _localEventOBJ.setLineNumber("123");
            addAttributeDefList(_localEvent);

            AttributeDefinitionDMO _displayDMOOBJ = new AttributeDefinitionDMO();
            _displayDMO = new AttributeDefinition(_displayDMOOBJ);
            _displayDMOOBJ.setType("DisplayDataSpec");
            _displayDMOOBJ.setName("displayDMO");
            _displayDMOOBJ.setDmdID("816");
            _displayDMOOBJ.setDescription("Indicates data to be displayed in a View. The attributes takes the form Class SINGLE|MULTI varname.");
            _displayDMOOBJ.setValueType("MULTI");
            _displayDMO.setDefinedIn(this);
            _displayDMOOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _displayDMOOBJ.setLineNumber("137");
            addAttributeDefList(_displayDMO);

            AttributeDefinitionDMO _selectEventOBJ = new AttributeDefinitionDMO();
            _selectEvent = new AttributeDefinition(_selectEventOBJ);
            _selectEventOBJ.setType("EventSpec");
            _selectEventOBJ.setName("selectEvent");
            _selectEventOBJ.setDmdID("817");
            _selectEventOBJ.setDescription("Indicates type of events to be generated when data is selected.");
            _selectEventOBJ.setValueType("MULTI");
            _selectEvent.setDefinedIn(this);
            _selectEventOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _selectEventOBJ.setLineNumber("144");
            addAttributeDefList(_selectEvent);

            AttributeDefinitionDMO _deleteEventOBJ = new AttributeDefinitionDMO();
            _deleteEvent = new AttributeDefinition(_deleteEventOBJ);
            _deleteEventOBJ.setType("EventSpec");
            _deleteEventOBJ.setName("deleteEvent");
            _deleteEventOBJ.setDmdID("818");
            _deleteEventOBJ.setDescription("Indicates type of events to be generated when data is deleted.");
            _deleteEventOBJ.setValueType("MULTI");
            _deleteEvent.setDefinedIn(this);
            _deleteEventOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _deleteEventOBJ.setLineNumber("151");
            addAttributeDefList(_deleteEvent);

            AttributeDefinitionDMO _clickEventOBJ = new AttributeDefinitionDMO();
            _clickEvent = new AttributeDefinition(_clickEventOBJ);
            _clickEventOBJ.setType("OperationSpec");
            _clickEventOBJ.setName("clickEvent");
            _clickEventOBJ.setDmdID("819");
            _clickEventOBJ.setDescription("Indicates type of event to be generated when an object is clicked.");
            _clickEventOBJ.setValueType("MULTI");
            _clickEvent.setDefinedIn(this);
            _clickEventOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _clickEventOBJ.setLineNumber("158");
            addAttributeDefList(_clickEvent);

            AttributeDefinitionDMO _modifyEventOBJ = new AttributeDefinitionDMO();
            _modifyEvent = new AttributeDefinition(_modifyEventOBJ);
            _modifyEventOBJ.setType("OperationSpec");
            _modifyEventOBJ.setName("modifyEvent");
            _modifyEventOBJ.setDmdID("820");
            _modifyEventOBJ.setDescription("Indicates type of event to be generated when an object is modified.");
            _modifyEvent.setDefinedIn(this);
            _modifyEventOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _modifyEventOBJ.setLineNumber("164");
            addAttributeDefList(_modifyEvent);

            AttributeDefinitionDMO _createEventOBJ = new AttributeDefinitionDMO();
            _createEvent = new AttributeDefinition(_createEventOBJ);
            _createEventOBJ.setType("OperationSpec");
            _createEventOBJ.setName("createEvent");
            _createEventOBJ.setDmdID("821");
            _createEventOBJ.setDescription("Indicates type of event to be generated when an object is created.");
            _createEvent.setDefinedIn(this);
            _createEventOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _createEventOBJ.setLineNumber("170");
            addAttributeDefList(_createEvent);

            AttributeDefinitionDMO _broadcastOBJ = new AttributeDefinitionDMO();
            _broadcast = new AttributeDefinition(_broadcastOBJ);
            _broadcastOBJ.setType("Event");
            _broadcastOBJ.setName("broadcast");
            _broadcastOBJ.setDmdID("822");
            _broadcastOBJ.setDescription("Indicates an event that a View will first call on its Presenter interface and then broadcast on the event bus.");
            _broadcastOBJ.setValueType("MULTI");
            _broadcast.setDefinedIn(this);
            _broadcastOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _broadcastOBJ.setLineNumber("178");
            addAttributeDefList(_broadcast);

            AttributeDefinitionDMO _broadcastOnlyOBJ = new AttributeDefinitionDMO();
            _broadcastOnly = new AttributeDefinition(_broadcastOnlyOBJ);
            _broadcastOnlyOBJ.setType("Event");
            _broadcastOnlyOBJ.setName("broadcastOnly");
            _broadcastOnlyOBJ.setDmdID("823");
            _broadcastOnlyOBJ.setDescription("Indicates an event tha a View will broadcast only on the event bus; it is not  sent to its presenter.");
            _broadcastOnlyOBJ.setValueType("MULTI");
            _broadcastOnly.setDefinedIn(this);
            _broadcastOnlyOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _broadcastOnlyOBJ.setLineNumber("187");
            addAttributeDefList(_broadcastOnly);

            AttributeDefinitionDMO _presenterMethodOBJ = new AttributeDefinitionDMO();
            _presenterMethod = new AttributeDefinition(_presenterMethodOBJ);
            _presenterMethodOBJ.setType("MethodWithArgs");
            _presenterMethodOBJ.setName("presenterMethod");
            _presenterMethodOBJ.setDmdID("824");
            _presenterMethodOBJ.setDescription("Indicates a local function name (on the Presenter), optionally followed by an argument vector and, if required fully qualified class names.");
            _presenterMethodOBJ.setValueType("MULTI");
            _presenterMethod.setDefinedIn(this);
            _presenterMethodOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _presenterMethodOBJ.setLineNumber("195");
            addAttributeDefList(_presenterMethod);

            AttributeDefinitionDMO _viewMethodOBJ = new AttributeDefinitionDMO();
            _viewMethod = new AttributeDefinition(_viewMethodOBJ);
            _viewMethodOBJ.setType("MethodWithArgs");
            _viewMethodOBJ.setName("viewMethod");
            _viewMethodOBJ.setDmdID("825");
            _viewMethodOBJ.setDescription("Indicates a local function name (on the View), optionally followed by an argument vector and, if required fully qualified class names.");
            _viewMethodOBJ.setValueType("MULTI");
            _viewMethod.setDefinedIn(this);
            _viewMethodOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _viewMethodOBJ.setLineNumber("203");
            addAttributeDefList(_viewMethod);

            AttributeDefinitionDMO _useClassOBJ = new AttributeDefinitionDMO();
            _useClass = new AttributeDefinition(_useClassOBJ);
            _useClassOBJ.setType("String");
            _useClassOBJ.setName("useClass");
            _useClassOBJ.setDmdID("826");
            _useClassOBJ.setDescription("The fully qualified class name of a RunContextItem.");
            _useClass.setDefinedIn(this);
            _useClassOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useClassOBJ.setLineNumber("209");
            addAttributeDefList(_useClass);

            AttributeDefinitionDMO _itemNameOBJ = new AttributeDefinitionDMO();
            _itemName = new AttributeDefinition(_itemNameOBJ);
            _itemNameOBJ.setType("CamelCaseName");
            _itemNameOBJ.setName("itemName");
            _itemNameOBJ.setDmdID("827");
            _itemNameOBJ.setDescription("The name of a RunContextItem.");
            _itemName.setDefinedIn(this);
            _itemNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _itemNameOBJ.setLineNumber("215");
            addAttributeDefList(_itemName);

            AttributeDefinitionDMO _constructionOBJ = new AttributeDefinitionDMO();
            _construction = new AttributeDefinition(_constructionOBJ);
            _constructionOBJ.setType("String");
            _constructionOBJ.setName("construction");
            _constructionOBJ.setDmdID("828");
            _constructionOBJ.setDescription("The statement used to construct the RunContextItem instance.");
            _construction.setDefinedIn(this);
            _constructionOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _constructionOBJ.setLineNumber("221");
            addAttributeDefList(_construction);

            AttributeDefinitionDMO _itemOrderOBJ = new AttributeDefinitionDMO();
            _itemOrder = new AttributeDefinition(_itemOrderOBJ);
            _itemOrderOBJ.setType("Integer");
            _itemOrderOBJ.setName("itemOrder");
            _itemOrderOBJ.setDmdID("829");
            _itemOrderOBJ.setDescription("The order in which a RunContextItem should be instantiated.");
            _itemOrderOBJ.setNullReturnValue("50");
            _itemOrder.setDefinedIn(this);
            _itemOrderOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _itemOrderOBJ.setLineNumber("228");
            addAttributeDefList(_itemOrder);

            AttributeDefinitionDMO _contextImplOBJ = new AttributeDefinitionDMO();
            _contextImpl = new AttributeDefinition(_contextImplOBJ);
            _contextImplOBJ.setType("String");
            _contextImplOBJ.setName("contextImpl");
            _contextImplOBJ.setDmdID("830");
            _contextImplOBJ.setDescription("The context implementation in which this RunContextItem definition should be used. All items are part of the Default implementation, but if you need other implementations, just respecify the item with different useClass and/or different construction syntax.");
            _contextImplOBJ.setNullReturnValue("Default");
            _contextImpl.setDefinedIn(this);
            _contextImplOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _contextImplOBJ.setLineNumber("238");
            addAttributeDefList(_contextImpl);

            AttributeDefinitionDMO _importThisOBJ = new AttributeDefinitionDMO();
            _importThis = new AttributeDefinition(_importThisOBJ);
            _importThisOBJ.setType("String");
            _importThisOBJ.setName("importThis");
            _importThisOBJ.setDmdID("831");
            _importThisOBJ.setDescription("Allows for the specification of other import statements in various definitions.");
            _importThisOBJ.setValueType("TREESET");
            _importThis.setDefinedIn(this);
            _importThisOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _importThisOBJ.setLineNumber("245");
            addAttributeDefList(_importThis);

            AttributeDefinitionDMO _localOBJ = new AttributeDefinitionDMO();
            _local = new AttributeDefinition(_localOBJ);
            _localOBJ.setType("Event");
            _localOBJ.setName("local");
            _localOBJ.setDmdID("832");
            _localOBJ.setDescription("Indicates that a View fires a local event to its Presenter. This is shorthand for a call to a member function on the Presenter.");
            _localOBJ.setValueType("TREESET");
            _local.setDefinedIn(this);
            _localOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _localOBJ.setLineNumber("253");
            addAttributeDefList(_local);

            AttributeDefinitionDMO _appNameOBJ = new AttributeDefinitionDMO();
            _appName = new AttributeDefinition(_appNameOBJ);
            _appNameOBJ.setType("CamelCaseName");
            _appNameOBJ.setName("appName");
            _appNameOBJ.setDmdID("833");
            _appNameOBJ.setDescription("The name of an application.");
            _appName.setDefinedIn(this);
            _appNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _appNameOBJ.setLineNumber("259");
            addAttributeDefList(_appName);

            AttributeDefinitionDMO _controllerNameOBJ = new AttributeDefinitionDMO();
            _controllerName = new AttributeDefinition(_controllerNameOBJ);
            _controllerNameOBJ.setType("CamelCaseName");
            _controllerNameOBJ.setName("controllerName");
            _controllerNameOBJ.setDmdID("834");
            _controllerNameOBJ.setDescription("The name of a controller.");
            _controllerName.setDefinedIn(this);
            _controllerNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _controllerNameOBJ.setLineNumber("265");
            addAttributeDefList(_controllerName);

            AttributeDefinitionDMO _usesRunContextItemOBJ = new AttributeDefinitionDMO();
            _usesRunContextItem = new AttributeDefinition(_usesRunContextItemOBJ);
            _usesRunContextItemOBJ.setType("RunContextItem");
            _usesRunContextItemOBJ.setName("usesRunContextItem");
            _usesRunContextItemOBJ.setDmdID("835");
            _usesRunContextItemOBJ.setDescription("Indicates a RunContextItem on which something depends. This implies that the  entity must have the overall run context injected at construction time. Run context items are  represented as private final members of the generated base implementation of the entity and are assigned from the run context.");
            _usesRunContextItemOBJ.setValueType("TREESET");
            _usesRunContextItem.setDefinedIn(this);
            _usesRunContextItemOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _usesRunContextItemOBJ.setLineNumber("275");
            addAttributeDefList(_usesRunContextItem);

            AttributeDefinitionDMO _presenterImportOBJ = new AttributeDefinitionDMO();
            _presenterImport = new AttributeDefinition(_presenterImportOBJ);
            _presenterImportOBJ.setType("String");
            _presenterImportOBJ.setName("presenterImport");
            _presenterImportOBJ.setDmdID("836");
            _presenterImportOBJ.setDescription("Indicates an import required by the Presenter interface of a View.");
            _presenterImportOBJ.setValueType("TREESET");
            _presenterImport.setDefinedIn(this);
            _presenterImportOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _presenterImportOBJ.setLineNumber("282");
            addAttributeDefList(_presenterImport);

            AttributeDefinitionDMO _viewImportOBJ = new AttributeDefinitionDMO();
            _viewImport = new AttributeDefinition(_viewImportOBJ);
            _viewImportOBJ.setType("String");
            _viewImportOBJ.setName("viewImport");
            _viewImportOBJ.setDmdID("837");
            _viewImportOBJ.setDescription("Indicates an import required by the View interface.");
            _viewImportOBJ.setValueType("TREESET");
            _viewImport.setDefinedIn(this);
            _viewImportOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _viewImportOBJ.setLineNumber("289");
            addAttributeDefList(_viewImport);

            AttributeDefinitionDMO _sharedImportOBJ = new AttributeDefinitionDMO();
            _sharedImport = new AttributeDefinition(_sharedImportOBJ);
            _sharedImportOBJ.setType("String");
            _sharedImportOBJ.setName("sharedImport");
            _sharedImportOBJ.setDmdID("838");
            _sharedImportOBJ.setDescription("Indicates an import required by both the View and Presenter interfaces.");
            _sharedImportOBJ.setValueType("TREESET");
            _sharedImport.setDefinedIn(this);
            _sharedImportOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sharedImportOBJ.setLineNumber("296");
            addAttributeDefList(_sharedImport);

            AttributeDefinitionDMO _presenterNameOBJ = new AttributeDefinitionDMO();
            _presenterName = new AttributeDefinition(_presenterNameOBJ);
            _presenterNameOBJ.setType("CamelCaseName");
            _presenterNameOBJ.setName("presenterName");
            _presenterNameOBJ.setDmdID("839");
            _presenterNameOBJ.setDescription("The name of a Presenter.");
            _presenterName.setDefinedIn(this);
            _presenterNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _presenterNameOBJ.setLineNumber("302");
            addAttributeDefList(_presenterName);

            AttributeDefinitionDMO _activityNameOBJ = new AttributeDefinitionDMO();
            _activityName = new AttributeDefinition(_activityNameOBJ);
            _activityNameOBJ.setType("CamelCaseName");
            _activityNameOBJ.setName("activityName");
            _activityNameOBJ.setDmdID("840");
            _activityNameOBJ.setDescription("The name of an Activity.");
            _activityName.setDefinedIn(this);
            _activityNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _activityNameOBJ.setLineNumber("308");
            addAttributeDefList(_activityName);

            AttributeDefinitionDMO _managesViewOBJ = new AttributeDefinitionDMO();
            _managesView = new AttributeDefinition(_managesViewOBJ);
            _managesViewOBJ.setType("View");
            _managesViewOBJ.setName("managesView");
            _managesViewOBJ.setDmdID("841");
            _managesViewOBJ.setDescription("Indicates Views that are managed by a Component.");
            _managesViewOBJ.setValueType("MULTI");
            _managesView.setDefinedIn(this);
            _managesViewOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _managesViewOBJ.setLineNumber("315");
            addAttributeDefList(_managesView);

            AttributeDefinitionDMO _usesControllerOBJ = new AttributeDefinitionDMO();
            _usesController = new AttributeDefinition(_usesControllerOBJ);
            _usesControllerOBJ.setType("Controller");
            _usesControllerOBJ.setName("usesController");
            _usesControllerOBJ.setDmdID("842");
            _usesControllerOBJ.setDescription("Indicates Controllers that are used by an application or a site.");
            _usesControllerOBJ.setValueType("MULTI");
            _usesController.setDefinedIn(this);
            _usesControllerOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _usesControllerOBJ.setLineNumber("322");
            addAttributeDefList(_usesController);

            AttributeDefinitionDMO _useSchemaOBJ = new AttributeDefinitionDMO();
            _useSchema = new AttributeDefinition(_useSchemaOBJ);
            _useSchemaOBJ.setType("SchemaDefinition");
            _useSchemaOBJ.setName("useSchema");
            _useSchemaOBJ.setDmdID("843");
            _useSchemaOBJ.setDescription("Indicates the schemas that a component uses. Your module must specify dependsOnSchema for the appropriate schemas.");
            _useSchemaOBJ.setValueType("MULTI");
            _useSchema.setDefinedIn(this);
            _useSchemaOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useSchemaOBJ.setLineNumber("330");
            addAttributeDefList(_useSchema);

            AttributeDefinitionDMO _sendsGetRequestOBJ = new AttributeDefinitionDMO();
            _sendsGetRequest = new AttributeDefinition(_sendsGetRequestOBJ);
            _sendsGetRequestOBJ.setType("GetWithOptions");
            _sendsGetRequestOBJ.setName("sendsGetRequest");
            _sendsGetRequestOBJ.setDmdID("844");
            _sendsGetRequestOBJ.setDescription("Indicates that a component performs get requests.");
            _sendsGetRequestOBJ.setValueType("MULTI");
            _sendsGetRequest.setDefinedIn(this);
            _sendsGetRequestOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sendsGetRequestOBJ.setLineNumber("337");
            addAttributeDefList(_sendsGetRequest);

            AttributeDefinitionDMO _sendsDeleteRequestOBJ = new AttributeDefinitionDMO();
            _sendsDeleteRequest = new AttributeDefinition(_sendsDeleteRequestOBJ);
            _sendsDeleteRequestOBJ.setType("RequestWithOptions");
            _sendsDeleteRequestOBJ.setName("sendsDeleteRequest");
            _sendsDeleteRequestOBJ.setDmdID("845");
            _sendsDeleteRequestOBJ.setDescription("Indicates that a component performs delete requests.");
            _sendsDeleteRequestOBJ.setValueType("MULTI");
            _sendsDeleteRequest.setDefinedIn(this);
            _sendsDeleteRequestOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sendsDeleteRequestOBJ.setLineNumber("344");
            addAttributeDefList(_sendsDeleteRequest);

            AttributeDefinitionDMO _sendsSetRequestOBJ = new AttributeDefinitionDMO();
            _sendsSetRequest = new AttributeDefinition(_sendsSetRequestOBJ);
            _sendsSetRequestOBJ.setType("RequestWithOptions");
            _sendsSetRequestOBJ.setName("sendsSetRequest");
            _sendsSetRequestOBJ.setDmdID("846");
            _sendsSetRequestOBJ.setDescription("Indicates that a component performs set requests.");
            _sendsSetRequestOBJ.setValueType("MULTI");
            _sendsSetRequest.setDefinedIn(this);
            _sendsSetRequestOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sendsSetRequestOBJ.setLineNumber("351");
            addAttributeDefList(_sendsSetRequest);

            AttributeDefinitionDMO _sendsCreateRequestOBJ = new AttributeDefinitionDMO();
            _sendsCreateRequest = new AttributeDefinition(_sendsCreateRequestOBJ);
            _sendsCreateRequestOBJ.setType("RequestWithOptions");
            _sendsCreateRequestOBJ.setName("sendsCreateRequest");
            _sendsCreateRequestOBJ.setDmdID("847");
            _sendsCreateRequestOBJ.setDescription("Indicates that a component performs create requests.");
            _sendsCreateRequestOBJ.setValueType("MULTI");
            _sendsCreateRequest.setDefinedIn(this);
            _sendsCreateRequestOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sendsCreateRequestOBJ.setLineNumber("358");
            addAttributeDefList(_sendsCreateRequest);

            AttributeDefinitionDMO _sendsActionRequestOBJ = new AttributeDefinitionDMO();
            _sendsActionRequest = new AttributeDefinition(_sendsActionRequestOBJ);
            _sendsActionRequestOBJ.setType("RequestWithOptions");
            _sendsActionRequestOBJ.setName("sendsActionRequest");
            _sendsActionRequestOBJ.setDmdID("848");
            _sendsActionRequestOBJ.setDescription("Indicates that a component performs action requests.");
            _sendsActionRequestOBJ.setValueType("MULTI");
            _sendsActionRequest.setDefinedIn(this);
            _sendsActionRequestOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sendsActionRequestOBJ.setLineNumber("365");
            addAttributeDefList(_sendsActionRequest);

            AttributeDefinitionDMO _sendsLoginRequestOBJ = new AttributeDefinitionDMO();
            _sendsLoginRequest = new AttributeDefinition(_sendsLoginRequestOBJ);
            _sendsLoginRequestOBJ.setType("RequestWithOptions");
            _sendsLoginRequestOBJ.setName("sendsLoginRequest");
            _sendsLoginRequestOBJ.setDmdID("849");
            _sendsLoginRequestOBJ.setDescription("Indicates that a component performs login requests.");
            _sendsLoginRequestOBJ.setValueType("MULTI");
            _sendsLoginRequest.setDefinedIn(this);
            _sendsLoginRequestOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sendsLoginRequestOBJ.setLineNumber("372");
            addAttributeDefList(_sendsLoginRequest);

            AttributeDefinitionDMO _sendsLogoutRequestOBJ = new AttributeDefinitionDMO();
            _sendsLogoutRequest = new AttributeDefinition(_sendsLogoutRequestOBJ);
            _sendsLogoutRequestOBJ.setType("RequestWithOptions");
            _sendsLogoutRequestOBJ.setName("sendsLogoutRequest");
            _sendsLogoutRequestOBJ.setDmdID("850");
            _sendsLogoutRequestOBJ.setDescription("Indicates that a component performs logout requests.");
            _sendsLogoutRequestOBJ.setValueType("MULTI");
            _sendsLogoutRequest.setDefinedIn(this);
            _sendsLogoutRequestOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sendsLogoutRequestOBJ.setLineNumber("379");
            addAttributeDefList(_sendsLogoutRequest);

            AttributeDefinitionDMO _centralDMPErrorHandlerOBJ = new AttributeDefinitionDMO();
            _centralDMPErrorHandler = new AttributeDefinition(_centralDMPErrorHandlerOBJ);
            _centralDMPErrorHandlerOBJ.setType("Boolean");
            _centralDMPErrorHandlerOBJ.setName("centralDMPErrorHandler");
            _centralDMPErrorHandlerOBJ.setDmdID("851");
            _centralDMPErrorHandlerOBJ.setDescription("Indicates that a controller is the target for centralized handling of Dark Matter Protocol errors.");
            _centralDMPErrorHandler.setDefinedIn(this);
            _centralDMPErrorHandlerOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _centralDMPErrorHandlerOBJ.setLineNumber("385");
            addAttributeDefList(_centralDMPErrorHandler);

            AttributeDefinitionDMO _centralRPCErrorHandlerOBJ = new AttributeDefinitionDMO();
            _centralRPCErrorHandler = new AttributeDefinition(_centralRPCErrorHandlerOBJ);
            _centralRPCErrorHandlerOBJ.setType("Boolean");
            _centralRPCErrorHandlerOBJ.setName("centralRPCErrorHandler");
            _centralRPCErrorHandlerOBJ.setDmdID("852");
            _centralRPCErrorHandlerOBJ.setDescription("Indicates that a controller is the target for centralized handling of GWT RPC errors.");
            _centralRPCErrorHandler.setDefinedIn(this);
            _centralRPCErrorHandlerOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _centralRPCErrorHandlerOBJ.setLineNumber("391");
            addAttributeDefList(_centralRPCErrorHandler);

            AttributeDefinitionDMO _placeNameOBJ = new AttributeDefinitionDMO();
            _placeName = new AttributeDefinition(_placeNameOBJ);
            _placeNameOBJ.setType("CamelCaseName");
            _placeNameOBJ.setName("placeName");
            _placeNameOBJ.setDmdID("853");
            _placeNameOBJ.setDescription("The name of a Place.");
            _placeName.setDefinedIn(this);
            _placeNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _placeNameOBJ.setLineNumber("397");
            addAttributeDefList(_placeName);

            AttributeDefinitionDMO _placePrefixOBJ = new AttributeDefinitionDMO();
            _placePrefix = new AttributeDefinition(_placePrefixOBJ);
            _placePrefixOBJ.setType("String");
            _placePrefixOBJ.setName("placePrefix");
            _placePrefixOBJ.setDmdID("854");
            _placePrefixOBJ.setDescription("The prefix that globally identifies a Place. A Place url is composed of prefix:token.");
            _placePrefix.setDefinedIn(this);
            _placePrefixOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _placePrefixOBJ.setLineNumber("403");
            addAttributeDefList(_placePrefix);

            AttributeDefinitionDMO _runsActivityOBJ = new AttributeDefinitionDMO();
            _runsActivity = new AttributeDefinition(_runsActivityOBJ);
            _runsActivityOBJ.setType("Activity");
            _runsActivityOBJ.setName("runsActivity");
            _runsActivityOBJ.setDmdID("855");
            _runsActivityOBJ.setDescription("Indicates the Activity that runs in a Place.");
            _runsActivity.setDefinedIn(this);
            _runsActivityOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _runsActivityOBJ.setLineNumber("409");
            addAttributeDefList(_runsActivity);

            AttributeDefinitionDMO _parentPlaceOBJ = new AttributeDefinitionDMO();
            _parentPlace = new AttributeDefinition(_parentPlaceOBJ);
            _parentPlaceOBJ.setType("Place");
            _parentPlaceOBJ.setName("parentPlace");
            _parentPlaceOBJ.setDmdID("856");
            _parentPlaceOBJ.setDescription("Indicates the parent of a SubPlace.");
            _parentPlace.setDefinedIn(this);
            _parentPlaceOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _parentPlaceOBJ.setLineNumber("415");
            addAttributeDefList(_parentPlace);

            AttributeDefinitionDMO _defaultPlaceOBJ = new AttributeDefinitionDMO();
            _defaultPlace = new AttributeDefinition(_defaultPlaceOBJ);
            _defaultPlaceOBJ.setType("Place");
            _defaultPlaceOBJ.setName("defaultPlace");
            _defaultPlaceOBJ.setDmdID("857");
            _defaultPlaceOBJ.setDescription("Indicates the DefaultPlace for a WebApplication.");
            _defaultPlace.setDefinedIn(this);
            _defaultPlaceOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultPlaceOBJ.setLineNumber("421");
            addAttributeDefList(_defaultPlace);

            AttributeDefinitionDMO _abstractActivityOBJ = new AttributeDefinitionDMO();
            _abstractActivity = new AttributeDefinition(_abstractActivityOBJ);
            _abstractActivityOBJ.setType("Boolean");
            _abstractActivityOBJ.setName("abstractActivity");
            _abstractActivityOBJ.setDmdID("858");
            _abstractActivityOBJ.setDescription("Indicates that an Activity should be derived from AbstractActivity");
            _abstractActivity.setDefinedIn(this);
            _abstractActivityOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _abstractActivityOBJ.setLineNumber("427");
            addAttributeDefList(_abstractActivity);

            AttributeDefinitionDMO _addedToRunContextOBJ = new AttributeDefinitionDMO();
            _addedToRunContext = new AttributeDefinition(_addedToRunContextOBJ);
            _addedToRunContextOBJ.setType("Boolean");
            _addedToRunContextOBJ.setName("addedToRunContext");
            _addedToRunContextOBJ.setDmdID("859");
            _addedToRunContextOBJ.setDescription("Indicates whether a RunContextItem should be generated for a Controller; defaults to true. However, if you need manual control over ordering and creation of the context item, for example in the case of base Controllers like the CommController, this can be set to false.");
            _addedToRunContextOBJ.setNullReturnValue("true");
            _addedToRunContext.setDefinedIn(this);
            _addedToRunContextOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _addedToRunContextOBJ.setLineNumber("436");
            addAttributeDefList(_addedToRunContext);

            AttributeDefinitionDMO _instantiatesPresenterOBJ = new AttributeDefinitionDMO();
            _instantiatesPresenter = new AttributeDefinition(_instantiatesPresenterOBJ);
            _instantiatesPresenterOBJ.setType("Presenter");
            _instantiatesPresenterOBJ.setName("instantiatesPresenter");
            _instantiatesPresenterOBJ.setDmdID("860");
            _instantiatesPresenterOBJ.setDescription("Indicates that a Component makes use of a particular Presenter; a method will be created on the componet's BaseImpl that allows you to get a presenter of this type. This is used in conjunction with instantiatesView attribute, in that an appropriate  presenter must be passed to the generated get*View() method to get a view instance.");
            _instantiatesPresenterOBJ.setValueType("MULTI");
            _instantiatesPresenter.setDefinedIn(this);
            _instantiatesPresenterOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _instantiatesPresenterOBJ.setLineNumber("446");
            addAttributeDefList(_instantiatesPresenter);

            AttributeDefinitionDMO _createOnDemandOBJ = new AttributeDefinitionDMO();
            _createOnDemand = new AttributeDefinition(_createOnDemandOBJ);
            _createOnDemandOBJ.setType("Boolean");
            _createOnDemandOBJ.setName("createOnDemand");
            _createOnDemandOBJ.setDmdID("861");
            _createOnDemandOBJ.setDescription("Indicates that a RunContextItem will be created on demand when requested from the RunContext.");
            _createOnDemand.setDefinedIn(this);
            _createOnDemandOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _createOnDemandOBJ.setLineNumber("453");
            addAttributeDefList(_createOnDemand);

            AttributeDefinitionDMO _instantiatesViewOBJ = new AttributeDefinitionDMO();
            _instantiatesView = new AttributeDefinition(_instantiatesViewOBJ);
            _instantiatesViewOBJ.setType("View");
            _instantiatesViewOBJ.setName("instantiatesView");
            _instantiatesViewOBJ.setDmdID("862");
            _instantiatesViewOBJ.setDescription("Indicates that a component instantiates a particular View; a method will created on the component BaseImpl that allows you to get an instance of this view and bind it to the appropriate presenter.");
            _instantiatesViewOBJ.setValueType("MULTI");
            _instantiatesView.setDefinedIn(this);
            _instantiatesViewOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _instantiatesViewOBJ.setLineNumber("462");
            addAttributeDefList(_instantiatesView);

            AttributeDefinitionDMO _theOneOBJ = new AttributeDefinitionDMO();
            _theOne = new AttributeDefinition(_theOneOBJ);
            _theOneOBJ.setType("Boolean");
            _theOneOBJ.setName("theOne");
            _theOneOBJ.setDmdID("863");
            _theOneOBJ.setDescription("Indicates that a Presenter or View will be the only one created from the run context. If this flag is false (the default), calling getXView() or getXPresenter() will return a new instance of the component. This is also used in conjunction (internally) with the createOnDemand attribute on RunContextItems. <p /> Morpheus may not agree with your decision in this regard.");
            _theOne.setDefinedIn(this);
            _theOneOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _theOneOBJ.setLineNumber("473");
            addAttributeDefList(_theOne);

            AttributeDefinitionDMO _usingStandardSubpackagesOBJ = new AttributeDefinitionDMO();
            _usingStandardSubpackages = new AttributeDefinition(_usingStandardSubpackagesOBJ);
            _usingStandardSubpackagesOBJ.setType("Boolean");
            _usingStandardSubpackagesOBJ.setName("usingStandardSubpackages");
            _usingStandardSubpackagesOBJ.setDmdID("864");
            _usingStandardSubpackagesOBJ.setDescription("When set on a Module, this indicates that extended classes for Activities, Controllers, Presenters and Views will be expected to be in standard subpackages beneath  your extended package i.e. extended.activities, extended.controllers etc. This way, you don't have to specify the subpackage attribute for each of these components. If the subpackage is specified for any of these components, it takes precidence over the standard");
            _usingStandardSubpackages.setDefinedIn(this);
            _usingStandardSubpackagesOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _usingStandardSubpackagesOBJ.setLineNumber("483");
            addAttributeDefList(_usingStandardSubpackages);

            AttributeDefinitionDMO _configNameOBJ = new AttributeDefinitionDMO();
            _configName = new AttributeDefinition(_configNameOBJ);
            _configNameOBJ.setType("CamelCaseName");
            _configNameOBJ.setName("configName");
            _configNameOBJ.setDmdID("865");
            _configNameOBJ.setDescription("The name of a menu implementation configuration.");
            _configName.setDefinedIn(this);
            _configNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _configNameOBJ.setLineNumber("489");
            addAttributeDefList(_configName);

            AttributeDefinitionDMO _defaultMenuBarOBJ = new AttributeDefinitionDMO();
            _defaultMenuBar = new AttributeDefinition(_defaultMenuBarOBJ);
            _defaultMenuBarOBJ.setType("MenuElementTypeAndComment");
            _defaultMenuBarOBJ.setName("defaultMenuBar");
            _defaultMenuBarOBJ.setDmdID("866");
            _defaultMenuBarOBJ.setDescription("The name and description of the default menu bar implementation.");
            _defaultMenuBar.setDefinedIn(this);
            _defaultMenuBarOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultMenuBarOBJ.setLineNumber("495");
            addAttributeDefList(_defaultMenuBar);

            AttributeDefinitionDMO _alternateMenuBarOBJ = new AttributeDefinitionDMO();
            _alternateMenuBar = new AttributeDefinition(_alternateMenuBarOBJ);
            _alternateMenuBarOBJ.setType("MenuElementTypeAndComment");
            _alternateMenuBarOBJ.setName("alternateMenuBar");
            _alternateMenuBarOBJ.setDmdID("867");
            _alternateMenuBarOBJ.setDescription("The name and description of various alternate menu bar implementations.");
            _alternateMenuBarOBJ.setValueType("MULTI");
            _alternateMenuBar.setDefinedIn(this);
            _alternateMenuBarOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _alternateMenuBarOBJ.setLineNumber("502");
            addAttributeDefList(_alternateMenuBar);

            AttributeDefinitionDMO _elementNameOBJ = new AttributeDefinitionDMO();
            _elementName = new AttributeDefinition(_elementNameOBJ);
            _elementNameOBJ.setType("CamelCaseName");
            _elementNameOBJ.setName("elementName");
            _elementNameOBJ.setDmdID("868");
            _elementNameOBJ.setDescription("The name of a menu related element.");
            _elementName.setDefinedIn(this);
            _elementNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _elementNameOBJ.setLineNumber("508");
            addAttributeDefList(_elementName);

            AttributeDefinitionDMO _useImplOBJ = new AttributeDefinitionDMO();
            _useImpl = new AttributeDefinition(_useImplOBJ);
            _useImplOBJ.setType("String");
            _useImplOBJ.setName("useImpl");
            _useImplOBJ.setDmdID("869");
            _useImplOBJ.setDescription("The name of a menu element implementation.");
            _useImpl.setDefinedIn(this);
            _useImplOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useImplOBJ.setLineNumber("514");
            addAttributeDefList(_useImpl);

            AttributeDefinitionDMO _addToMenuOBJ = new AttributeDefinitionDMO();
            _addToMenu = new AttributeDefinition(_addToMenuOBJ);
            _addToMenuOBJ.setType("Menu");
            _addToMenuOBJ.setName("addToMenu");
            _addToMenuOBJ.setDmdID("870");
            _addToMenuOBJ.setDescription("Indicates the menu to which an MenuItem should be added.");
            _addToMenu.setDefinedIn(this);
            _addToMenuOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _addToMenuOBJ.setLineNumber("520");
            addAttributeDefList(_addToMenu);

            AttributeDefinitionDMO _alwaysEnabledOBJ = new AttributeDefinitionDMO();
            _alwaysEnabled = new AttributeDefinition(_alwaysEnabledOBJ);
            _alwaysEnabledOBJ.setType("Boolean");
            _alwaysEnabledOBJ.setName("alwaysEnabled");
            _alwaysEnabledOBJ.setDmdID("871");
            _alwaysEnabledOBJ.setDescription("Indicates if the item is always enabled. If not, there will be a method generated that is called before the menu is shown to determine if the item is enabled/disabled.");
            _alwaysEnabled.setDefinedIn(this);
            _alwaysEnabledOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _alwaysEnabledOBJ.setLineNumber("528");
            addAttributeDefList(_alwaysEnabled);

            AttributeDefinitionDMO _menuOrderOBJ = new AttributeDefinitionDMO();
            _menuOrder = new AttributeDefinition(_menuOrderOBJ);
            _menuOrderOBJ.setType("String");
            _menuOrderOBJ.setName("menuOrder");
            _menuOrderOBJ.setDmdID("872");
            _menuOrderOBJ.setDescription("Indicates the lorder in which a sub menu or menu item should be displayed in the menu.");
            _menuOrder.setDefinedIn(this);
            _menuOrderOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _menuOrderOBJ.setLineNumber("535");
            addAttributeDefList(_menuOrder);

            AttributeDefinitionDMO _displayLabelOBJ = new AttributeDefinitionDMO();
            _displayLabel = new AttributeDefinition(_displayLabelOBJ);
            _displayLabelOBJ.setType("String");
            _displayLabelOBJ.setName("displayLabel");
            _displayLabelOBJ.setDmdID("873");
            _displayLabelOBJ.setDescription("The label to be displayed on something.");
            _displayLabel.setDefinedIn(this);
            _displayLabelOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _displayLabelOBJ.setLineNumber("541");
            addAttributeDefList(_displayLabel);

            AttributeDefinitionDMO _actionNameOBJ = new AttributeDefinitionDMO();
            _actionName = new AttributeDefinition(_actionNameOBJ);
            _actionNameOBJ.setType("CamelCaseName");
            _actionNameOBJ.setName("actionName");
            _actionNameOBJ.setDmdID("874");
            _actionNameOBJ.setDescription("The name of an Action.");
            _actionName.setDefinedIn(this);
            _actionNameOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _actionNameOBJ.setLineNumber("547");
            addAttributeDefList(_actionName);

            AttributeDefinitionDMO _triggersActionOBJ = new AttributeDefinitionDMO();
            _triggersAction = new AttributeDefinition(_triggersActionOBJ);
            _triggersActionOBJ.setType("Action");
            _triggersActionOBJ.setName("triggersAction");
            _triggersActionOBJ.setDmdID("875");
            _triggersActionOBJ.setDescription("Indicates the Action to be associated with a menu entry, button or other UI component.");
            _triggersAction.setDefinedIn(this);
            _triggersActionOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _triggersActionOBJ.setLineNumber("554");
            addAttributeDefList(_triggersAction);

            AttributeDefinitionDMO _defaultSubMenuOBJ = new AttributeDefinitionDMO();
            _defaultSubMenu = new AttributeDefinition(_defaultSubMenuOBJ);
            _defaultSubMenuOBJ.setType("MenuElementTypeAndComment");
            _defaultSubMenuOBJ.setName("defaultSubMenu");
            _defaultSubMenuOBJ.setDmdID("876");
            _defaultSubMenuOBJ.setDescription("The name and description of the default submenu implementation.");
            _defaultSubMenu.setDefinedIn(this);
            _defaultSubMenuOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultSubMenuOBJ.setLineNumber("560");
            addAttributeDefList(_defaultSubMenu);

            AttributeDefinitionDMO _alternateSubMenuOBJ = new AttributeDefinitionDMO();
            _alternateSubMenu = new AttributeDefinition(_alternateSubMenuOBJ);
            _alternateSubMenuOBJ.setType("MenuElementTypeAndComment");
            _alternateSubMenuOBJ.setName("alternateSubMenu");
            _alternateSubMenuOBJ.setDmdID("877");
            _alternateSubMenuOBJ.setDescription("The name and description of the various submenu implementations.");
            _alternateSubMenuOBJ.setValueType("MULTI");
            _alternateSubMenu.setDefinedIn(this);
            _alternateSubMenuOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _alternateSubMenuOBJ.setLineNumber("567");
            addAttributeDefList(_alternateSubMenu);

            AttributeDefinitionDMO _defaultMenuItemOBJ = new AttributeDefinitionDMO();
            _defaultMenuItem = new AttributeDefinition(_defaultMenuItemOBJ);
            _defaultMenuItemOBJ.setType("MenuElementTypeAndComment");
            _defaultMenuItemOBJ.setName("defaultMenuItem");
            _defaultMenuItemOBJ.setDmdID("878");
            _defaultMenuItemOBJ.setDescription("The name and description of the default menu item implementation.");
            _defaultMenuItem.setDefinedIn(this);
            _defaultMenuItemOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultMenuItemOBJ.setLineNumber("573");
            addAttributeDefList(_defaultMenuItem);

            AttributeDefinitionDMO _alternateMenuItemOBJ = new AttributeDefinitionDMO();
            _alternateMenuItem = new AttributeDefinition(_alternateMenuItemOBJ);
            _alternateMenuItemOBJ.setType("MenuElementTypeAndComment");
            _alternateMenuItemOBJ.setName("alternateMenuItem");
            _alternateMenuItemOBJ.setDmdID("879");
            _alternateMenuItemOBJ.setDescription("The name and description of various alternate Menu item implementations.");
            _alternateMenuItemOBJ.setValueType("MULTI");
            _alternateMenuItem.setDefinedIn(this);
            _alternateMenuItemOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _alternateMenuItemOBJ.setLineNumber("580");
            addAttributeDefList(_alternateMenuItem);

            AttributeDefinitionDMO _implementsActionOBJ = new AttributeDefinitionDMO();
            _implementsAction = new AttributeDefinition(_implementsActionOBJ);
            _implementsActionOBJ.setType("Action");
            _implementsActionOBJ.setName("implementsAction");
            _implementsActionOBJ.setDmdID("880");
            _implementsActionOBJ.setDescription("Indicates the Actions to be implemented by a Component.");
            _implementsActionOBJ.setValueType("MULTI");
            _implementsAction.setDefinedIn(this);
            _implementsActionOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _implementsActionOBJ.setLineNumber("587");
            addAttributeDefList(_implementsAction);

            AttributeDefinitionDMO _implementedByOBJ = new AttributeDefinitionDMO();
            _implementedBy = new AttributeDefinition(_implementedByOBJ);
            _implementedByOBJ.setType("Component");
            _implementedByOBJ.setName("implementedBy");
            _implementedByOBJ.setDmdID("881");
            _implementedByOBJ.setDescription("Indicates the Component that implements an Action.");
            _implementedByOBJ.setInternalUse("true");
            _implementedBy.setDefinedIn(this);
            _implementedByOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _implementedByOBJ.setLineNumber("594");
            addAttributeDefList(_implementedBy);

            AttributeDefinitionDMO _defaultSeparatorOBJ = new AttributeDefinitionDMO();
            _defaultSeparator = new AttributeDefinition(_defaultSeparatorOBJ);
            _defaultSeparatorOBJ.setType("MenuElementTypeAndComment");
            _defaultSeparatorOBJ.setName("defaultSeparator");
            _defaultSeparatorOBJ.setDmdID("882");
            _defaultSeparatorOBJ.setDescription("The name and description of the default separator implementation.");
            _defaultSeparator.setDefinedIn(this);
            _defaultSeparatorOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultSeparatorOBJ.setLineNumber("600");
            addAttributeDefList(_defaultSeparator);

            AttributeDefinitionDMO _menuImplementationOBJ = new AttributeDefinitionDMO();
            _menuImplementation = new AttributeDefinition(_menuImplementationOBJ);
            _menuImplementationOBJ.setType("MenuImplementationConfig");
            _menuImplementationOBJ.setName("menuImplementation");
            _menuImplementationOBJ.setDmdID("883");
            _menuImplementationOBJ.setDescription("A reference to a menu implementation.");
            _menuImplementation.setDefinedIn(this);
            _menuImplementationOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _menuImplementationOBJ.setLineNumber("606");
            addAttributeDefList(_menuImplementation);

            AttributeDefinitionDMO _displayLabelI18NOBJ = new AttributeDefinitionDMO();
            _displayLabelI18N = new AttributeDefinition(_displayLabelI18NOBJ);
            _displayLabelI18NOBJ.setType("String");
            _displayLabelI18NOBJ.setName("displayLabelI18N");
            _displayLabelI18NOBJ.setDmdID("884");
            _displayLabelI18NOBJ.setDescription("A reference to run context item with translated labels for your menu item. If you had defined a run context item called constants (whose base interface was generated by the GWT I18N creation mechanisms), you could use one its value by specifying constants.myLabel().");
            _displayLabelI18N.setDefinedIn(this);
            _displayLabelI18NOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _displayLabelI18NOBJ.setLineNumber("614");
            addAttributeDefList(_displayLabelI18N);

    }

    private void initTypes() throws DmcValueException {
            TypeDefinitionDMO _EventWithArgsOBJ = new TypeDefinitionDMO();
            _EventWithArgs = new TypeDefinition(_EventWithArgsOBJ);
            _EventWithArgsOBJ.setName("EventWithArgs");
            _EventWithArgsOBJ.setDescription("The EventWithArgs type is used to handle definitions of events associated with various Model View Whatever components.");
            _EventWithArgsOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeEventWithArgs");
            _EventWithArgsOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.EventWithArgs");
            _EventWithArgsOBJ.setDmwIteratorClass("EventWithArgsIterableDMW");
            _EventWithArgsOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.EventWithArgsIterableDMW");
            _EventWithArgs.setDefinedIn(this);
            _EventWithArgsOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _EventWithArgsOBJ.setLineNumber("7");
            addTypeDefList(_EventWithArgs);

            TypeDefinitionDMO _MethodWithArgsOBJ = new TypeDefinitionDMO();
            _MethodWithArgs = new TypeDefinition(_MethodWithArgsOBJ);
            _MethodWithArgsOBJ.setName("MethodWithArgs");
            _MethodWithArgsOBJ.setDescription("The MethodWithArgs type is used to handle definitions of function calls associated with various Model View Whatever components.");
            _MethodWithArgsOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeMethodWithArgs");
            _MethodWithArgsOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.MethodWithArgs");
            _MethodWithArgsOBJ.setDmwIteratorClass("MethodWithArgsIterableDMW");
            _MethodWithArgsOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MethodWithArgsIterableDMW");
            _MethodWithArgs.setDefinedIn(this);
            _MethodWithArgsOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _MethodWithArgsOBJ.setLineNumber("14");
            addTypeDefList(_MethodWithArgs);

            TypeDefinitionDMO _GetWithOptionsOBJ = new TypeDefinitionDMO();
            _GetWithOptions = new TypeDefinition(_GetWithOptionsOBJ);
            _GetWithOptionsOBJ.setName("GetWithOptions");
            _GetWithOptionsOBJ.setDescription("The GetWithOptions type is used to handle indications that a component will perform get operations.");
            _GetWithOptionsOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeGetWithOptions");
            _GetWithOptionsOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.GetWithOptions");
            _GetWithOptionsOBJ.setDmwIteratorClass("GetWithOptionsIterableDMW");
            _GetWithOptionsOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.GetWithOptionsIterableDMW");
            _GetWithOptions.setDefinedIn(this);
            _GetWithOptionsOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _GetWithOptionsOBJ.setLineNumber("21");
            addTypeDefList(_GetWithOptions);

            TypeDefinitionDMO _RequestWithOptionsOBJ = new TypeDefinitionDMO();
            _RequestWithOptions = new TypeDefinition(_RequestWithOptionsOBJ);
            _RequestWithOptionsOBJ.setName("RequestWithOptions");
            _RequestWithOptionsOBJ.setDescription("The RequestWithOptions type is used to handle indications that a component will perform delete or set operations.");
            _RequestWithOptionsOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeRequestWithOptions");
            _RequestWithOptionsOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.RequestWithOptions");
            _RequestWithOptionsOBJ.setDmwIteratorClass("RequestWithOptionsIterableDMW");
            _RequestWithOptionsOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.RequestWithOptionsIterableDMW");
            _RequestWithOptions.setDefinedIn(this);
            _RequestWithOptionsOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _RequestWithOptionsOBJ.setLineNumber("28");
            addTypeDefList(_RequestWithOptions);

            TypeDefinitionDMO _DisplayDataSpecOBJ = new TypeDefinitionDMO();
            _DisplayDataSpec = new TypeDefinition(_DisplayDataSpecOBJ);
            _DisplayDataSpecOBJ.setIsEnumType("false");
            _DisplayDataSpecOBJ.setName("DisplayDataSpec");
            _DisplayDataSpecOBJ.setDescription("This is an internally generated type to represent complex type DisplayDataSpec values.");
            _DisplayDataSpecOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.generated.types.DmcTypeDisplayDataSpec");
            _DisplayDataSpecOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.generated.types.DisplayDataSpec");
            _DisplayDataSpecOBJ.setDmwIteratorClass("DisplayDataSpecIterableDMW");
            _DisplayDataSpecOBJ.setInternallyGenerated("true");
            _DisplayDataSpecOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.DisplayDataSpecIterableDMW");
            _DisplayDataSpec.setDefinedIn(this);
            _DisplayDataSpecOBJ.setIsRefType("false");
            addTypeDefList(_DisplayDataSpec);

            TypeDefinitionDMO _EventSpecOBJ = new TypeDefinitionDMO();
            _EventSpec = new TypeDefinition(_EventSpecOBJ);
            _EventSpecOBJ.setIsEnumType("false");
            _EventSpecOBJ.setName("EventSpec");
            _EventSpecOBJ.setDescription("This is an internally generated type to represent complex type EventSpec values.");
            _EventSpecOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.generated.types.DmcTypeEventSpec");
            _EventSpecOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.generated.types.EventSpec");
            _EventSpecOBJ.setDmwIteratorClass("EventSpecIterableDMW");
            _EventSpecOBJ.setInternallyGenerated("true");
            _EventSpecOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.EventSpecIterableDMW");
            _EventSpec.setDefinedIn(this);
            _EventSpecOBJ.setIsRefType("false");
            addTypeDefList(_EventSpec);

            TypeDefinitionDMO _OperationSpecOBJ = new TypeDefinitionDMO();
            _OperationSpec = new TypeDefinition(_OperationSpecOBJ);
            _OperationSpecOBJ.setIsEnumType("false");
            _OperationSpecOBJ.setName("OperationSpec");
            _OperationSpecOBJ.setDescription("This is an internally generated type to represent complex type OperationSpec values.");
            _OperationSpecOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.generated.types.DmcTypeOperationSpec");
            _OperationSpecOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.generated.types.OperationSpec");
            _OperationSpecOBJ.setDmwIteratorClass("OperationSpecIterableDMW");
            _OperationSpecOBJ.setInternallyGenerated("true");
            _OperationSpecOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.OperationSpecIterableDMW");
            _OperationSpec.setDefinedIn(this);
            _OperationSpecOBJ.setIsRefType("false");
            addTypeDefList(_OperationSpec);

            TypeDefinitionDMO _MenuElementTypeAndCommentOBJ = new TypeDefinitionDMO();
            _MenuElementTypeAndComment = new TypeDefinition(_MenuElementTypeAndCommentOBJ);
            _MenuElementTypeAndCommentOBJ.setIsEnumType("false");
            _MenuElementTypeAndCommentOBJ.setName("MenuElementTypeAndComment");
            _MenuElementTypeAndCommentOBJ.setDescription("This is an internally generated type to represent complex type MenuElementTypeAndComment values.");
            _MenuElementTypeAndCommentOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.generated.types.DmcTypeMenuElementTypeAndComment");
            _MenuElementTypeAndCommentOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuElementTypeAndComment");
            _MenuElementTypeAndCommentOBJ.setDmwIteratorClass("MenuElementTypeAndCommentIterableDMW");
            _MenuElementTypeAndCommentOBJ.setInternallyGenerated("true");
            _MenuElementTypeAndCommentOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuElementTypeAndCommentIterableDMW");
            _MenuElementTypeAndComment.setDefinedIn(this);
            _MenuElementTypeAndCommentOBJ.setIsRefType("false");
            addTypeDefList(_MenuElementTypeAndComment);

    }

    private void initActions() throws DmcValueException {
    }

    private void initEnums() throws DmcValueException {
            EnumDefinitionDMO _SelectionTypeEnumOBJ = new EnumDefinitionDMO();
            _SelectionTypeEnum = new EnumDefinition(_SelectionTypeEnumOBJ);
            _SelectionTypeEnumOBJ.setName("SelectionTypeEnum");
            _SelectionTypeEnumOBJ.addEnumValue("0 SINGLE Single selection supported.");
            _SelectionTypeEnumOBJ.addEnumValue("1 MULTI Multi-selection supported.");
            _SelectionTypeEnumOBJ.setDescription("The SelectionTypeEnum indicates the selection mode of operations associated with object selection or object deletion.");
            _SelectionTypeEnum.setDefinedIn(this);
            _SelectionTypeEnumOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _SelectionTypeEnumOBJ.setLineNumber("35");
            addEnumDefList(_SelectionTypeEnum);

            EnumDefinitionDMO _EventScopeEnumOBJ = new EnumDefinitionDMO();
            _EventScopeEnum = new EnumDefinition(_EventScopeEnumOBJ);
            _EventScopeEnumOBJ.setName("EventScopeEnum");
            _EventScopeEnumOBJ.addEnumValue("0 LOCAL Single selection supported.");
            _EventScopeEnumOBJ.addEnumValue("1 BROADCAST Multi-selection supported.");
            _EventScopeEnumOBJ.addEnumValue("2 BROADCASTONLY Multi-selection supported.");
            _EventScopeEnumOBJ.setDescription("The SelectionTypeEnum indicates the selection mode of operations");
            _EventScopeEnum.setDefinedIn(this);
            _EventScopeEnumOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _EventScopeEnumOBJ.setLineNumber("42");
            addEnumDefList(_EventScopeEnum);

            EnumDefinitionDMO _GetFunctionOptionEnumOBJ = new EnumDefinitionDMO();
            _GetFunctionOptionEnum = new EnumDefinition(_GetFunctionOptionEnumOBJ);
            _GetFunctionOptionEnumOBJ.setName("GetFunctionOptionEnum");
            _GetFunctionOptionEnumOBJ.addEnumValue("0 NONE Indicates that no options are specified.");
            _GetFunctionOptionEnumOBJ.addEnumValue("1 DMPERRORS Indicates that DMP error responses will be handled locally.");
            _GetFunctionOptionEnumOBJ.addEnumValue("2 RPCERRORS Indicates that RPC errors will be handled locally.");
            _GetFunctionOptionEnumOBJ.addEnumValue("3 CENTRALDMPERRORS Indicates that you want DMP errors centrally handled.");
            _GetFunctionOptionEnumOBJ.addEnumValue("4 CENTRALRPCERRORS Indicates that you want RPC errors centrally handled.");
            _GetFunctionOptionEnumOBJ.addEnumValue("5 CENTRALERRORS Indicates that you want DMP/RPC errors centrally handled.");
            _GetFunctionOptionEnumOBJ.addEnumValue("6 CACHE Indicates that you want the results centrally cached.");
            _GetFunctionOptionEnumOBJ.addEnumValue("7 EVENTS Indicates that you want notification of events associated with the get request.");
            _GetFunctionOptionEnumOBJ.setDescription("The GetFunctionModifierEnum indicates a set of modifiers that direct code generation for standard Dark Matter Protocol get request handling.");
            _GetFunctionOptionEnum.setDefinedIn(this);
            _GetFunctionOptionEnumOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _GetFunctionOptionEnumOBJ.setLineNumber("55");
            addEnumDefList(_GetFunctionOptionEnum);

            EnumDefinitionDMO _RequestOptionEnumOBJ = new EnumDefinitionDMO();
            _RequestOptionEnum = new EnumDefinition(_RequestOptionEnumOBJ);
            _RequestOptionEnumOBJ.setName("RequestOptionEnum");
            _RequestOptionEnumOBJ.addEnumValue("0 NONE Indicates that no options are specified.");
            _RequestOptionEnumOBJ.addEnumValue("1 DMPERRORS Indicates that DMP error responses will be handled locally.");
            _RequestOptionEnumOBJ.addEnumValue("2 RPCERRORS Indicates that RPC errors will be handled locally.");
            _RequestOptionEnumOBJ.addEnumValue("3 CENTRALDMPERRORS Indicates that you want DMP errors centrally handled.");
            _RequestOptionEnumOBJ.addEnumValue("4 CENTRALRPCERRORS Indicates that you want RPC errors centrally handled.");
            _RequestOptionEnumOBJ.addEnumValue("5 CENTRALERRORS Indicates that you want DMP/RPC errors centrally handled.");
            _RequestOptionEnumOBJ.setDescription("The RequestOptionEnum indicates a set of modifiers that direct code generation for standard Dark Matter Protocol delete and set request handling.");
            _RequestOptionEnum.setDefinedIn(this);
            _RequestOptionEnumOBJ.setFile("C:/Dev/svn-web1/dark-matter-data/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _RequestOptionEnumOBJ.setLineNumber("65");
            addEnumDefList(_RequestOptionEnum);

    }


    @Override
    public synchronized MvwSchemaAG getInstance() throws DmcValueException{
    	   if (instance == null)
    		   initialize();
    	   return(instance);
    }
}

