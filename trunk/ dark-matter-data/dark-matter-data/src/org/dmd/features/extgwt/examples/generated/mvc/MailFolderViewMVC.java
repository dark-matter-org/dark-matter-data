package org.dmd.features.extgwt.examples.generated.mvc;

import com.extjs.gxt.ui.client.mvc.Controller;
import com.extjs.gxt.ui.client.mvc.View;
import com.extjs.gxt.ui.client.mvc.AppEvent;
import com.extjs.gxt.ui.client.event.EventType;
import org.dmd.features.extgwt.examples.generated.dmo.FolderDMO;

/**
 * null
 * <P>
 * This code was auto-generated by the mvcgenerator utility and shouldn't be altered manually!
 * Generated from: org.dmd.features.extgwt.extended.MvcView.initCodeGenInfo(MvcView.java:66)
 */
abstract public class MailFolderViewMVC extends View {


    protected MailFolderViewMVC(Controller controller){
        super(controller);
    }

    abstract protected void initialize();

    public void handleEvent(AppEvent event) {
        EventType type = event.getType();
        if (type == AppEventsMVC.AppInit) {
            handleAppInitEvent(event);
        }
        else if (type == AppEventsMVC.AppNavmail) {
            handleAppNavmailEvent(event,(FolderDMO)event.getData());
        }
    }


    /**
     * The derived class must overload this method to handle the app.init event.
     * <P>
     * The init event is generated once the user has logged in to the system.
     */
    abstract protected void handleAppInitEvent(AppEvent event);

    /**
     * The derived class must overload this method to handle the app.navmail event.
     * <P>
     * The navmail event is sent when we successfully retrieve a mail folder from
     * the server.
     */
    abstract protected void handleAppNavmailEvent(AppEvent event,FolderDMO data);

}
