package org.dmd.features.extgwt.client.generated.mvc;

import com.extjs.gxt.ui.client.mvc.Controller;
import com.extjs.gxt.ui.client.mvc.AppEvent;
import com.extjs.gxt.ui.client.event.EventType;
import com.extjs.gxt.ui.client.Registry;
import org.dmd.features.extgwt.client.ApplicationIF;
import org.dmd.features.extgwt.client.extended.ServerEventController;

/**
 * The DMMVCEventController controller is used to establish the
 * <P>
 * This code was auto-generated by the mvcgenerator utility and shouldn't be altered manually!
 * Generated from: org.dmd.features.extgwt.extended.MvcController.initCodeGenInfo(MvcController.java:72)
 */
abstract public class DMMVCEventControllerMVC extends Controller {

    // Resources
    protected ApplicationIF application;
    protected ServerEventController dMMVCEventController;

    // Events
    public EventType DMMVCInit;

    protected DMMVCEventControllerMVC(){
        // Resolve our events
        DMMVCInit = getApplication().getEvent("DMMVC.init");

        registerEventTypes(DMMVCInit);
    }

    /**
     * Derived classes must override this method to perform their initialization behaviour.
     */
    abstract protected void initialize();

    public void handleEvent(AppEvent event) {
        EventType type = event.getType();
        if (type == DMMVCInit) {
            handleDMMVCInitEvent(event);
        }
    }

    /**
     * The derived class must overload this method to handle the DMMVC.init event.
     * <P>
     * The DMMVC init event can be injected to cause initialization of the Dark
     * Matter MVC framework elements.
     */
    abstract protected void handleDMMVCInitEvent(AppEvent event);

    /**
     * @return This is the universal handle to the application.
     */
    protected ApplicationIF getApplication(){
        if (application == null)
            application = (ApplicationIF) Registry.get("application");
        return(application);
    }

    /**
     * @return Handle to the server event controller. When MvcEvents are defined
     */
    protected ServerEventController getDMMVCEventController(){
        if (dMMVCEventController == null)
            dMMVCEventController = (ServerEventController) Registry.get("DMMVC.eventController");
        return(dMMVCEventController);
    }

    /**
     * Adds the DMMVCEventController item to the Registry.
     * Handle to the server event controller. When MvcEvents are defined
     */
    protected void registerDMMVCEventController(ServerEventController item){
            Registry.register("DMMVC.eventController", item);
    }

}
