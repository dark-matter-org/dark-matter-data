AttributeDefinition
name			dependsOnMVC
dmdID			600
type			MvcConfig
valueType		MULTI
description		This attribute allows and MvcConfig to refer to other configurations
 on which it depends.
 
AttributeDefinition
name 			definesEvent
dmdID			601
type 			MvcEvent
valueType		MULTI
description 	This attributes holds a list of MvcEvent names that are
 defined by MvcControllers. A particular event must be defined only once;
 but it can be emitted and handled by many different components.

AttributeDefinition
name 			handlesEvent
dmdID			602
type 			MvcEvent
valueType		MULTI
description 	This attributes holds a list of MvcEvent names that are
 handled by MvcControllers or MvcViews. A global list of these names is
 created and used to generate the AppEvents class.
 
AttributeDefinition
name			dispatchesEvent
dmdID			603
type			MvcEvent
valueType		MULTI
description		Indicates that the controller or view sends the event to the Dispatcher.
 
AttributeDefinition
name			definedBy
dmdID			604
type			String
valueType		MULTI
description		This attribute indicates which controller defines an event.

AttributeDefinition
name			emittedBy
dmdID			605
type			String
valueType		MULTI
description		This attribute is populated automatically on MvcEvent objects
 as the MVC definitions are read. Any MvcController or MvcView that emits an event
 will be added to this attribute. This helps with documentation.
 
AttributeDefinition
name			handledBy
dmdID			606
type			String
valueType		MULTI
description		This attribute is populated automatically on MvcEvent objects
 as the MVC definitions are read. Any MvcController or MvcView that handles an event
 will be added to this attribute. This helps with documentation.
 
AttributeDefinition
name			controllers
dmdID			607
type			MvcController
valueType		MULTI
description		The controllers attribute refers to MvcControllers that comprise an 
 MvcApplication.
 
//AttributeDefinition
//name			registryItem
//type            MvcRegistryItem
//isMultiValued	true
//description		In ExtGWT, the Registry provides global access to objects
// by name. The registryItem attribute is composed of a name for the registry item
// as well as the fully qualified name of the class of object that's associated
// with the entry. The convention for naming items is to use the name of component
// that creates the entry followed by 

AttributeDefinition
name			userDataType
dmdID			608
type            String
description		In ExtGWT, Events can also have user data associated with them. That is,
 you would call Dispatcher.forwardEvent(AppEvents.Init,someuserData). By specifying 
 eventDataType, the Dark Matter Generator will create appropriately typed convenience
 functions to forward and receive the event and its user data. The value for this 
 attribute should be the fully qualified name of the class you're passing with the event.
 <P>
 This attribute is also used when specified the data type of an MvcRegistryItem

AttributeDefinition
name            eventDataType
dmdID			609
type            String
description		The fully qualified name of the class that a particular server event
 contains. The class must be an auto generated DMO.

AttributeDefinition
name 			handlesServerEvent
dmdID			610
type 			MvcServerEvent
valueType		MULTI
description 	This attributes holds a list of MvcServerEvent names that are
 handled by MvcControllers or MvcViews. Controllers and Views that handle server
 events are automatically registered with the DMMVCEventController and are called
 when they're interested in are received.
 
AttributeDefinition
name			createsRegistryItem
dmdID			611
type			MvcRegistryItem
valueType		MULTI
description		A reference to a registry item that is created by a controller or view.

AttributeDefinition
name			usesRegistryItem
dmdID			612
type			MvcRegistryItem
valueType		MULTI
description		A reference to a registry item used by a controller or view.

AttributeDefinition
name			prefix
dmdID			613
type			String
description		This attribute defines a prefix used by the overall application
 or a controller to indicate the events or registry items that belong to it.

AttributeDefinition
name			controlsView
dmdID			614
type			MvcView
valueType		MULTI
description		Indicates an MvcView that is controlled by an MvcController

AttributeDefinition
name			controlsMultiView
dmdID			615
type			MvcMultiView
valueType		MULTI
description		Indicates an MvcMultiView that is controlled by an MvcController

AttributeDefinition
name			definedInMVCConfig
dmdID			616
type			MvcConfig
description		All MvcControllers have to know what config they were defined in
 so that when the overall application is built, the MvcApplication knows how to
 instantiate the controllers that make up the application.
 
AttributeDefinition
name			isHistoryEvent
dmdID			617
type			Boolean
description		When set to true for an MvcEvent, the event is flagged as a history
 event within the Dispatcher.

AttributeDefinition
name			parentController
dmdID			618
type			MvcController
description		Controllers can be arranged in a hierarchy. If you want to create that 
 hierarchy, simply indicate which MvcController is to be your parent. The MVC generation
 framework will take care of instantiating the controllers in the appropriate order.
 
AttributeDefinition
name			firesEvent
dmdID			619
type			MvcEvent
description		Indicates that an MvcView fires the specified event. When a View fires
 an event, it is NOT sent via the Dispatcher. Rather, it is propagated up the hierarchy
 of controllers by which the View is controlled.
 
AttributeDefinition
name			userDataCollection
dmdID			620
type			String
description		The fully qualified name of the collection type to be used when passing
 the user data e.g. java.util.List.

AttributeDefinition
name			userDataGenericSpec
dmdID			621
type			String
description		If the userDataCollection is a Map of some type, this attribute would
 indicate the generic arguments to be provided for the Map instance e.g. <String,MyData>
 In the case where the collection is just a list, the generation code knows to just
 use the userDataType as the generic argument.
 
AttributeDefinition
name			startEvents
dmdID			622
valueType		MULTI
type			MvcEvent
description		Indicates the events that should be dispatched when the application
 is told to start.

AttributeDefinition
name			addToMenu
dmdID			623
type			MvcMenu
description		Indicates the menu to which an MvcMenuItem should be added.

AttributeDefinition
name			alwaysEnabled
dmdID			624
type			Boolean
description		Indicates if the item is always enabled. If not, there will be a
 method generated that is called before the menu is shown to determine if the item
 is enabled/disabled.

AttributeDefinition
name			menuOrder
dmdID			625
type			Integer
//type			String
description		Indicates the lexicographic order in which a sub menu or menu item
 should be displayed in the menu. How you decide to specify this order is up to you.
 For instance, you might specify the orders as integer based strings e.g. 001, 100,
 150, 151.
 
AttributeDefinition
name			triggersAction
dmdID			626
type			MvcAction
description		Indicates the MvcAction to be associated with a menu entry, button or
 other UI component.

AttributeDefinition
name			definesAction
dmdID			627
valueType		MULTI
type			MvcAction
description		Indicates that the controller defines the specified action. This attribute
 is auto populated by the MvcDefinitionManager based on the associatedController of an action.

AttributeDefinition
name			definesMenu
dmdID			628
valueType		MULTI
type			MvcMenu
description		Indicates that the controller defines the specified menu. This attribute
 is auto populated by the MvcDefinitionManager based on the associatedController of a menu.

AttributeDefinition
name			definesMenuItem
dmdID			629
valueType		MULTI
type			MvcMenuItem
description		Indicates that the controller defines the specified menu item. This attribute
 is auto populated by the MvcDefinitionManager based on the associatedController of a menu item.

AttributeDefinition
name			definesMenuSeparator
dmdID			630
valueType		MULTI
type			MvcMenuSeparator
description		Indicates that the controller defines the specified menu separator. This attribute
 is auto populated by the MvcDefinitionManager based on the associatedController of a menu separator.

AttributeDefinition
name			associatedController
dmdID			631
type			MvcController
description		Indicates that something is associated with the specified controller.

AttributeDefinition
name			useForModelClass
dmdID			632
type			String
description		Indicates the fully qualified name of the DMO class on which
 a popup menu should be defined.

AttributeDefinition
name			displayLabel
dmdID			633
type			String
description		The label to be displayed on something.

AttributeDefinition
name            customRender
dmdID			634
type            Boolean
description     Indicates if you want to be able to custom render your menu or menu item.
 If so, an abstract class will be generated to represent the component and you will have
 create a derivative in your extended folder to provide the required behaviour.

AttributeDefinition
name			subpackage
dmdID			635
type			String
description		The subpackage beneath extended where a controller and its views will be
 assumed to exist. This allows for a hierarchic package structure for the classes that extend
 the generated MVC classes. The structure can contain other subpackages etc x.y.z but
 should not start or end with a period.


