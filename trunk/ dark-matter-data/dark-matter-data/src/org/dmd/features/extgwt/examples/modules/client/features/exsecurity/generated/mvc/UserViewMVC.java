package org.dmd.features.extgwt.examples.modules.client.features.exsecurity.generated.mvc;

import com.extjs.gxt.ui.client.mvc.Controller;
import com.extjs.gxt.ui.client.mvc.View;
import com.extjs.gxt.ui.client.mvc.AppEvent;
import com.extjs.gxt.ui.client.event.EventType;
import org.dmd.features.extgwt.client.util.MultiView;
import org.dmd.features.extgwt.examples.modules.client.features.exsecurity.extended.SecurityController;

/**
 * The UserView can be created multiple times, once for each view of a user
 * that's open.
 * <P>
 * This code was auto-generated by the mvcgenerator utility and shouldn't be altered manually!
 * Generated from: org.dmd.features.extgwt.extended.MvcView.initCodeGenInfo(MvcView.java:86)
 */
abstract public class UserViewMVC extends MultiView {

    protected SecurityController myController;


    protected UserViewMVC(String instanceName, Controller controller){
        super(instanceName,controller);
        myController = (SecurityController) controller;
    }

    /**
     * Derived classes must override this method to perform their initialization behaviour.
     */
    abstract protected void initialize();

    public void handleEvent(AppEvent event) {
        EventType type = event.getType();
        if (type == myController.CommonInit) {
            handleCommonInitEvent(event);
        }
    }


    /**
     * The derived class must overload this method to handle the common.init event.
     * <P>
     * The init event is generated once the user has logged in to the system.
     */
    abstract protected void handleCommonInitEvent(AppEvent event);

}
