package org.dmd.features.extgwt.generated.dmw;

// Generated from:  org.dmd.dmg.generators.DMWGenerator.formatImports(DMWGenerator.java:723)
import org.dmd.dmc.*;                                                      // If any attributes
import org.dmd.dmc.types.StringName;                                       // Primitive type
import org.dmd.dms.*;                                                      // Always 2
import org.dmd.features.extgwt.extended.MvcMenu;                           // Derived class
import org.dmd.features.extgwt.generated.dmo.MvcBackgroundMenuDMO;         // Class not auxiliary or abstract

/**
 * The MvcBackgroundMenu class is meant to allow for popup menus on the
 * background of components like DmdTreePanel and DmdGrid. In these cases,
 * objects displayed in the component are not selected, the menu is meant to
 * apply to tree/grid. This is useful for menus that have things like Add
 * Node or Add Row etc.
 * <P>
 * Generated from the extgwt schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from:  org.dmd.dmg.generators.DMWGenerator.dumpWrapper(DMWGenerator.java:339)
 */
abstract public class MvcBackgroundMenuDMW extends MvcMenu implements DmcNamedObjectIF {

    private MvcBackgroundMenuDMO mycore;

    public MvcBackgroundMenuDMW() {
        super(new MvcBackgroundMenuDMO(), org.dmd.features.extgwt.generated.ExtgwtSchemaAG._MvcBackgroundMenu);
        mycore = (MvcBackgroundMenuDMO) core;
        mycore.setContainer(this);
    }

    public MvcBackgroundMenuDMW(MvcBackgroundMenuDMO obj) {
        super(obj, org.dmd.features.extgwt.generated.ExtgwtSchemaAG._MvcBackgroundMenu);
        mycore = (MvcBackgroundMenuDMO) core;
        mycore.setContainer(this);
    }

    @Override
    public void setDmcObject(DmcObject obj) {
        mycore = (MvcBackgroundMenuDMO) obj;
        mycore.setContainer(this);
        super.setDmcObject(obj);
    }

    public MvcBackgroundMenuDMO getDMO() {
        return(mycore);
    }

    protected MvcBackgroundMenuDMW(MvcBackgroundMenuDMO obj, ClassDefinition cd) {
        super(obj,cd);
        mycore = (MvcBackgroundMenuDMO) core;
    }

    //  org.dmd.dmg.generators.DMWGenerator.getAccessFunctions(DMWGenerator.java:749)
    public StringName getObjectName(){
        return(mycore.getName());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(mycore.getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof MvcBackgroundMenuDMW){
            return( getObjectName().equals( ((MvcBackgroundMenuDMW) obj).getObjectName()) );
        }
        return(false);
    }

    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:847)
    public StringName getName(){
        return(mycore.getName());
    }

    /**
     * Sets name to the specified value.
     * @param value A value compatible with DmcTypeStringName
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:874)
    public void setName(Object value) throws DmcValueException {
        mycore.setName(value);
    }

    /**
     * Sets name to the specified value.
     * @param value StringName
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:883)
    public void setName(StringName value){
        mycore.setName(value);
    }

    /**
     * Removes the name attribute value.
     */
    //  org.dmd.dmg.generators.DMWGenerator.formatSV(DMWGenerator.java:898)
    public void remName(){
        mycore.remName();
    }


}
