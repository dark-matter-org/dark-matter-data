package org.dmd.features.extgwt.examples.modules.client.features.exmodule1.generated.mvc;

import com.extjs.gxt.ui.client.mvc.Controller;
import com.extjs.gxt.ui.client.mvc.View;
import com.extjs.gxt.ui.client.mvc.AppEvent;
import com.extjs.gxt.ui.client.event.EventType;
import com.extjs.gxt.ui.client.Registry;
import com.extjs.gxt.ui.client.widget.ContentPanel;
import com.extjs.gxt.ui.client.widget.LayoutContainer;
import com.extjs.gxt.ui.client.widget.Viewport;

/**
 * The Mod1View does blah, blah, blah
 * <P>
 * This code was auto-generated by the mvcgenerator utility and shouldn't be altered manually!
 * Generated from: org.dmd.features.extgwt.extended.MvcView.initCodeGenInfo(MvcView.java:66)
 */
abstract public class Mod1ViewMVC extends View {

    Mod1ControllerMVC myController;

    // Resources
    protected Viewport mod1ViewViewport;
    protected ContentPanel mod1ViewWestpanel;
    protected LayoutContainer mod1ViewCenter;

    protected Mod1ViewMVC(Controller controller){
        super(controller);
        myController = (Mod1ControllerMVC) controller;
    }

    abstract protected void initialize();

    public void handleEvent(AppEvent event) {
        EventType type = event.getType();
        if (type == myController.CommonInit) {
            handleCommonInitEvent(event);
        }
    }


    /**
     * The derived class must overload this method to handle the common.init event.
     * <P>
     * The init event is generated once the user has logged in to the system.
     */
    abstract protected void handleCommonInitEvent(AppEvent event);

    /**
     * @return The overall viewport of the application which is configured with a
     * border layout.
     */
    protected Viewport getMod1ViewViewport(){
        if (mod1ViewViewport == null)
            mod1ViewViewport = (Viewport) Registry.get("mod1.view.viewport");
        return(mod1ViewViewport);
    }

    /**
     * @return The west portion of the overall border layout that forms the main
     * window.
     */
    protected ContentPanel getMod1ViewWestpanel(){
        if (mod1ViewWestpanel == null)
            mod1ViewWestpanel = (ContentPanel) Registry.get("mod1.view.westpanel");
        return(mod1ViewWestpanel);
    }

    /**
     * @return The center portion of the overall border layout configured with a
     * fit layout.
     */
    protected LayoutContainer getMod1ViewCenter(){
        if (mod1ViewCenter == null)
            mod1ViewCenter = (LayoutContainer) Registry.get("mod1.view.center");
        return(mod1ViewCenter);
    }

}
