//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2011 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.features.extgwt.client;

import com.extjs.gxt.ui.client.event.EventType;

/**
 * The ApplicationIF interface defines the interface to an overall application
 * that uses the ExtGWT MVC framework. The interface is implemented by the 
 * class that's generated by the MVC Generator Utility.
 * <P>
 * One of the primary reasons for the existence of the interface is to allow for
 * code modularity when using the MVC framework. This mechanism is required because
 * the EventType instances used by the framework must be defined in a monolithic
 * way; they rely on a globally unique ID.
 * <P>
 * The ApplicationIF allows generated Controllers and Views to get handles to
 * the unique EventTypes by name (this is done in their constructors). By doing
 * this, we allow MVC modules to be defined separately and brought together to 
 * form an overall application.
 */
public interface ApplicationIF {

	/**
	 * This method must be overloaded to return the globally unique EventType
	 * for a given name. The names are the names of MvcEvent definitions.
	 * @param eventName The name of the event.
	 * @return The globally unique EventType instance.
	 */
	abstract public EventType getEvent(String eventName);
}
