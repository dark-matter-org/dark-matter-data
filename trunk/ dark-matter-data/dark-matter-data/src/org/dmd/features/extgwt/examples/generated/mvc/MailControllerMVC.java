package org.dmd.features.extgwt.examples.generated.mvc;

import com.extjs.gxt.ui.client.mvc.Controller;
import com.extjs.gxt.ui.client.mvc.AppEvent;
import com.extjs.gxt.ui.client.event.EventType;
import com.extjs.gxt.ui.client.Registry;
import java.lang.String;
import org.dmd.features.extgwt.examples.generated.dmo.FolderDMO;

/**
 * The MailController manages the view of a user's mail folders and
 * individual mail items.
 * <P>
 * This code was auto-generated by the mvcgenerator utility and shouldn't be altered manually!
 * Generated from: org.dmd.features.extgwt.extended.MvcController.initCodeGenInfo(MvcController.java:70)
 */
abstract public class MailControllerMVC extends Controller {

    // Resources
    protected String mailappService;
    protected MailFolderViewMVC mailFolderView;
    protected MailItemViewMVC mailItemView;

    protected MailControllerMVC(){
        registerEventTypes(AppEventsMVC.AppInit);
        registerEventTypes(AppEventsMVC.AppNavmail);
        registerEventTypes(AppEventsMVC.MailViewItem);
        registerEventTypes(AppEventsMVC.MailViewItems);
    }

    public void handleEvent(AppEvent event) {
        EventType type = event.getType();
        if (type == AppEventsMVC.AppInit) {
            forwardToView(mailFolderView,event);
        }
        else if (type == AppEventsMVC.AppNavmail) {
            forwardToView(mailFolderView,event);
            forwardToView(mailItemView,event);
        }
        else if (type == AppEventsMVC.MailViewItem) {
            forwardToView(mailItemView,event);
        }
        else if (type == AppEventsMVC.MailViewItems) {
            handleMailViewItemsEvent(event,(FolderDMO)event.getData());
            forwardToView(mailItemView,event);
        }
    }

    /**
     * The derived class must overload this method to handle the mail.viewItems event.
     * <P>
     * The viewItems event is sent when the user selects a mail folder in the
     * folder tree.
     */
    abstract protected void handleMailViewItemsEvent(AppEvent event,FolderDMO data);

    /**
     * @return This provides a handle to the mail service instance.
     */
    protected String getMailappService(){
        if (mailappService == null)
            mailappService = (String) Registry.get("mailapp.service");
        return(mailappService);
    }

}
