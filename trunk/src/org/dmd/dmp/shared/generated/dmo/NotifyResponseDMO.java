//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2010 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.dmp.shared.generated.dmo;

// Generated from: org.dmd.dms.util.GenUtility.formatImports(GenUtility.java:391)
import java.io.Serializable;                                  // Always required - (GenUtility.java:220)
import org.dmd.dmc.DmcSliceInfo;                              // Required for object slicing - (GenUtility.java:225)
import org.dmd.dmp.shared.generated.dmo.ResponseDMO;          // Base class - (GenUtility.java:351)
import org.dmd.dms.generated.dmo.MetaDMSAG;                   // Required for MODREC constructor - (GenUtility.java:224)
import org.dmd.dms.generated.types.DmcTypeModifierMV;         // Required for MODREC constructor - (GenUtility.java:223)

/**
 * The NotifyResponse is sent as the result of a NotifyRequest.
 * <P>
 * Generated from the dmp schema at version 0.1
 * <P>
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoFormatter.dumpDMO(DmoFormatter.java:133)
 */
@SuppressWarnings("serial")
public class NotifyResponseDMO  extends ResponseDMO  implements Serializable  {

    public final static String constructionClassName = "NotifyResponse";


    static {
    }

    public NotifyResponseDMO() {
        super("NotifyResponse");
    }

    protected NotifyResponseDMO(String oc) {
        super(oc);
    }

    @Override
    public NotifyResponseDMO getNew(){
        NotifyResponseDMO rc = new NotifyResponseDMO();
        return(rc);
    }

    @Override
    public NotifyResponseDMO getSlice(DmcSliceInfo info){
        NotifyResponseDMO rc = new NotifyResponseDMO();
        populateSlice(rc,info);
        return(rc);
    }

    public NotifyResponseDMO(DmcTypeModifierMV mods) {
        super("NotifyResponse");
        modrec(true);
        setModifier(mods);
    }

    public NotifyResponseDMO getModificationRecorder(){
        NotifyResponseDMO rc = new NotifyResponseDMO();
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        rc.modrec(true);
        return(rc);
    }




}
