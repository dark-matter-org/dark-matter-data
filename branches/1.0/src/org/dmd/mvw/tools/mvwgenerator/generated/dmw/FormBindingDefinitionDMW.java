package org.dmd.mvw.tools.mvwgenerator.generated.dmw;

// Generated from: org.dmd.util.codegen.ImportManager.getFormattedImports(ImportManager.java:82)
// Called from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:349)
import java.util.ArrayList;                                                           // To support getMVCopy() - (BaseDMWGeneratorNewest.java:997)
import java.util.Iterator;                                                            // Support copy of MV objects - (BaseDMWGeneratorNewest.java:2048)
import org.dmd.dmc.*;                                                                 // If any attributes - (BaseDMWGeneratorNewest.java:903)
import org.dmd.dmc.types.CamelCaseName;                                               // Is named by - (BaseDMWGeneratorNewest.java:884)
import org.dmd.dms.*;                                                                 // Always 2 - (BaseDMWGeneratorNewest.java:888)
import org.dmd.dms.generated.dmo.MetaDMSAG;                                           // Required for MODREC constructor - (BaseDMWGeneratorNewest.java:892)
import org.dmd.dms.generated.dmw.ClassDefinitionDMW;                                  // Is reference type - (BaseDMWGeneratorNewest.java:923)
import org.dmd.dms.generated.types.ClassDefinitionREF;                                // Is reference type REF - (BaseDMWGeneratorNewest.java:931)
import org.dmd.dms.generated.types.DmcTypeModifierMV;                                 // Required for MODREC constructor - (BaseDMWGeneratorNewest.java:891)
import org.dmd.mvw.tools.mvwgenerator.extended.I18NConfig;                            // Is reference type - (BaseDMWGeneratorNewest.java:923)
import org.dmd.mvw.tools.mvwgenerator.extended.MvwDefinition;                         // Derived class - (BaseDMWGeneratorNewest.java:1064)
import org.dmd.mvw.tools.mvwgenerator.extended.forms.FormBindingDefinition;           // Required for getModificationRecorder() - (BaseDMWGeneratorNewest.java:896)
import org.dmd.mvw.tools.mvwgenerator.generated.dmo.FormBindingDefinitionDMO;         // Class not auxiliary or abstract - (BaseDMWGeneratorNewest.java:1068)
import org.dmd.mvw.tools.mvwgenerator.generated.dmo.MvwDMSAG;                         // Attribute editField from the mvw schema - (BaseDMWGeneratorNewest.java:720)
import org.dmd.mvw.tools.mvwgenerator.generated.dmw.EditFieldIterableDMW;             // For multi-valued EditField - (BaseDMWGeneratorNewest.java:1913)
import org.dmd.mvw.tools.mvwgenerator.generated.types.I18NConfigREF;                  // Is reference type REF - (BaseDMWGeneratorNewest.java:931)
import org.dmd.mvw.tools.mvwgenerator.types.EditField;                                // Primitive type - (BaseDMWGeneratorNewest.java:966)


/**
 * The FormBinding class allows for the definition of bindings between DMO
 * attributes and the editors that will be used to display and edit their
 * values.
 * <P>
 * Generated from the mvw schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:366)
 */
abstract public class FormBindingDefinitionDMW extends MvwDefinition implements DmcNamedObjectIF {

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:443)
    public FormBindingDefinitionDMW() {
        super(new FormBindingDefinitionDMO(), org.dmd.mvw.tools.mvwgenerator.generated.MvwSchemaAG._FormBindingDefinition);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:449)
    public FormBindingDefinitionDMW(DmcTypeModifierMV mods) {
        super(new FormBindingDefinitionDMO(mods), org.dmd.mvw.tools.mvwgenerator.generated.MvwSchemaAG._FormBindingDefinition);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:491)
    public FormBindingDefinition getModificationRecorder(){
        FormBindingDefinition rc = new FormBindingDefinition();
        rc.setBindingName(getBindingName());
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        return(rc);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:512)
    public FormBindingDefinitionDMW(FormBindingDefinitionDMO obj) {
        super(obj, org.dmd.mvw.tools.mvwgenerator.generated.MvwSchemaAG._FormBindingDefinition);
    }

    public FormBindingDefinition cloneIt() {
        FormBindingDefinition rc = new FormBindingDefinition();
        rc.setDmcObject(getDMO().cloneIt());
        return(rc);
    }

    public FormBindingDefinitionDMO getDMO() {
        return((FormBindingDefinitionDMO) core);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:527)
    protected FormBindingDefinitionDMW(FormBindingDefinitionDMO obj, ClassDefinition cd) {
        super(obj,cd);
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.getAccessFunctions(BaseDMWGeneratorNewest.java:1113)
    public CamelCaseName getObjectName(){
        return(((FormBindingDefinitionDMO) core).getBindingName());
    }

    public int hashCode(){
        return(getObjectName().hashCode());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(((FormBindingDefinitionDMO) core).getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof FormBindingDefinitionDMW){
            return( getObjectName().equals( ((FormBindingDefinitionDMW) obj).getObjectName()) );
        }
        return(false);
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1286)
    public CamelCaseName getBindingName(){
        return(((FormBindingDefinitionDMO) core).getBindingName());
    }

    /**
     * Sets bindingName to the specified value.
     * @param value A value compatible with DmcTypeCamelCaseName
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1396)
    public void setBindingName(Object value) throws DmcValueException {
        ((FormBindingDefinitionDMO) core).setBindingName(value);
    }

    /**
     * Sets bindingName to the specified value.
     * @param value CamelCaseName
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1405)
    public void setBindingName(CamelCaseName value){
        ((FormBindingDefinitionDMO) core).setBindingName(value);
    }

    /**
     * Removes the bindingName attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1431)
    public void remBindingName(){
        ((FormBindingDefinitionDMO) core).remBindingName();
    }

    /**
     * @return The number of EditField items.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1483)
    public int getEditFieldSize(){
        return(((FormBindingDefinitionDMO) core).getEditFieldSize());
    }

    /**
     * @return true if there are no EditFieldDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1491)
    public boolean getEditFieldIsEmpty(){
        if (((FormBindingDefinitionDMO) core).getEditFieldSize() == 0)
            return(true);
        return(false);
    }

    /**
     * @return true if there are any EditFieldDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1501)
    public boolean getEditFieldHasValue(){
        if (((FormBindingDefinitionDMO) core).getEditFieldSize() == 0)
            return(false);
        return(true);
    }

    /**
     * @return An Iterator of EditField objects.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1917)
    public EditFieldIterableDMW getEditFieldIterable(){
        DmcAttribute<?> attr = core.get(MvwDMSAG.__editField);
        if (attr == null)
            return(EditFieldIterableDMW.emptyList);
        
        return(new EditFieldIterableDMW(((FormBindingDefinitionDMO) core).getEditField()));
    }

    /**
     * Adds another editField value.
     * @param value A value compatible with EditField
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1943)
    public void addEditField(Object value) throws DmcValueException {
        ((FormBindingDefinitionDMO) core).addEditField(value);
    }

    /**
     * Adds another editField value.
     * @param value A value compatible with EditField
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1953)
    public void addEditField(EditField value){
        ((FormBindingDefinitionDMO) core).addEditField(value);
    }

    /**
     * Returns true if the collection contains the editField value.
     * @param value A value compatible with EditField
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:2010)
    public boolean editFieldContains(EditField value){
        return(((FormBindingDefinitionDMO) core).editFieldContains(value));
    }

    /**
     * @return A COPY of the collection of EditField objects.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:2052)
    @SuppressWarnings("unchecked")
    public ArrayList<EditField> getEditFieldCopy(){
        DmcAttribute<?> attr = core.get(MvwDMSAG.__editField);
        if (attr == null)
            return(new ArrayList<EditField>());
        
        ArrayList<EditField> rc = new ArrayList<EditField>(attr.getMVSize());
        
        Iterator<EditField> it = (Iterator<EditField>) attr.getMV();
        while(it.hasNext()){
            rc.add(it.next());
        }
        
        return(rc);
    }

    /**
     * Deletes a editField value.
     * @param value The EditField to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:2079)
    public void delEditField(Object value) throws DmcValueException {
        ((FormBindingDefinitionDMO) core).delEditField(value);
    }

    /**
     * Deletes a editField value.
     * @param value The EditField to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:2088)
    public void delEditField(EditField value){
        ((FormBindingDefinitionDMO) core).delEditField(value);
    }

    /**
     * Removes the editField attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:2100)
    public void remEditField(){
        ((FormBindingDefinitionDMO) core).remEditField();
    }

    /**
     * @return A ClassDefinitionDMW object.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1246)
    public ClassDefinitionDMW getEditObject(){
        ClassDefinitionREF ref = ((FormBindingDefinitionDMO) core).getEditObject();
        if (ref == null)
            return(null);
        
        if (ref.getObject() == null)
            return(null);
        
        return((ClassDefinitionDMW)ref.getObject().getContainer());
    }

    /**
     * Sets the editObject to the specified value.
     * @param value A value compatible with ClassDefinitionREF
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1331)
    public void setEditObject(ClassDefinitionDMW value) {
        ((FormBindingDefinitionDMO) core).setEditObject(value.getDMO());
    }

    /**
     * Sets the editObject to the specified value.
     * @param value A value compatible with ClassDefinitionREF
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1340)
    public void setEditObject(Object value) throws DmcValueException {
        ((FormBindingDefinitionDMO) core).setEditObject(value);
    }

    /**
     * Removes the editObject attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1431)
    public void remEditObject(){
        ((FormBindingDefinitionDMO) core).remEditObject();
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1286)
    public Boolean isStrictlyChecked(){
        return(((FormBindingDefinitionDMO) core).isStrictlyChecked());
    }

    /**
     * Sets strictlyChecked to the specified value.
     * @param value A value compatible with DmcTypeBoolean
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1396)
    public void setStrictlyChecked(Object value) throws DmcValueException {
        ((FormBindingDefinitionDMO) core).setStrictlyChecked(value);
    }

    /**
     * Sets strictlyChecked to the specified value.
     * @param value Boolean
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1405)
    public void setStrictlyChecked(Boolean value){
        ((FormBindingDefinitionDMO) core).setStrictlyChecked(value);
    }

    /**
     * Removes the strictlyChecked attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1431)
    public void remStrictlyChecked(){
        ((FormBindingDefinitionDMO) core).remStrictlyChecked();
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1286)
    public Boolean isTipsFromI18N(){
        return(((FormBindingDefinitionDMO) core).isTipsFromI18N());
    }

    /**
     * Sets tipsFromI18N to the specified value.
     * @param value A value compatible with DmcTypeBoolean
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1396)
    public void setTipsFromI18N(Object value) throws DmcValueException {
        ((FormBindingDefinitionDMO) core).setTipsFromI18N(value);
    }

    /**
     * Sets tipsFromI18N to the specified value.
     * @param value Boolean
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1405)
    public void setTipsFromI18N(Boolean value){
        ((FormBindingDefinitionDMO) core).setTipsFromI18N(value);
    }

    /**
     * Removes the tipsFromI18N attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1431)
    public void remTipsFromI18N(){
        ((FormBindingDefinitionDMO) core).remTipsFromI18N();
    }

    /**
     * @return A I18NConfig object.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1246)
    public I18NConfig getUseI18NConfig(){
        I18NConfigREF ref = ((FormBindingDefinitionDMO) core).getUseI18NConfig();
        if (ref == null)
            return(null);
        
        if (ref.getObject() == null)
            return(null);
        
        return((I18NConfig)ref.getObject().getContainer());
    }

    /**
     * Sets the useI18NConfig to the specified value.
     * @param value A value compatible with I18NConfigREF
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1331)
    public void setUseI18NConfig(I18NConfig value) {
        ((FormBindingDefinitionDMO) core).setUseI18NConfig(value.getDMO());
    }

    /**
     * Sets the useI18NConfig to the specified value.
     * @param value A value compatible with I18NConfigREF
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1340)
    public void setUseI18NConfig(Object value) throws DmcValueException {
        ((FormBindingDefinitionDMO) core).setUseI18NConfig(value);
    }

    /**
     * Removes the useI18NConfig attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1431)
    public void remUseI18NConfig(){
        ((FormBindingDefinitionDMO) core).remUseI18NConfig();
    }


}
