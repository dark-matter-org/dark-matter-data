//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2010-2021 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.dmp.shared.generated.dmo;

import java.io.Serializable;
import org.dmd.dms.extended.ActionTriggerInfo;
import org.dmd.dmc.DmcValueExceptionSet;
// Generated from: org.dmd.dms.util.GenUtility.formatImports(GenUtility.java:408)


import org.dmd.dmc.DmcObject;
/**
 * This is the generated ActionTriggerInfo derivative for the primeEventChannel action.
 * <P>
 * Generated from the dmp schema at version 0.1
 * <P>
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoActionFormatter.dumpAction(DmoActionFormatter.java:135)
 */
@SuppressWarnings("serial")
public class PrimeEventChannelATI extends ActionTriggerInfo implements Serializable {


    public PrimeEventChannelATI(){
        super("PrimeEventChannel","primeEventChannel");
    }


    @Override
    public void checkParams() throws DmcValueExceptionSet {
        // No mandatory parameters to check
  }

    @Override
    public boolean isInstanceOf(DmcObject object) {
        if (object instanceof PrimeEventChannelATI)
            return(true);
        return(false);
    }

}
