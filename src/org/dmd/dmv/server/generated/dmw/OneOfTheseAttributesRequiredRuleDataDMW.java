//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2010 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.dmv.server.generated.dmw;

// Generated from: org.dmd.util.codegen.ImportManager.getFormattedImports(ImportManager.java:82)
// Called from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:349)
import java.util.ArrayList;                                                              // To support getMVCopy() - (BaseDMWGeneratorNewest.java:999)
import org.dmd.dmc.*;                                                                    // If any attributes - (BaseDMWGeneratorNewest.java:905)
import org.dmd.dmc.types.RuleName;                                                       // Is named by - (BaseDMWGeneratorNewest.java:884)
import org.dmd.dms.AttributeDefinition;                                                  // Is reference type - (BaseDMWGeneratorNewest.java:925)
import org.dmd.dms.ClassDefinition;                                                      // Passing derived class def up the hierarchy - (BaseDMWGeneratorNewest.java:889)
import org.dmd.dms.RuleData;                                                             // Derived class - (BaseDMWGeneratorNewest.java:1066)
import org.dmd.dms.generated.dmo.AttributeDefinitionDMO;                                 // For multi-valued adds of AttributeDefinition - (BaseDMWGeneratorNewest.java:1585)
import org.dmd.dms.generated.dmo.MetaDMSAG;                                              // Required for MODREC constructor - (BaseDMWGeneratorNewest.java:894)
import org.dmd.dms.generated.dmw.AttributeDefinitionIterableDMW;                         // For multi-valued AttributeDefinition - (BaseDMWGeneratorNewest.java:1527)
import org.dmd.dms.generated.types.DmcTypeModifierMV;                                    // Required for MODREC constructor - (BaseDMWGeneratorNewest.java:893)
import org.dmd.dmv.shared.generated.dmo.DmvDMSAG;                                        // Attribute onePossibility from the dmv schema - (BaseDMWGeneratorNewest.java:720)
import org.dmd.dmv.shared.generated.dmo.OneOfTheseAttributesRequiredRuleDataDMO;         // Class not auxiliary or abstract - (BaseDMWGeneratorNewest.java:1070)


/**
 * The OneOfTheseAttributesRequiredRule allows you to specify\n that one of
 * the possible optional attributes specified must be present\n in the object
 * being checked.\n <p/>\n If only one of the possibilities is allowed, you
 * can specify the andOnlyOne\n flag and set it to true. In this case only
 * one of the possibilities will be allowed.\n <p/>\n An example of this rule
 * can be seen below.\n <pre>\n OneOfTheseAttributesRequiredRuleData\n
 * ruleName			dmvIncludeOrExclude\n ruleTitle			At least one of the
 * excludeThisAttribute or includeThisAttribute attributes must be
 * specified.\n applyToClass		CheckAttributesBasedOnValueRuleData\n
 * onePossibility		excludeThisAttribute\n
 * onePossibility		includeThisAttribute\n </pre>
 * <P>
 * Generated from the dmv schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:366)
 */
public class OneOfTheseAttributesRequiredRuleDataDMW extends RuleData implements DmcNamedObjectIF {

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:443)
    public OneOfTheseAttributesRequiredRuleDataDMW() {
        super(new OneOfTheseAttributesRequiredRuleDataDMO(), org.dmd.dmv.server.generated.DmvSchemaAG._OneOfTheseAttributesRequiredRuleData);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:449)
    public OneOfTheseAttributesRequiredRuleDataDMW(DmcTypeModifierMV mods) {
        super(new OneOfTheseAttributesRequiredRuleDataDMO(mods), org.dmd.dmv.server.generated.DmvSchemaAG._OneOfTheseAttributesRequiredRuleData);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:500)
    public OneOfTheseAttributesRequiredRuleDataDMW getModificationRecorder(){
        OneOfTheseAttributesRequiredRuleDataDMW rc = new OneOfTheseAttributesRequiredRuleDataDMW();
        rc.setRuleName(getRuleName());
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        return(rc);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:512)
    public OneOfTheseAttributesRequiredRuleDataDMW(OneOfTheseAttributesRequiredRuleDataDMO obj) {
        super(obj, org.dmd.dmv.server.generated.DmvSchemaAG._OneOfTheseAttributesRequiredRuleData);
    }

    public OneOfTheseAttributesRequiredRuleDataDMO getDMO() {
        return((OneOfTheseAttributesRequiredRuleDataDMO) core);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:527)
    protected OneOfTheseAttributesRequiredRuleDataDMW(OneOfTheseAttributesRequiredRuleDataDMO obj, ClassDefinition cd) {
        super(obj,cd);
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.getAccessFunctions(BaseDMWGeneratorNewest.java:1115)
    public RuleName getObjectName(){
        return(((OneOfTheseAttributesRequiredRuleDataDMO) core).getRuleName());
    }

    public int hashCode(){
        return(getObjectName().hashCode());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(((OneOfTheseAttributesRequiredRuleDataDMO) core).getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof OneOfTheseAttributesRequiredRuleDataDMW){
            return( getObjectName().equals( ((OneOfTheseAttributesRequiredRuleDataDMW) obj).getObjectName()) );
        }
        return(false);
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1292)
    public Boolean isAndOnlyOne(){
        return(((OneOfTheseAttributesRequiredRuleDataDMO) core).isAndOnlyOne());
    }

    /**
     * Sets andOnlyOne to the specified value.
     * @param value A value compatible with DmcTypeBoolean
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1402)
    public void setAndOnlyOne(Object value) throws DmcValueException {
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).setAndOnlyOne(value);
    }

    /**
     * Sets andOnlyOne to the specified value.
     * @param value Boolean
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1411)
    public void setAndOnlyOne(Boolean value){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).setAndOnlyOne(value);
    }

    /**
     * Removes the andOnlyOne attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1437)
    public void remAndOnlyOne(){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).remAndOnlyOne();
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1292)
    public String getDescription(){
        return(((OneOfTheseAttributesRequiredRuleDataDMO) core).getDescription());
    }

    /**
     * Sets description to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1402)
    public void setDescription(Object value) throws DmcValueException {
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).setDescription(value);
    }

    /**
     * Sets description to the specified value.
     * @param value String
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1411)
    public void setDescription(String value){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).setDescription(value);
    }

    /**
     * Removes the description attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1437)
    public void remDescription(){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).remDescription();
    }

    /**
     * @return The number of AttributeDefinition items.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1489)
    public int getOnePossibilitySize(){
        return(((OneOfTheseAttributesRequiredRuleDataDMO) core).getOnePossibilitySize());
    }

    /**
     * @return true if there are no AttributeDefinitionDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1497)
    public boolean getOnePossibilityIsEmpty(){
        if (((OneOfTheseAttributesRequiredRuleDataDMO) core).getOnePossibilitySize() == 0)
            return(true);
        return(false);
    }

    /**
     * @return true if there are any AttributeDefinitionDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1507)
    public boolean getOnePossibilityHasValue(){
        if (((OneOfTheseAttributesRequiredRuleDataDMO) core).getOnePossibilitySize() == 0)
            return(false);
        return(true);
    }

    /**
     * @return An Iterator of AttributeDefinitionDMO objects.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1534)
    public AttributeDefinitionIterableDMW getOnePossibilityIterable(){
        DmcAttribute<?> attr = core.get(DmvDMSAG.__onePossibility);
        if (attr == null)
            return(AttributeDefinitionIterableDMW.emptyList);
        
        return(new AttributeDefinitionIterableDMW(((OneOfTheseAttributesRequiredRuleDataDMO) core).getOnePossibility()));
    }

    /**
     * Adds another onePossibility value.
     * @param value A value compatible with AttributeDefinition
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1591)
    public DmcAttribute<?> addOnePossibility(AttributeDefinition value){
        DmcAttribute<?> attr = ((OneOfTheseAttributesRequiredRuleDataDMO) core).addOnePossibility(((AttributeDefinitionDMO)value.getDmcObject()));
        return(attr);
    }

    /**
     * Deletes a onePossibility value.
     * @param value The AttributeDefinition to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1641)
    public void delOnePossibility(AttributeDefinition value){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).delOnePossibility(value.getDMO());
    }

    /**
     * @return A COPY of the collection of AttributeDefinition objects.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:1703)
    public ArrayList<AttributeDefinition> getOnePossibilityCopy(){
        DmcAttribute<?> attr = ((OneOfTheseAttributesRequiredRuleDataDMO) core).get(DmvDMSAG.__onePossibility);
        if (attr == null)
            return(new ArrayList<AttributeDefinition>());
        
        ArrayList<AttributeDefinition> rc = new ArrayList<AttributeDefinition>(attr.getMVSize());
        
        AttributeDefinitionIterableDMW it = getOnePossibilityIterable();
        while(it.hasNext()){
            rc.add(it.next());
        }
        
        return(rc);
    }

    /**
     * Removes the onePossibility attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatMV(BaseDMWGeneratorNewest.java:2106)
    public void remOnePossibility(){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).remOnePossibility();
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1292)
    public RuleName getRuleName(){
        return(((OneOfTheseAttributesRequiredRuleDataDMO) core).getRuleName());
    }

    /**
     * Sets ruleName to the specified value.
     * @param value A value compatible with DmcTypeRuleName
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1402)
    public void setRuleName(Object value) throws DmcValueException {
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).setRuleName(value);
    }

    /**
     * Sets ruleName to the specified value.
     * @param value RuleName
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1411)
    public void setRuleName(RuleName value){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).setRuleName(value);
    }

    /**
     * Removes the ruleName attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1437)
    public void remRuleName(){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).remRuleName();
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1292)
    public String getRuleTitle(){
        return(((OneOfTheseAttributesRequiredRuleDataDMO) core).getRuleTitle());
    }

    /**
     * Sets ruleTitle to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1402)
    public void setRuleTitle(Object value) throws DmcValueException {
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).setRuleTitle(value);
    }

    /**
     * Sets ruleTitle to the specified value.
     * @param value String
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1411)
    public void setRuleTitle(String value){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).setRuleTitle(value);
    }

    /**
     * Removes the ruleTitle attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1437)
    public void remRuleTitle(){
        ((OneOfTheseAttributesRequiredRuleDataDMO) core).remRuleTitle();
    }


}
