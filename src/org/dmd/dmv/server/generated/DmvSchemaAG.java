//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2010 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.dmv.server.generated;

import org.dmd.dmc.DmcOmni;
import org.dmd.dmc.DmcValueException;
import org.dmd.dms.*;
import org.dmd.dms.generated.dmo.*;
import org.dmd.dmv.shared.generated.dmo.DmvDMSAG;


/**
 * The dmv schema defines classes associated with the Dark Matter Validation
 * (DMV) framework based on RuleDefinitions. Although you are completely free
 * to define your own rules, DMV provides a collection of commonly useful
 * rules taht can be used in a DMO run context.
 * <P>
 * Generated from the dmv schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:169)
 */
public class DmvSchemaAG extends SchemaDefinition {

    public static ClassDefinition _AllowedAttributesRuleData;
    public static ClassDefinition _InitRuleData;
    public static ClassDefinition _IntegerRangeRuleData;
    public static ClassDefinition _UCOAllowedAttributesRuleData;
    public static ClassDefinition _AttributeTypeRuleData;
    public static ClassDefinition _RelatedNumbersRuleData;
    public static ClassDefinition _CheckAttributesBasedOnValueRuleData;

    public static AttributeDefinition _irrMinimum;
    public static AttributeDefinition _irrMaximum;
    public static AttributeDefinition _numericRelation;
    public static AttributeDefinition _lhs;
    public static AttributeDefinition _rhs;
    public static AttributeDefinition _allowedType;
    public static AttributeDefinition _basedOnAttribute;
    public static AttributeDefinition _basedOnValue;
    public static AttributeDefinition _excludeThisAttribute;
    public static AttributeDefinition _includeThisAttribute;



    public static EnumDefinition _NumericRelationEnum;

    public static RuleDefinition _AllowedAttributesRule;
    public static RuleDefinition _InitRule;
    public static RuleDefinition _IntegerRangeRule;
    public static RuleDefinition _UCOAllowedAttributesRule;
    public static RuleDefinition _AttributeTypeRule;
    public static RuleDefinition _RelatedNumbersRule;
    public static RuleDefinition _CheckAttributesBasedOnValueRule;

    static DmvSchemaAG instance;

    public DmvSchemaAG() throws DmcValueException {
        generatedSchema = true;
        staticRefName   = "org.dmd.dmv.server.generated.DmvSchemaAG";

    }

    private void initialize() throws DmcValueException {
        if (instance == null){
            instance        = this;
            SchemaDefinitionDMO me = (SchemaDefinitionDMO) this.getDmcObject();
            me.setName("dmv");
            me.setSchemaPackage("org.dmd.dmv.shared");
            me.setDmwPackage("org.dmd.dmv.server");
            me.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/dmv.dms");

            initClasses();
            initAttributes1();
            initTypes();
            initActions();
            initEnums();
            initRules();
            DmcOmni.instance().addCompactSchema(DmvDMSAG.instance());
        }
    }

    private void initClasses() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            ClassDefinitionDMO _AllowedAttributesRuleDataOBJ = new ClassDefinitionDMO();
            _AllowedAttributesRuleData = new ClassDefinition(_AllowedAttributesRuleDataOBJ,DmvDMSAG.__AllowedAttributesRuleData);
            _AllowedAttributesRuleDataOBJ.setName("AllowedAttributesRuleData");
            _AllowedAttributesRuleDataOBJ.setDmdID("-959999");
            _AllowedAttributesRuleDataOBJ.setInternallyGenerated("true");
            _AllowedAttributesRuleDataOBJ.setClassType("STRUCTURAL");
            _AllowedAttributesRuleDataOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _AllowedAttributesRuleDataOBJ.setLineNumber("19");
            _AllowedAttributesRuleDataOBJ.setDerivedFrom("RuleData");
            _AllowedAttributesRuleDataOBJ.setDmtREFImport("org.dmd.dmv.shared.generated.types.AllowedAttributesRuleDataREF");
            _AllowedAttributesRuleDataOBJ.setRuleDefinition("AllowedAttributesRule");
            _AllowedAttributesRuleDataOBJ.setDmwIteratorClass("AllowedAttributesRuleDataIterableDMW");
            _AllowedAttributesRuleDataOBJ.addMay("description");
            _AllowedAttributesRuleDataOBJ.addMay("applyToClass");
            _AllowedAttributesRuleDataOBJ.addMust("ruleName");
            _AllowedAttributesRuleDataOBJ.addMust("ruleTitle");
            _AllowedAttributesRuleDataOBJ.setDmwIteratorImport("org.dmd.dmv.server.generated.dmw.AllowedAttributesRuleDataIterableDMW");
            _AllowedAttributesRuleData.setDefinedIn(this);
            addClassDefList(_AllowedAttributesRuleData);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            ClassDefinitionDMO _InitRuleDataOBJ = new ClassDefinitionDMO();
            _InitRuleData = new ClassDefinition(_InitRuleDataOBJ,DmvDMSAG.__InitRuleData);
            _InitRuleDataOBJ.setName("InitRuleData");
            _InitRuleDataOBJ.setDmdID("-959998");
            _InitRuleDataOBJ.setInternallyGenerated("true");
            _InitRuleDataOBJ.setClassType("EXTENSIBLE");
            _InitRuleDataOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _InitRuleDataOBJ.setLineNumber("50");
            _InitRuleDataOBJ.setDerivedFrom("RuleData");
            _InitRuleDataOBJ.setDmtREFImport("org.dmd.dmv.shared.generated.types.InitRuleDataREF");
            _InitRuleDataOBJ.setRuleDefinition("InitRule");
            _InitRuleDataOBJ.setDmwIteratorClass("InitRuleDataIterableDMW");
            _InitRuleDataOBJ.addMay("description");
            _InitRuleDataOBJ.addMay("applyToClass");
            _InitRuleDataOBJ.addMust("ruleName");
            _InitRuleDataOBJ.addMust("ruleTitle");
            _InitRuleDataOBJ.setDmwIteratorImport("org.dmd.dmv.server.generated.dmw.InitRuleDataIterableDMW");
            _InitRuleData.setDefinedIn(this);
            addClassDefList(_InitRuleData);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            ClassDefinitionDMO _IntegerRangeRuleDataOBJ = new ClassDefinitionDMO();
            _IntegerRangeRuleData = new ClassDefinition(_IntegerRangeRuleDataOBJ,DmvDMSAG.__IntegerRangeRuleData);
            _IntegerRangeRuleDataOBJ.setName("IntegerRangeRuleData");
            _IntegerRangeRuleDataOBJ.setDmdID("-959997");
            _IntegerRangeRuleDataOBJ.setInternallyGenerated("true");
            _IntegerRangeRuleDataOBJ.setClassType("STRUCTURAL");
            _IntegerRangeRuleDataOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _IntegerRangeRuleDataOBJ.setLineNumber("75");
            _IntegerRangeRuleDataOBJ.setDerivedFrom("RuleData");
            _IntegerRangeRuleDataOBJ.setDmtREFImport("org.dmd.dmv.shared.generated.types.IntegerRangeRuleDataREF");
            _IntegerRangeRuleDataOBJ.setRuleDefinition("IntegerRangeRule");
            _IntegerRangeRuleDataOBJ.setDmwIteratorClass("IntegerRangeRuleDataIterableDMW");
            _IntegerRangeRuleDataOBJ.addMay("description");
            _IntegerRangeRuleDataOBJ.addMay("applyToClass");
            _IntegerRangeRuleDataOBJ.addMust("ruleName");
            _IntegerRangeRuleDataOBJ.addMust("ruleTitle");
            _IntegerRangeRuleDataOBJ.addMust("irrMinimum");
            _IntegerRangeRuleDataOBJ.addMust("irrMaximum");
            _IntegerRangeRuleDataOBJ.setDmwIteratorImport("org.dmd.dmv.server.generated.dmw.IntegerRangeRuleDataIterableDMW");
            _IntegerRangeRuleData.setDefinedIn(this);
            addClassDefList(_IntegerRangeRuleData);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            ClassDefinitionDMO _UCOAllowedAttributesRuleDataOBJ = new ClassDefinitionDMO();
            _UCOAllowedAttributesRuleData = new ClassDefinition(_UCOAllowedAttributesRuleDataOBJ,DmvDMSAG.__UCOAllowedAttributesRuleData);
            _UCOAllowedAttributesRuleDataOBJ.setName("UCOAllowedAttributesRuleData");
            _UCOAllowedAttributesRuleDataOBJ.setDmdID("-959996");
            _UCOAllowedAttributesRuleDataOBJ.setInternallyGenerated("true");
            _UCOAllowedAttributesRuleDataOBJ.setClassType("STRUCTURAL");
            _UCOAllowedAttributesRuleDataOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _UCOAllowedAttributesRuleDataOBJ.setLineNumber("87");
            _UCOAllowedAttributesRuleDataOBJ.setDerivedFrom("RuleData");
            _UCOAllowedAttributesRuleDataOBJ.setDmtREFImport("org.dmd.dmv.shared.generated.types.UCOAllowedAttributesRuleDataREF");
            _UCOAllowedAttributesRuleDataOBJ.setRuleDefinition("UCOAllowedAttributesRule");
            _UCOAllowedAttributesRuleDataOBJ.setDmwIteratorClass("UCOAllowedAttributesRuleDataIterableDMW");
            _UCOAllowedAttributesRuleDataOBJ.addMay("description");
            _UCOAllowedAttributesRuleDataOBJ.addMay("applyToClass");
            _UCOAllowedAttributesRuleDataOBJ.addMust("ruleName");
            _UCOAllowedAttributesRuleDataOBJ.addMust("ruleTitle");
            _UCOAllowedAttributesRuleDataOBJ.setDmwIteratorImport("org.dmd.dmv.server.generated.dmw.UCOAllowedAttributesRuleDataIterableDMW");
            _UCOAllowedAttributesRuleData.setDefinedIn(this);
            addClassDefList(_UCOAllowedAttributesRuleData);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            ClassDefinitionDMO _AttributeTypeRuleDataOBJ = new ClassDefinitionDMO();
            _AttributeTypeRuleData = new ClassDefinition(_AttributeTypeRuleDataOBJ,DmvDMSAG.__AttributeTypeRuleData);
            _AttributeTypeRuleDataOBJ.setName("AttributeTypeRuleData");
            _AttributeTypeRuleDataOBJ.setDmdID("-959995");
            _AttributeTypeRuleDataOBJ.setInternallyGenerated("true");
            _AttributeTypeRuleDataOBJ.setClassType("STRUCTURAL");
            _AttributeTypeRuleDataOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _AttributeTypeRuleDataOBJ.setLineNumber("99");
            _AttributeTypeRuleDataOBJ.setDerivedFrom("RuleData");
            _AttributeTypeRuleDataOBJ.setDmtREFImport("org.dmd.dmv.shared.generated.types.AttributeTypeRuleDataREF");
            _AttributeTypeRuleDataOBJ.setRuleDefinition("AttributeTypeRule");
            _AttributeTypeRuleDataOBJ.setDmwIteratorClass("AttributeTypeRuleDataIterableDMW");
            _AttributeTypeRuleDataOBJ.addMay("description");
            _AttributeTypeRuleDataOBJ.addMay("applyToClass");
            _AttributeTypeRuleDataOBJ.addMust("ruleName");
            _AttributeTypeRuleDataOBJ.addMust("ruleTitle");
            _AttributeTypeRuleDataOBJ.addMust("allowedType");
            _AttributeTypeRuleDataOBJ.setDmwIteratorImport("org.dmd.dmv.server.generated.dmw.AttributeTypeRuleDataIterableDMW");
            _AttributeTypeRuleData.setDefinedIn(this);
            addClassDefList(_AttributeTypeRuleData);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            ClassDefinitionDMO _RelatedNumbersRuleDataOBJ = new ClassDefinitionDMO();
            _RelatedNumbersRuleData = new ClassDefinition(_RelatedNumbersRuleDataOBJ,DmvDMSAG.__RelatedNumbersRuleData);
            _RelatedNumbersRuleDataOBJ.setName("RelatedNumbersRuleData");
            _RelatedNumbersRuleDataOBJ.setDmdID("-959994");
            _RelatedNumbersRuleDataOBJ.setInternallyGenerated("true");
            _RelatedNumbersRuleDataOBJ.setClassType("STRUCTURAL");
            _RelatedNumbersRuleDataOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _RelatedNumbersRuleDataOBJ.setLineNumber("124");
            _RelatedNumbersRuleDataOBJ.setDerivedFrom("RuleData");
            _RelatedNumbersRuleDataOBJ.setDmtREFImport("org.dmd.dmv.shared.generated.types.RelatedNumbersRuleDataREF");
            _RelatedNumbersRuleDataOBJ.setRuleDefinition("RelatedNumbersRule");
            _RelatedNumbersRuleDataOBJ.setDmwIteratorClass("RelatedNumbersRuleDataIterableDMW");
            _RelatedNumbersRuleDataOBJ.addMay("description");
            _RelatedNumbersRuleDataOBJ.addMay("applyToClass");
            _RelatedNumbersRuleDataOBJ.addMust("ruleName");
            _RelatedNumbersRuleDataOBJ.addMust("ruleTitle");
            _RelatedNumbersRuleDataOBJ.addMust("lhs");
            _RelatedNumbersRuleDataOBJ.addMust("rhs");
            _RelatedNumbersRuleDataOBJ.addMust("numericRelation");
            _RelatedNumbersRuleDataOBJ.setDmwIteratorImport("org.dmd.dmv.server.generated.dmw.RelatedNumbersRuleDataIterableDMW");
            _RelatedNumbersRuleData.setDefinedIn(this);
            addClassDefList(_RelatedNumbersRuleData);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            ClassDefinitionDMO _CheckAttributesBasedOnValueRuleDataOBJ = new ClassDefinitionDMO();
            _CheckAttributesBasedOnValueRuleData = new ClassDefinition(_CheckAttributesBasedOnValueRuleDataOBJ,DmvDMSAG.__CheckAttributesBasedOnValueRuleData);
            _CheckAttributesBasedOnValueRuleDataOBJ.setName("CheckAttributesBasedOnValueRuleData");
            _CheckAttributesBasedOnValueRuleDataOBJ.setDmdID("-959993");
            _CheckAttributesBasedOnValueRuleDataOBJ.setInternallyGenerated("true");
            _CheckAttributesBasedOnValueRuleDataOBJ.setClassType("STRUCTURAL");
            _CheckAttributesBasedOnValueRuleDataOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _CheckAttributesBasedOnValueRuleDataOBJ.setLineNumber("169");
            _CheckAttributesBasedOnValueRuleDataOBJ.setDerivedFrom("RuleData");
            _CheckAttributesBasedOnValueRuleDataOBJ.setDmtREFImport("org.dmd.dmv.shared.generated.types.CheckAttributesBasedOnValueRuleDataREF");
            _CheckAttributesBasedOnValueRuleDataOBJ.setRuleDefinition("CheckAttributesBasedOnValueRule");
            _CheckAttributesBasedOnValueRuleDataOBJ.setDmwIteratorClass("CheckAttributesBasedOnValueRuleDataIterableDMW");
            _CheckAttributesBasedOnValueRuleDataOBJ.addMay("description");
            _CheckAttributesBasedOnValueRuleDataOBJ.addMay("applyToClass");
            _CheckAttributesBasedOnValueRuleDataOBJ.addMust("ruleName");
            _CheckAttributesBasedOnValueRuleDataOBJ.addMust("ruleTitle");
            _CheckAttributesBasedOnValueRuleDataOBJ.addMust("basedOnAttribute");
            _CheckAttributesBasedOnValueRuleDataOBJ.addMust("basedOnValue");
            _CheckAttributesBasedOnValueRuleDataOBJ.addMust("excludeThisAttribute");
            _CheckAttributesBasedOnValueRuleDataOBJ.setDmwIteratorImport("org.dmd.dmv.server.generated.dmw.CheckAttributesBasedOnValueRuleDataIterableDMW");
            _CheckAttributesBasedOnValueRuleData.setDefinedIn(this);
            addClassDefList(_CheckAttributesBasedOnValueRuleData);

    }

    private void initAttributes1() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _irrMinimumOBJ = new AttributeDefinitionDMO();
            _irrMinimum = new AttributeDefinition(_irrMinimumOBJ);
            _irrMinimumOBJ.setType("Integer");
            _irrMinimumOBJ.setName("irrMinimum");
            _irrMinimumOBJ.setDmdID("-479999");
            _irrMinimumOBJ.setDescription("The minimum integer value.");
            _irrMinimum.setDefinedIn(this);
            _irrMinimumOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _irrMinimumOBJ.setLineNumber("6");
            addAttributeDefList(_irrMinimum);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _irrMaximumOBJ = new AttributeDefinitionDMO();
            _irrMaximum = new AttributeDefinition(_irrMaximumOBJ);
            _irrMaximumOBJ.setType("Integer");
            _irrMaximumOBJ.setName("irrMaximum");
            _irrMaximumOBJ.setDmdID("-479998");
            _irrMaximumOBJ.setDescription("The maximum integer value.");
            _irrMaximum.setDefinedIn(this);
            _irrMaximumOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _irrMaximumOBJ.setLineNumber("12");
            addAttributeDefList(_irrMaximum);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _numericRelationOBJ = new AttributeDefinitionDMO();
            _numericRelation = new AttributeDefinition(_numericRelationOBJ);
            _numericRelationOBJ.setType("NumericRelationEnum");
            _numericRelationOBJ.setName("numericRelation");
            _numericRelationOBJ.setDmdID("-479997");
            _numericRelationOBJ.setDescription("The relationship between numeric values.");
            _numericRelation.setDefinedIn(this);
            _numericRelationOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _numericRelationOBJ.setLineNumber("18");
            addAttributeDefList(_numericRelation);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _lhsOBJ = new AttributeDefinitionDMO();
            _lhs = new AttributeDefinition(_lhsOBJ);
            _lhsOBJ.setType("AttributeDefinition");
            _lhsOBJ.setName("lhs");
            _lhsOBJ.setDmdID("-479996");
            _lhsOBJ.setDescription("The attribute to be used as the left hand side of some relationship. The type of the attribute referred to may differ from one rule to the next depending on the relationship being tested.");
            _lhs.setDefinedIn(this);
            _lhsOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _lhsOBJ.setLineNumber("26");
            addAttributeDefList(_lhs);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _rhsOBJ = new AttributeDefinitionDMO();
            _rhs = new AttributeDefinition(_rhsOBJ);
            _rhsOBJ.setType("AttributeDefinition");
            _rhsOBJ.setName("rhs");
            _rhsOBJ.setDmdID("-479995");
            _rhsOBJ.setDescription("The attribute to be used as the right hand side of some relationship. The type of the attribute referred to may differ from one rule to the next depending on the relationship being tested.");
            _rhs.setDefinedIn(this);
            _rhsOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _rhsOBJ.setLineNumber("34");
            addAttributeDefList(_rhs);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _allowedTypeOBJ = new AttributeDefinitionDMO();
            _allowedType = new AttributeDefinition(_allowedTypeOBJ);
            _allowedTypeOBJ.setType("TypeDefinition");
            _allowedTypeOBJ.setName("allowedType");
            _allowedTypeOBJ.setDmdID("-479994");
            _allowedTypeOBJ.setDescription("The allowedType indicates a collection of defined types to which something, usually and attribute, must conform.");
            _allowedTypeOBJ.setValueType("MULTI");
            _allowedType.setDefinedIn(this);
            _allowedTypeOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _allowedTypeOBJ.setLineNumber("42");
            addAttributeDefList(_allowedType);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _basedOnAttributeOBJ = new AttributeDefinitionDMO();
            _basedOnAttribute = new AttributeDefinition(_basedOnAttributeOBJ);
            _basedOnAttributeOBJ.setType("AttributeDefinition");
            _basedOnAttributeOBJ.setName("basedOnAttribute");
            _basedOnAttributeOBJ.setDmdID("-479993");
            _basedOnAttributeOBJ.setDescription("The basedOnAttribute allows for the specification of an attribute on which some type of a decision is made.");
            _basedOnAttribute.setDefinedIn(this);
            _basedOnAttributeOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _basedOnAttributeOBJ.setLineNumber("49");
            addAttributeDefList(_basedOnAttribute);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _basedOnValueOBJ = new AttributeDefinitionDMO();
            _basedOnValue = new AttributeDefinition(_basedOnValueOBJ);
            _basedOnValueOBJ.setType("String");
            _basedOnValueOBJ.setName("basedOnValue");
            _basedOnValueOBJ.setDmdID("-479992");
            _basedOnValueOBJ.setDescription("The basedOnValue attribute allows for the specification of values for some aspect of a rule.");
            _basedOnValueOBJ.setValueType("MULTI");
            _basedOnValue.setDefinedIn(this);
            _basedOnValueOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _basedOnValueOBJ.setLineNumber("57");
            addAttributeDefList(_basedOnValue);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _excludeThisAttributeOBJ = new AttributeDefinitionDMO();
            _excludeThisAttribute = new AttributeDefinition(_excludeThisAttributeOBJ);
            _excludeThisAttributeOBJ.setType("AttributeDefinition");
            _excludeThisAttributeOBJ.setName("excludeThisAttribute");
            _excludeThisAttributeOBJ.setDmdID("-479991");
            _excludeThisAttributeOBJ.setDescription("The excludeThisAttribute indicates an optional attribute that must be excluded from an object under certain conditions.");
            _excludeThisAttributeOBJ.setValueType("MULTI");
            _excludeThisAttribute.setDefinedIn(this);
            _excludeThisAttributeOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _excludeThisAttributeOBJ.setLineNumber("65");
            addAttributeDefList(_excludeThisAttribute);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            AttributeDefinitionDMO _includeThisAttributeOBJ = new AttributeDefinitionDMO();
            _includeThisAttribute = new AttributeDefinition(_includeThisAttributeOBJ);
            _includeThisAttributeOBJ.setType("AttributeDefinition");
            _includeThisAttributeOBJ.setName("includeThisAttribute");
            _includeThisAttributeOBJ.setDmdID("-479990");
            _includeThisAttributeOBJ.setDescription("The includeThisAttribute indicates an optional attribute that must be present under certain conditions.");
            _includeThisAttributeOBJ.setValueType("MULTI");
            _includeThisAttribute.setDefinedIn(this);
            _includeThisAttributeOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/attributes.dmd");
            _includeThisAttributeOBJ.setLineNumber("73");
            addAttributeDefList(_includeThisAttribute);

    }

    private void initTypes() throws DmcValueException {
    }

    private void initActions() throws DmcValueException {
    }

    private void initEnums() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            EnumDefinitionDMO _NumericRelationEnumOBJ = new EnumDefinitionDMO();
            _NumericRelationEnum = new EnumDefinition(_NumericRelationEnumOBJ);
            _NumericRelationEnumOBJ.setName("NumericRelationEnum");
            _NumericRelationEnumOBJ.addEnumValue("0 EQUALS Equals : EQ");
            _NumericRelationEnumOBJ.addEnumValue("1 GT Greater than : GT");
            _NumericRelationEnumOBJ.addEnumValue("2 LT Less than : LT");
            _NumericRelationEnumOBJ.addEnumValue("3 NE Not equal : NE");
            _NumericRelationEnumOBJ.addEnumValue("4 GTE Greater than or equal to : GTE");
            _NumericRelationEnumOBJ.addEnumValue("5 LTE Less than or equal to : LTE");
            _NumericRelationEnumOBJ.setDescription("The NumericRelationEnum is used to specify the relationship that should exist between two numeric values.");
            _NumericRelationEnum.setDefinedIn(this);
            _NumericRelationEnumOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/types.dmd");
            _NumericRelationEnumOBJ.setLineNumber("10");
            addEnumDefList(_NumericRelationEnum);

    }

    private void initRules() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            RuleDefinitionDMO _AllowedAttributesRuleOBJ = new RuleDefinitionDMO();
            _AllowedAttributesRule = new RuleDefinition(_AllowedAttributesRuleOBJ);
            _AllowedAttributesRuleOBJ.setRuleType("CLASS");
            _AllowedAttributesRuleOBJ.addRuleCategory("ObjectValidation");
            _AllowedAttributesRuleOBJ.addRuleCategory("ModifierValidation");
            _AllowedAttributesRuleOBJ.setName("AllowedAttributesRule");
            _AllowedAttributesRuleOBJ.setDmdID("-479999");
            _AllowedAttributesRuleOBJ.setDescription("The AllowedAttributesRule will determine whether or not the  attributes of a DMO conform to the must/may specification of its class definition. For classes of type EXTENSIBLE only the must have attributes are checked. <p/> Regardless of the environment in which you are running, you must ensure that the DmcOmni has been loaded with the appropriate schema. If you are using the Dark Matter Model View Whatever (MVW) project for GWT, this aspect is taken care of automatically. <p/> Since this is a GLOBAL class rule, there will only ever be a single instance of this rule created as part of the dmv schema.");
            _AllowedAttributesRule.setDefinedIn(this);
            _AllowedAttributesRuleOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _AllowedAttributesRuleOBJ.setLineNumber("19");
            addRuleDefinitionList(_AllowedAttributesRule);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            RuleDefinitionDMO _InitRuleOBJ = new RuleDefinitionDMO();
            _InitRule = new RuleDefinition(_InitRuleOBJ);
            _InitRuleOBJ.setRuleType("CLASS");
            _InitRuleOBJ.addRuleCategory("Initialization");
            _InitRuleOBJ.setName("InitRule");
            _InitRuleOBJ.setDmdID("-479998");
            _InitRuleOBJ.setDescription("The InitRule allows you to specify attribute values for a  newly created object or an object read from file or received in a CreateRequest (for instance). The InitRule will only set the values of attributes that are missing from the object; existing attributes are not alterred. An example usage might be: <p/> <pre> InitRuleData ruleName     <schema>InitX ruleTitle    Initialize the X class applyToClass X attributeA   some value attributeB   42 attributeC   something attributeC   something else description  This provides a good initial setup for X objects. Other setups  may be required in other circumstances. </pre>");
            _InitRuleOBJ.setIsExtensible("true");
            _InitRule.setDefinedIn(this);
            _InitRuleOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _InitRuleOBJ.setLineNumber("50");
            addRuleDefinitionList(_InitRule);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            RuleDefinitionDMO _IntegerRangeRuleOBJ = new RuleDefinitionDMO();
            _IntegerRangeRule = new RuleDefinition(_IntegerRangeRuleOBJ);
            _IntegerRangeRuleOBJ.setRuleType("ATTRIBUTE");
            _IntegerRangeRuleOBJ.addRuleCategory("AttributeValidation");
            _IntegerRangeRuleOBJ.addRuleCategory("ModifierValidation");
            _IntegerRangeRuleOBJ.setName("IntegerRangeRule");
            _IntegerRangeRuleOBJ.setDmdID("-479997");
            _IntegerRangeRuleOBJ.setDescription("The IntegerRangeRule ensures that an Integer attribute has a value that falls within a given range. The irrMinimum must be less than the irrMaximum. An example usage might be: <p/> <pre> IntegerRangeRuleData ruleName         <schema>RangeCheckY ruleTitle        Attribute Y in range 1-10 applyToAttribute Y irrMinimum       1 irrMaximum       10 description      This constraint is required because blah, blah blah. </pre>");
            _IntegerRangeRuleOBJ.addMust("irrMinimum");
            _IntegerRangeRuleOBJ.addMust("irrMaximum");
            _IntegerRangeRule.setDefinedIn(this);
            _IntegerRangeRuleOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _IntegerRangeRuleOBJ.setLineNumber("75");
            addRuleDefinitionList(_IntegerRangeRule);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            RuleDefinitionDMO _UCOAllowedAttributesRuleOBJ = new RuleDefinitionDMO();
            _UCOAllowedAttributesRule = new RuleDefinition(_UCOAllowedAttributesRuleOBJ);
            _UCOAllowedAttributesRuleOBJ.setRuleType("CLASS");
            _UCOAllowedAttributesRuleOBJ.addRuleCategory("UCOValidation");
            _UCOAllowedAttributesRuleOBJ.setName("UCOAllowedAttributesRule");
            _UCOAllowedAttributesRuleOBJ.setDmdID("-479996");
            _UCOAllowedAttributesRuleOBJ.setDescription("The UCOAllowedAttributesRule will determine whether or not the  attributes of a DmcUncheckedObject conform to the must/may specification of its class definition. For classes of type EXTENSIBLE only the must have attributes are checked.");
            _UCOAllowedAttributesRule.setDefinedIn(this);
            _UCOAllowedAttributesRuleOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _UCOAllowedAttributesRuleOBJ.setLineNumber("87");
            addRuleDefinitionList(_UCOAllowedAttributesRule);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            RuleDefinitionDMO _AttributeTypeRuleOBJ = new RuleDefinitionDMO();
            _AttributeTypeRule = new RuleDefinition(_AttributeTypeRuleOBJ);
            _AttributeTypeRuleOBJ.setRuleType("ATTRIBUTE");
            _AttributeTypeRuleOBJ.addRuleCategory("AttributeValidation");
            _AttributeTypeRuleOBJ.setName("AttributeTypeRule");
            _AttributeTypeRuleOBJ.setDmdID("-479995");
            _AttributeTypeRuleOBJ.setDescription("The AttributeTypeRule allowes you to restrict the type of an attribute of a particular AttributeDefinition reference.");
            _AttributeTypeRuleOBJ.addMust("allowedType");
            _AttributeTypeRule.setDefinedIn(this);
            _AttributeTypeRuleOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _AttributeTypeRuleOBJ.setLineNumber("99");
            addRuleDefinitionList(_AttributeTypeRule);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            RuleDefinitionDMO _RelatedNumbersRuleOBJ = new RuleDefinitionDMO();
            _RelatedNumbersRule = new RuleDefinition(_RelatedNumbersRuleOBJ);
            _RelatedNumbersRuleOBJ.setRuleType("CLASS");
            _RelatedNumbersRuleOBJ.addRuleCategory("ObjectValidation");
            _RelatedNumbersRuleOBJ.setName("RelatedNumbersRule");
            _RelatedNumbersRuleOBJ.setDmdID("-479994");
            _RelatedNumbersRuleOBJ.setDescription("The RelatedNumbersRule ensures that a particular numeric relationship exists between two single-valued, numeric values on an object. An example usage might be: <pre> RelatedNumbersRuleData ruleName        dmvHeightGirth ruleTitle       Your height must exceed your girth. applyToClass    Person lhs             height rhs             girth numericRelation GT description     If your girth exceeds your height, you're in trouble! </pre>");
            _RelatedNumbersRuleOBJ.addMust("lhs");
            _RelatedNumbersRuleOBJ.addMust("rhs");
            _RelatedNumbersRuleOBJ.addMust("numericRelation");
            _RelatedNumbersRule.setDefinedIn(this);
            _RelatedNumbersRuleOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _RelatedNumbersRuleOBJ.setLineNumber("124");
            addRuleDefinitionList(_RelatedNumbersRule);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:520)
            RuleDefinitionDMO _CheckAttributesBasedOnValueRuleOBJ = new RuleDefinitionDMO();
            _CheckAttributesBasedOnValueRule = new RuleDefinition(_CheckAttributesBasedOnValueRuleOBJ);
            _CheckAttributesBasedOnValueRuleOBJ.setRuleType("CLASS");
            _CheckAttributesBasedOnValueRuleOBJ.addRuleCategory("ObjectValidation");
            _CheckAttributesBasedOnValueRuleOBJ.setName("CheckAttributesBasedOnValueRule");
            _CheckAttributesBasedOnValueRuleOBJ.setDmdID("-479993");
            _CheckAttributesBasedOnValueRuleOBJ.setDescription("The CheckAttributesBasedOnValueRule allows you to specify that certain optional attributes must exist (or not exist) based on the value of another attribute in an object. an object based on the setting of a particular enumerated attribute. This allows for finer control of must/may attributes based on enumerated values in an object. An example usage might look like: <pre> CheckAttributesBasedOnValueRuleData ruleName             <schema>ExcludeSunRoof ruleTitle            The sun roof option is not avilable on four cyclinder vehicles. applyToClass         Car basedOnAttribute     engineType basedOnValue         FOURCYLINDER excludeThisAttribute sunRoofOption </pre>");
            _CheckAttributesBasedOnValueRuleOBJ.addMust("basedOnAttribute");
            _CheckAttributesBasedOnValueRuleOBJ.addMust("basedOnValue");
            _CheckAttributesBasedOnValueRuleOBJ.addMust("excludeThisAttribute");
            _CheckAttributesBasedOnValueRule.setDefinedIn(this);
            _CheckAttributesBasedOnValueRuleOBJ.setFile("/src/org/dmd/dmv/shared/dmdconfig/v0dot1/rules.dmd");
            _CheckAttributesBasedOnValueRuleOBJ.setLineNumber("169");
            addRuleDefinitionList(_CheckAttributesBasedOnValueRule);

    }


    @Override
    public synchronized DmvSchemaAG getInstance() throws DmcValueException{
    	   if (instance == null)
    		   initialize();
    	   return(instance);
    }
}

