ComplexTypeDefinition
name MenuElementTypeAndComment
fieldSeparator :
field String type    The name of this implementation.
field String comment The class used to implement the required behaviour.
description The MenuElementTypeAndComment type is used to indicate the strings that map to 
 various menu and menu item implementations supported by a a particular menu implementation.

ComplexTypeDefinition
name			DmtField
// fieldSeparator - no separator, so space is used
field			TypeDefinition		type        The type of the field
field			String         		name        The name of the field
field			String         	description The description of the field
description     The DmtField complex type is used to test generation of 
 complex types that contain object references.

ComplexTypeDefinition
name			DmtOptionalValueFieldWithSpaces
// fieldSeparator - no separator, so space is used
requiredPart	TypeDefinition		type        "The type of the field"
requiredPart	String         		name        "The name of the field"
optionalPart	String         	description 	"The description of the field" quoted=true
optionalPart	TypeDefinition		otherType	"An optional object reference"
//mandatoryFields 2
description     The DmtOptionalValueFieldWithSpaces complex type is used to test generation of 
 complex types that use spaces as separators and have optional values

ComplexTypeDefinition
name			DmtOptionalValueFieldWithColons
fieldSeparator  :
requiredPart	TypeDefinition		type        "The type of the field"
requiredPart	String         		name        "The name of the field"
optionalPart	String         	description     "The description of the field" quoted=true
//mandatoryFields 2
description     The DmtOptionalValueFieldWithSpaces complex type is used to test generation of 
 complex types that use spaces as separators and have optional values

ComplexTypeDefinition
name			DmtMultiValuedRequiredPartWithReferences
requiredPart	TypeDefinition		type        "A bunch of types" multivalued=true
description		Originally, multivalued was only applicable to optional parts, and that
 would mean specifying part=value for each value.
 <p/>
 There are many situations where it's handy to specify a set of values for
 something on a single line without syntactic cruft, and this complex type exercises
 those generation mechanisms for reference values.

ComplexTypeDefinition
name			DmtMultiValuedRequiredPartPrimitive
requiredPart	Integer		value        "A bunch of integers" multivalued=true
description		Testing a multi-valued required part with primitive type.
