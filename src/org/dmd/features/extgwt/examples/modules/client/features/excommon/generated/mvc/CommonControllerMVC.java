package org.dmd.features.extgwt.examples.modules.client.features.excommon.generated.mvc;

import com.extjs.gxt.ui.client.mvc.Controller;
import com.extjs.gxt.ui.client.mvc.Dispatcher;
import com.extjs.gxt.ui.client.mvc.AppEvent;
import com.extjs.gxt.ui.client.event.EventType;
import com.extjs.gxt.ui.client.Registry;
import org.dmd.features.extgwt.client.ApplicationIF;
import org.dmd.features.extgwt.client.extended.MenuController;
import org.dmd.features.extgwt.client.util.menu.DefaultToolbar;
import org.dmd.features.extgwt.examples.modules.client.features.excommon.extended.CommonView;

/**
 * The CommonController provides some common functionality.
 * <P>
 * This code was auto-generated by the mvcgenerator utility and shouldn't be altered manually!
 * Generated from: org.dmd.features.extgwt.extended.MvcController.initCodeGenInfo(MvcController.java:112)
 */
abstract public class CommonControllerMVC extends Controller {

    // Resources
    protected ApplicationIF application;

    // Events
    public EventType CommonInit;
    public EventType MvcRegisterMenus;

    // org.dmd.features.extgwt.extended.MvcController.initLocalVariables(MvcController.java:444)

    // View(s)
    protected CommonView commonView;

    // Action(s)

    // Menus
    protected DefaultToolbar commonMainMenuBar;

    // Menu items

    // Menu separators

    protected CommonControllerMVC(){
        // Resolve our events
        CommonInit = getApplication().getEvent("common.init");
        MvcRegisterMenus = getApplication().getEvent("mvc.registerMenus");

        // org.dmd.features.extgwt.util.MvcGenerator.dumpController(MvcGenerator.java:177)
        registerEventTypes(CommonInit);
        registerEventTypes(MvcRegisterMenus);

        // Instantiate our views
        commonView = new CommonView(this);

        // Instantiate our multiviews

        // Instantiate our actions

        // Instantiate our menus
        commonMainMenuBar = new DefaultToolbar("common.mainMenuBar");

        // Instantiate our menu items

        // Instantiate our menu separators
    }

    /**
     * Derived classes must override this method to perform their initialization behaviour.
     */
    abstract protected void initialize();

    // org.dmd.features.extgwt.extended.MvcController.initHandleEventFunction(MvcController.java:538)
    public void handleEvent(AppEvent event) {
        EventType type = event.getType();
        if (type == CommonInit) {
            forwardToView(commonView,event);
        }
        else if (type == MvcRegisterMenus) {
            handleMvcRegisterMenusEvent(event,(MenuController)event.getData());
        }
    }

    /**
     * When we receive this event, we add our menus, items and actions
     * to the menu controller.
     */
    protected void handleMvcRegisterMenusEvent(AppEvent event, MenuController mc){
        mc.addMenu(commonMainMenuBar);
    }

    /**
     * @return This is the universal handle to the application.
     */
    public ApplicationIF getApplication(){
        if (application == null)
            application = (ApplicationIF) Registry.get("application");
        return(application);
    }

    public void dispatchCommonInit(){
        Dispatcher.get().dispatch(CommonInit);
    }

}
