package org.dmd.dmg.generated.dmw;

// Generated from: org.dmd.util.codegen.ImportManager.getFormattedImports(ImportManager.java:82)
// Called from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:349)
import org.dmd.dmc.*;                                          // If any attributes - (BaseDMWGeneratorNewest.java:903)
import org.dmd.dmc.types.StringName;                           // Is named by - (BaseDMWGeneratorNewest.java:884)
import org.dmd.dmg.extended.ActifactGenerator;                 // Required for getModificationRecorder() - (BaseDMWGeneratorNewest.java:896)
import org.dmd.dmg.generated.dmo.ActifactGeneratorDMO;         // Class not auxiliary or abstract - (BaseDMWGeneratorNewest.java:1068)
import org.dmd.dms.*;                                          // Always 2 - (BaseDMWGeneratorNewest.java:888)
import org.dmd.dms.generated.dmo.MetaDMSAG;                    // Required for MODREC constructor - (BaseDMWGeneratorNewest.java:892)
import org.dmd.dms.generated.types.DmcTypeModifierMV;          // Required for MODREC constructor - (BaseDMWGeneratorNewest.java:891)
import org.dmd.dmw.DmwNamedObjectWrapper;                      // Named object wrapper - (BaseDMWGeneratorNewest.java:1058)


/**
 * null
 * <P>
 * Generated from the dmg schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:366)
 */
public class ActifactGeneratorDMW extends DmwNamedObjectWrapper implements DmcNamedObjectIF {

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:443)
    public ActifactGeneratorDMW() {
        super(new ActifactGeneratorDMO(), org.dmd.dmg.generated.DmgSchemaAG._ActifactGenerator);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:449)
    public ActifactGeneratorDMW(DmcTypeModifierMV mods) {
        super(new ActifactGeneratorDMO(mods), org.dmd.dmg.generated.DmgSchemaAG._ActifactGenerator);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:491)
    public ActifactGenerator getModificationRecorder(){
        ActifactGenerator rc = new ActifactGenerator();
        rc.setName(getName());
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        return(rc);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:512)
    public ActifactGeneratorDMW(ActifactGeneratorDMO obj) {
        super(obj, org.dmd.dmg.generated.DmgSchemaAG._ActifactGenerator);
    }

    public ActifactGenerator cloneIt() {
        ActifactGenerator rc = new ActifactGenerator();
        rc.setDmcObject(getDMO().cloneIt());
        return(rc);
    }

    public ActifactGeneratorDMO getDMO() {
        return((ActifactGeneratorDMO) core);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:527)
    protected ActifactGeneratorDMW(ActifactGeneratorDMO obj, ClassDefinition cd) {
        super(obj,cd);
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.getAccessFunctions(BaseDMWGeneratorNewest.java:1113)
    public StringName getObjectName(){
        return(((ActifactGeneratorDMO) core).getName());
    }

    public int hashCode(){
        return(getObjectName().hashCode());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(((ActifactGeneratorDMO) core).getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof ActifactGeneratorDMW){
            return( getObjectName().equals( ((ActifactGeneratorDMW) obj).getObjectName()) );
        }
        return(false);
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1286)
    public String getGenClass(){
        return(((ActifactGeneratorDMO) core).getGenClass());
    }

    /**
     * Sets genClass to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1396)
    public void setGenClass(Object value) throws DmcValueException {
        ((ActifactGeneratorDMO) core).setGenClass(value);
    }

    /**
     * Sets genClass to the specified value.
     * @param value String
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1405)
    public void setGenClass(String value){
        ((ActifactGeneratorDMO) core).setGenClass(value);
    }

    /**
     * Removes the genClass attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1431)
    public void remGenClass(){
        ((ActifactGeneratorDMO) core).remGenClass();
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1286)
    public StringName getName(){
        return(((ActifactGeneratorDMO) core).getName());
    }

    /**
     * Sets name to the specified value.
     * @param value A value compatible with DmcTypeStringName
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1396)
    public void setName(Object value) throws DmcValueException {
        ((ActifactGeneratorDMO) core).setName(value);
    }

    /**
     * Sets name to the specified value.
     * @param value StringName
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1405)
    public void setName(StringName value){
        ((ActifactGeneratorDMO) core).setName(value);
    }

    /**
     * Removes the name attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1431)
    public void remName(){
        ((ActifactGeneratorDMO) core).remName();
    }


}
