TypeDefinition
name 			String
typeClassName	org.dmd.dms.shared.types.DmcTypeString
description		Provides support for String values.

TypeDefinition
name 			DmcObject
typeClassName	org.dmd.dms.shared.types.DmcTypeDmcObject
primitiveType   org.dmd.core.DmcObject
description		The DmcObject type allows for the storage of raw DmcObjects.

TypeDefinition
name 			ClassInfoRef
typeClassName	org.dmd.dms.shared.types.DmcTypeClassInfoRef
primitiveType   org.dmd.dms.shared.types.ClassInfoRef
description		The ClassInfoRef type allows for the representation of class information 
 via the Dark Matter ID associated with a ClassDefinition. It provides transient access
 to the static DmcClassInfo from the generated DMSAG, regardless of the environment in
 which it exists. 

//TypeDefinition
//name 			DmcAttribute
//typeClassName	org.dmd.dms.shared.types.DmcTypeDmcAttribute
//primitiveType   org.dmd.core.DmcAttribute
//genericArgs     <?>
//description		The DmcAttribute type allows for the storage of other attributes in an attribute. Yikes!

TypeDefinition
name 			NameContainer
typeClassName	org.dmd.dms.shared.types.DmcTypeNameContainer
primitiveType   org.dmd.dms.shared.types.NameContainer
altType			DmcObjectName
altTypeImport	org.dmd.core.DmcObjectName
description		The NameContainer type allows for the storage of object names of different types.
 This mechanism is required because the naming mechanisms associated with dark-matter allow for
 different ways of naming objects. When the name of something is transported, it has to be 
 self describing i.e. the type of the naming attribute must be known so that the appropriate 
 name type can be instantiated. An example of this comes from the Dark Matter Protocol. 
 The targets attribute is defined as a NameContainer. An instance of targets might appear
 as follows:
 <pre>
 targets uuidName 809408a7-f00b-448c-beb6-00337e83acc4
 </pre>
 As you can see, the attribute name is <code>targets</code> and the value is <code> uuidName 809408a7-f00b-448c-beb6-00337e83acc4</code>.
 The <code>uuidName</code> attribute is the <code> designatedNameAttribute </code> for the <code> UUIDName </code> type. So, when parsing/deserializing a
 name container, we always know the underlying type of the name.
 <p/>
 This approach makes dark-matter name handling completely extensible.
 <p/>
 A similar approach is taken to filter specifications via the FilterContainer.

TypeDefinition
name 			FilterContainer
typeClassName	org.dmd.dms.shared.types.DmcTypeFilterContainer
primitiveType   org.dmd.dms.shared.types.FilterContainer
altType			DmcFilter
altTypeImport	org.dmd.core.DmcFilter
description		The FilterContainer type allows for the storage of object filters of different types.

TypeDefinition
name 			AttributeID
typeClassName	org.dmd.dms.shared.types.DmcTypeAttributeID
primitiveType   org.dmd.dms.shared.types.AttributeID
altType			DmcAttributeInfo
altTypeImport	org.dmd.core.schema.DmcAttributeInfo
description		The AttributeID type allows for the storage of unique attribute identifiers.
 Currently this is only used in the dark-matter protocol attributeSelector attribute.

TypeDefinition
name    		Integer
typeClassName	org.dmd.dms.shared.types.DmcTypeInteger
description		Provides support for Integer values.

TypeDefinition
name    		Float
typeClassName	org.dmd.dms.shared.types.DmcTypeFloat
description		Provides support for Float values.

TypeDefinition
name    		Double
typeClassName	org.dmd.dms.shared.types.DmcTypeDouble
description		Provides support for Double values.

TypeDefinition
name    		Long
typeClassName	org.dmd.dms.shared.types.DmcTypeLong
description		Provides support for Long values.

TypeDefinition
name    		Short
typeClassName	org.dmd.dms.shared.types.DmcTypeShort
description		Provides support for Short values.

TypeDefinition
name    		Byte
typeClassName	org.dmd.dms.shared.types.DmcTypeByte
description		Provides support for Byte values.

TypeDefinition
name    		Date
typeClassName	org.dmd.dms.shared.types.DmcTypeDate
primitiveType	java.util.Date
description		Provides support for Date values.

TypeDefinition
name	 		Boolean
typeClassName	org.dmd.dms.shared.types.DmcTypeBoolean
nullReturnValue false
description		Provides support for Boolean values. This type makes use of the <code> nullReturnValue </code>
 flag so that, even if there is no value for an attribute of this type, a value of false will
 be returned.

TypeDefinition
name    		EnumValue
typeClassName	org.dmd.dms.shared.types.DmcTypeEnumValue
primitiveType   org.dmd.dms.shared.types.EnumValue
description  The EnumValue type is used to store the definition of one enumerated value
 that comprises part of an overall EnumDefinition.
 <p/>
 The value of an EnumValue is comprised of at least three tokens and possibly a label:
 <pre>
 [enum integer value] [enum value name] [enum description] <: label>
 </pre>
 For example:
 <pre>
 0 ABSTRACT Here is the definition of abstract. : Abstract
 </pre>
 Within an EnumDefinition, each EnumValue must have a unique integer identifier
 and a unique value name.
 <p/>
 The enum value name is automatically set to uppercase, even if it is specified
 in lower or mixed case.

TypeDefinition
name    		Modifier
typeClassName	org.dmd.dms.shared.types.DmcTypeModifier
primitiveType   org.dmd.dms.shared.types.Modifier
description     The Modifier type is used to represent modification operations on a DmcObject.
 Any modification to an object can be represented by a Modifier. The string representation
 of a modification can take the following forms:
 <ul>
 <li> &ltattribute name&gt ADD &ltvalue&gt</li>
 <li> &ltattribute name&gt DEL &ltvalue&gt</li>
 <li> &ltattribute name&gt SET &ltvalue&gt</li>
 <li> &ltattribute name&gt NTH &ltindex&gt &ltvalue&gt</li>
 <li> &ltattribute name&gt NTH &ltindex&gt</li>
 <li> &ltattribute name&gt REM </li>
 </ul>

TypeDefinition
name			StringName
typeClassName	org.dmd.dms.shared.types.DmcTypeStringName
primitiveType	org.dmd.dms.shared.types.StringName
isNameType		true
description		The StringName is the simplest naming mechanism available; it's just a String.

TypeDefinition
name			DefinitionName
typeClassName	org.dmd.dms.shared.types.DmcTypeDefinitionName
primitiveType	org.dmd.dms.shared.types.DefinitionName
isNameType		true
description		The DefinitionName provides naming of dark-matter definitions.

TypeDefinition
name			CamelCaseName
typeClassName	org.dmd.dms.shared.types.DmcTypeCamelCaseName
primitiveType	org.dmd.dms.shared.types.CamelCaseName
isNameType		true
description		The CamelCaseName is a string based name that must start with an alpha character
 which is followed by a mix of alphanumerics.

TypeDefinition
name			RuleName
typeClassName	org.dmd.dms.shared.types.DmcTypeRuleName
primitiveType	org.dmd.dms.shared.types.RuleName
isNameType		true
description		The RuleName is a string based name that must start with an alpha character
 which is followed by a mix of alphanumerics. 

TypeDefinition
name			IntegerName
typeClassName	org.dmd.dms.shared.types.DmcTypeIntegerName
primitiveType	org.dmd.dms.shared.types.IntegerName
isNameType		true
description		An IntegerName provides the means to uniquely identify an object using an integer value.

TypeDefinition
name			LongName
typeClassName	org.dmd.dms.shared.types.DmcTypeLongName
primitiveType	org.dmd.dms.shared.types.LongName
isNameType		true
description		A LongName provides the means to uniquely identify an object using a long value.

TypeDefinition
name				DotName
typeClassName		org.dmd.dms.shared.types.DmcTypeDotName
primitiveType		org.dmd.dms.shared.types.DotName
isNameType			true
isHierarchicName	true
description			The DotName provides standard mechanisms to deal with hierarchic names composed of
 strings interspersed with periods (dots) to separate the name elements. For example
 a dot name might be one.two.three

TypeDefinition
name			ClassFilter
typeClassName	org.dmd.dms.shared.types.DmcTypeClassFilter
primitiveType	org.dmd.dms.shared.types.ClassFilter
isFilterType	true
description		The ClassFilter is used to perform matches against objects based on their class
 or auxiliary classes.

TypeDefinition
name 			IntegerToString
typeClassName	org.dmd.dms.shared.types.DmcTypeIntegerToString
primitiveType	org.dmd.dms.shared.types.IntegerToString
keyClass        Integer
description		Provides support for hashed integer to string values.

TypeDefinition
name 			StringToString
typeClassName	org.dmd.dms.shared.types.DmcTypeStringToString
primitiveType	org.dmd.dms.shared.types.StringToString
keyClass        String
description		Provides support for hashed string to string values.

TypeDefinition
name 			UUIDLite
typeClassName	org.dmd.dms.shared.types.DmcTypeUUIDLite
primitiveType	org.dmd.dms.shared.types.UUIDLite
description		The UUIDLite provides support for UUIDs in GWT environments; a full UUID implementation
 is not supported by the GWT JRE Emulation mechanisms. It holds two long values that represent a complete
 java.util.UUID as generated within the server environment. The methods to parse a UUID from a String and
 present it as a String are taken from the java.util.UUID class.

TypeDefinition
name 			UUIDName
typeClassName	org.dmd.dms.shared.types.DmcTypeUUIDName
primitiveType	org.dmd.dms.shared.types.UUIDName
isNameType		true
description		The UUIDName allows for the naming of objects based on the GWT compatible UUIDLite type.

TypeDefinition
name 			IntegerToBoolean
typeClassName	org.dmd.dms.shared.types.DmcTypeIntegerToBoolean
primitiveType	org.dmd.dms.shared.types.IntegerToBoolean
keyClass        Integer
description		Provides support for hashed integer to Boolean values.

TypeDefinition
name 			IntegerToUUIDLite
typeClassName	org.dmd.dms.shared.types.DmcTypeIntegerToUUIDLite
primitiveType	org.dmd.dms.shared.types.IntegerToUUIDLite
keyClass        Integer
description		Provides support for hashed integer to UUIDLite values.

TypeDefinition
name			FullyQualifiedName
typeClassName	org.dmd.dms.shared.types.DmcTypeFullyQualifiedName
primitiveType	org.dmd.dms.shared.types.FullyQualifiedName
isNameType		true

TypeDefinition
name    		LabelledIntegerDataPoint
typeClassName	org.dmd.dms.shared.types.DmcTypeLabelledIntegerDataPoint
primitiveType   org.dmd.dms.shared.types.LabelledIntegerDataPoint
description		Represents a single, labelled Integer data point. Generally used for pie
 chart data.

TypeDefinition
name    		TimeDoubleDataPoint
typeClassName	org.dmd.dms.shared.types.DmcTypeTimeDoubleDataPoint
primitiveType   org.dmd.dms.shared.types.TimeDoubleDataPoint
description		Represents a single Double data point at a moment in time. Generally used
 for line or column chart data.
